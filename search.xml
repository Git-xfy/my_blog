<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>优化——全局优化</title>
      <link href="/2025/05/14/orbslam2-16/"/>
      <url>/2025/05/14/orbslam2-16/</url>
      
        <content type="html"><![CDATA[<h1 id="global-optimization"><a class="markdownIt-Anchor" href="#global-optimization"></a> Global Optimization</h1><h2 id="一-全局优化的目标与核心思想"><a class="markdownIt-Anchor" href="#一-全局优化的目标与核心思想"></a> 一、全局优化的目标与核心思想</h2><p>在视觉惯性SLAM (Simultaneous Localization and Mapping) 系统中，<strong>全局优化 (Global Bundle Adjustment, GBA)</strong> 是一个至关重要的后端优化步骤。其核心目标是<strong>优化系统中所有关键帧的位姿（位置和姿态）以及所有三维地图点（Map Points）的空间坐标</strong>。通过这一过程，可以显著减少由于传感器噪声、运动估计误差和匹配不确定性等因素造成的累积漂移，从而构建一个全局一致且高精度的地图，并提升相机自身的定位精度。</p><p><strong>核心思想：捆绑调整 (Bundle Adjustment, BA)</strong></p><p>全局优化的数学实质是执行一次大规模的捆绑调整。这个名字形象地描述了其工作原理：想象场景中的三维点通过光线（bundles of rays）投影到不同时刻相机捕获的图像上。BA的目标就是通过微调每一个关键帧的位姿和每一个三维地图点的位置，使得这些三维点在各个观测到它的关键帧图像上的<strong>重投影误差 (Reprojection Error)</strong> 之和最小。重投影误差指的是观测到的图像特征点位置与根据当前估计的相机位姿和三维点位置计算得到的理论投影位置之间的差异。</p><p>与局部建图线程中进行的<strong>局部捆绑调整 (Local Bundle Adjustment)</strong> 相比，全局优化考虑的是整个SLAM过程中积累下来的<strong>所有</strong>关键帧和地图点，因此计算量更大，但对全局一致性的提升也更为显著。</p><h2 id="二-全局优化的关键元素顶点与边基于图优化框架-g2o"><a class="markdownIt-Anchor" href="#二-全局优化的关键元素顶点与边基于图优化框架-g2o"></a> 二、全局优化的关键元素：顶点与边（基于图优化框架 G2O）</h2><p>全局优化问题通常被构建为一个图（Graph），其中节点（顶点）代表待优化的变量，边代表这些变量之间的约束关系。开源图优化库g2o是ORB-SLAM2中实现BA的核心工具。</p><h3 id="1-顶点-vertices"><a class="markdownIt-Anchor" href="#1-顶点-vertices"></a> 1. 顶点 (Vertices)</h3><p>顶点代表了需要优化的参数。在全局BA中，主要有两类顶点：</p><ul><li><strong>关键帧位姿 (KeyFrame Poses):</strong><ul><li>表示相机在采集每个关键帧时相对于世界坐标系的六自由度位姿（3个平移，3个旋转）。</li><li>在g2o中，通常使用 <code>g2o::VertexSE3Expmap</code> 类型来表示。SE(3)代表三维刚体变换（旋转和平移），Expmap是李代数到李群的一种映射方式。</li><li><strong>参考基准:</strong> 为了避免整个系统的位姿发生整体漂移（即所谓的“无约束自由度”），必须固定一个参考。通常，<strong>系统中的第一个关键帧（索引为0的关键帧）的位姿被设为固定 (fixed)，不参与优化</strong>。所有其他关键帧的位姿和地图点都将相对于这个固定的参考系进行调整。</li></ul></li><li><strong>地图点 (Map Points):</strong><ul><li>表示场景中稳定的三维特征点的世界坐标 (x, y, z)。</li><li>在g2o中，通常使用 <code>g2o::VertexSBAPointXYZ</code> 类型来表示。SBA代表稀疏捆绑调整 (Sparse Bundle Adjustment)。</li><li>这些顶点代表了地图的几何结构。</li></ul></li></ul><h3 id="2-边-edges"><a class="markdownIt-Anchor" href="#2-边-edges"></a> 2. 边 (Edges)</h3><p>边代表了顶点之间的约束关系，即观测模型。在全局BA中，主要的边是连接地图点和观测到该地图点的关键帧之间的<strong>投影关系</strong>。</p><ul><li><strong>二元边 (Binary Edges):</strong> 因为一条边连接了两个顶点（一个地图点顶点和一个关键帧位姿顶点）。</li><li><strong>误差定义:</strong> 边的核心是定义一个误差项，即前面提到的重投影误差。</li><li><strong>边的类型根据相机模型而不同:</strong><ul><li><strong>单目相机 (Monocular Camera):</strong><ul><li>使用 <code>g2o::EdgeSE3ProjectXYZ</code> 类型的边。</li><li>这种边约束的是一个三维地图点在给定相机位姿和相机内参的情况下，投影到该关键帧图像上的二维像素坐标。误差是二维向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>e</mi><mi>u</mi></msub><mo separator="true">,</mo><msub><mi>e</mi><mi>v</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(e_u, e_v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li></ul></li><li><strong>双目相机 (Stereo Camera) 或 RGB-D 相机:</strong><ul><li>使用 <code>g2o::EdgeStereoSE3ProjectXYZ</code> 类型的边。</li><li>对于双目相机，除了二维像素坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>u</mi><mi>L</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>L</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u_L, v_L)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 外，还会利用左右目图像的视差信息来约束点的深度，或者直接约束其在右图像中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">u_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 坐标。因此，误差通常是三维的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>e</mi><mrow><mi>u</mi><mi>L</mi></mrow></msub><mo separator="true">,</mo><msub><mi>e</mi><mrow><mi>v</mi><mi>L</mi></mrow></msub><mo separator="true">,</mo><msub><mi>e</mi><mrow><mi>u</mi><mi>R</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(e_{uL}, e_{vL}, e_{uR})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>e</mi><mrow><mi>u</mi><mi>L</mi></mrow></msub><mo separator="true">,</mo><msub><mi>e</mi><mrow><mi>v</mi><mi>L</mi></mrow></msub><mo separator="true">,</mo><msub><mi>e</mi><mrow><mi>d</mi><mi>e</mi><mi>p</mi><mi>t</mi><mi>h</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(e_{uL}, e_{vL}, e_{depth})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li><li>对于RGB-D相机，可以直接获取深度信息，因此约束也是三维的。</li></ul></li></ul></li></ul><p>书中强调，全局优化中顶点和边的类型定义与局部地图优化函数 (LocalBundleAdjustment) 中的是相同的，误差类型也一致。主要的区别在于全局优化作用于<strong>全局地图</strong>，而局部优化作用于<strong>局部地图</strong>。</p><h2 id="三-全局优化的详细流程"><a class="markdownIt-Anchor" href="#三-全局优化的详细流程"></a> 三、全局优化的详细流程</h2><p>ORB-SLAM2中的全局优化函数 <code>GlobalBundleAdjustemnt</code> (在 <code>Optimizer::BundleAdjustment</code> 函数中实现主体逻辑) 主要遵循以下步骤：</p><h3 id="第1步初始化g2o优化器"><a class="markdownIt-Anchor" href="#第1步初始化g2o优化器"></a> 第1步：初始化g2o优化器</h3><p>这是进行图优化的准备工作，配置优化求解的框架。</p><ul><li><strong>创建稀疏优化器对象:</strong><ul><li>例如 <code>g2o::SparseOptimizer optimizer;</code></li></ul></li><li><strong>选择并配置求解器 (Solver):</strong><ul><li>优化问题通常是非线性的最小二乘问题。求解这类问题需要迭代计算，每一步迭代通常涉及求解一个线性方程组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi mathvariant="normal">Δ</mi><mi>x</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">H \Delta x = -b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal">b</span></span></span></span>。</li><li><strong>线性求解器 (Linear Solver):</strong> 负责求解这个线性方程组。常见的选择是基于Cholesky分解或QR分解的求解器，如 <code>g2o::LinearSolverEigen&lt;g2o::BlockSolver_6_3::PoseMatrixType&gt;()</code>，这里使用了Eigen库进行矩阵运算。</li><li><strong>块求解器 (Block Solver):</strong> 封装了线性求解器，并定义了H矩阵的块结构。这里的 <code>g2o::BlockSolver_6_3</code> 表示H矩阵中，与相机位姿相关的块是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn><mo>×</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">6 \times 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span>（SE3位姿有6个自由度），与地图点相关的块是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>（三维点有3个自由度）。</li></ul></li><li><strong>选择优化算法 (Optimization Algorithm):</strong><ul><li>指定了如何进行迭代下降。常用的有高斯-牛顿法 (Gauss-Newton) 或莱文贝格-马夸特法 (Levenberg-Marquardt, LM)。</li><li>书中代码示例使用了 <code>g2o::OptimizationAlgorithmLevenberg</code>。LM算法结合了高斯-牛顿法和梯度下降法的优点，具有较好的鲁棒性。</li></ul></li><li><strong>设置优化器算法:</strong><ul><li><code>optimizer.setAlgorithm(solver);</code></li></ul></li><li><strong>外部停止标志 (Optional):</strong><ul><li><code>optimizer.setForceStopFlag(pbStopFlag);</code> 允许从外部提前终止优化过程。</li></ul></li></ul><h3 id="第2步向优化器中添加顶点"><a class="markdownIt-Anchor" href="#第2步向优化器中添加顶点"></a> 第2步：向优化器中添加顶点</h3><p>将所有待优化的关键帧位姿和地图点作为顶点加入到优化器中。</p><ul><li><strong>Step 2.1: 添加关键帧位姿作为顶点:</strong><ul><li>遍历当前地图中所有的有效关键帧 ( <code>vpKFs</code> )。</li><li>对每个未标记为 <code>isBad()</code> 的关键帧 <code>pKF</code>：<ul><li>创建一个 <code>g2o::VertexSE3Expmap</code> 对象: <code>vSE3 = new g2o::VertexSE3Expmap();</code></li><li><strong>设置初始估计值:</strong> 将关键帧当前的位姿 <code>pKF-&gt;GetPose()</code> 转换为g2o的SE3Quat格式，并设置为顶点的初始估计 <code>vSE3-&gt;setEstimate(Converter::toSE3Quat(pKF-&gt;GetPose()));</code>。</li><li><strong>设置顶点ID:</strong> <code>vSE3-&gt;setId(pKF-&gt;mnId);</code> 使用关键帧自身的ID作为顶点的ID。</li><li><strong>固定参考帧:</strong> 如果是第0帧 (<code>pKF-&gt;mnId == 0</code>)，则将其固定 <code>vSE3-&gt;setFixed(true);</code>。</li><li>将顶点添加到优化器: <code>optimizer.addVertex(vSE3);</code></li><li>记录已添加的关键帧的最大ID <code>maxKFid</code>，用于后续地图点顶点ID的设置。</li></ul></li></ul></li><li><strong>Step 2.2: 添加地图点作为顶点:</strong><ul><li>遍历当前地图中所有的有效地图点 ( <code>vpMP</code> )。</li><li>对每个未标记为 <code>isBad()</code> 的地图点 <code>pMP</code>：<ul><li>创建一个 <code>g2o::VertexSBAPointXYZ</code> 对象: <code>vPoint = new g2o::VertexSBAPointXYZ();</code></li><li><strong>设置初始估计值:</strong> 将地图点当前的世界坐标 <code>pMP-&gt;GetWorldPos()</code> 转换为g2o的Vector3d格式，并设置为顶点的初始估计 <code>vPoint-&gt;setEstimate(Converter::toVector3d(pMP-&gt;GetWorldPos()));</code>。</li><li><strong>设置顶点ID:</strong> 为了避免与关键帧顶点的ID冲突，地图点顶点的ID通常设置为 <code>pMP-&gt;mnId + maxKFid + 1;</code>。</li><li><strong>边缘化/舒尔消元 (Marginalization):</strong> <code>vPoint-&gt;setMarginalized(true);</code> 这是一个非常重要的步骤。在BA问题中，地图点的数量通常远大于相机位姿的数量。通过将地图点顶点设置为边缘化，可以在求解线性方程组时，利用舒尔消元的技巧，先消去与地图点相关的变量，从而显著减小需求解的线性系统的规模，提高求解效率。这要求H矩阵具有特定的稀疏结构（相机-点分离）。</li><li>将顶点添加到优化器: <code>optimizer.addVertex(vPoint);</code></li></ul></li></ul></li></ul><h3 id="第3步向优化器中添加投影边"><a class="markdownIt-Anchor" href="#第3步向优化器中添加投影边"></a> 第3步：向优化器中添加投影边</h3><p>在添加地图点顶点的同时，遍历该地图点被哪些关键帧观测到，并为每一次有效的观测添加一条投影边。</p><ul><li>对于每个地图点 <code>pMP</code>，获取其观测信息 <code>observations = pMP-&gt;GetObservations()</code>，这是一个记录了观测到此点的关键帧及其在该关键帧中对应特征点索引的map。</li><li>遍历 <code>observations</code> 中的每一个观测 <code>(pKF, feature_index)</code>：<ul><li>检查观测关键帧 <code>pKF</code> 是否有效 (非 <code>isBad()</code> 且 <code>pKF-&gt;mnId &lt;= maxKFid</code>，确保是已加入优化器的关键帧)。</li><li>获取该地图点在当前关键帧 <code>pKF</code> 图像上的二维特征点（通常是去畸变后的归一化坐标或像素坐标） <code>kpUn = pKF-&gt;mvKeysUn[feature_index];</code>。</li><li><strong>根据相机类型创建边:</strong><ul><li><strong>单目相机模式 (<code>pKF-&gt;mvuRight[feature_index] &lt; 0</code>):</strong><ul><li>创建 <code>g2o::EdgeSE3ProjectXYZ</code> 对象: <code>e = new g2o::EdgeSE3ProjectXYZ();</code></li><li><strong>连接顶点:</strong><ul><li>边连接的第0个顶点是地图点: <code>e-&gt;setVertex(0, dynamic_cast&lt;g2o::OptimizableGraph::Vertex*&gt;(optimizer.vertex(id)));</code> ( <code>id</code> 是地图点顶点的ID)。</li><li>边连接的第1个顶点是关键帧位姿: <code>e-&gt;setVertex(1, dynamic_cast&lt;g2o::OptimizableGraph::Vertex*&gt;(optimizer.vertex(pKF-&gt;mnId)));</code>。</li></ul></li><li><strong>设置测量值 (Observation/Measurement):</strong> <code>obs &lt;&lt; kpUn.pt.x, kpUn.pt.y; e-&gt;setMeasurement(obs);</code> 测量值即观测到的二维特征点坐标。</li><li><strong>设置信息矩阵 (Information Matrix):</strong> 信息矩阵是测量噪声协方差矩阵的逆，它决定了这条边在总误差函数中的权重。通常与特征点在图像金字塔中的层级 <code>kpUn.octave</code> 相关，层级越高（图像越小，特征点越模糊），其不确定性越大，信息值（权重）越小。 <code>const float&amp; invSigma2 = pKF-&gt;mvInvLevelSigma2[kpUn.octave]; e-&gt;setInformation(Eigen::Matrix2d::Identity() * invSigma2);</code></li><li><strong>设置鲁棒核函数 (Robust Kernel):</strong> 为了减小外点（错误的观测）对优化结果的负面影响，会使用鲁棒核函数。当误差（重投影误差）较大时，鲁棒核函数会动态降低该误差项的权重。<ul><li><code>g2o::RobustKernelHuber* rk = new g2o::RobustKernelHuber; e-&gt;setRobustKernel(rk);</code></li><li><code>rk-&gt;setDelta(thHuber2D);</code> Delta是Huber核的阈值，例如 <code>thHuber2D = sqrt(5.99)</code> (对应卡方分布自由度为2，置信度95%的阈值)。如果误差的平方超过这个阈值，其对总代价的贡献会从二次变为线性，避免误差过大导致优化跑飞。</li></ul></li><li><strong>设置相机内参:</strong> 投影计算需要相机内参 (焦距fx, fy, 主点cx, cy)。 <code>e-&gt;fx = pKF-&gt;fx; e-&gt;fy = pKF-&gt;fy; e-&gt;cx = pKF-&gt;cx; e-&gt;cy = pKF-&gt;cy;</code></li><li>将边添加到优化器: <code>optimizer.addEdge(e);</code></li></ul></li><li><strong>双目相机或RGB-D相机模式 (书中未详述，但原理类似):</strong><ul><li>会创建 <code>g2o::EdgeStereoSE3ProjectXYZ</code> 类型的边。</li><li>测量值会包含深度信息或右图像的u坐标。例如，对于双目，测量值可能是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>u</mi><mi>L</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>L</mi></msub><mo separator="true">,</mo><msub><mi>u</mi><mi>R</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u_L, v_L, u_R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li><li>信息矩阵通常是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 的。</li><li>鲁棒核的阈值可能是 <code>thHuber3D = sqrt(7.815)</code> (对应卡方分布自由度为3，置信度95%的阈值)。</li><li>同样需要设置相机内参，包括双目基线 <code>bf</code>。</li></ul></li></ul></li></ul></li></ul><h3 id="第4步开始优化"><a class="markdownIt-Anchor" href="#第4步开始优化"></a> 第4步：开始优化</h3><p>配置完成后，启动优化迭代过程。</p><ul><li><strong>初始化优化:</strong> <code>optimizer.initializeOptimization();</code> 这一步会构建Hessian矩阵的结构等。</li><li><strong>执行优化:</strong> <code>optimizer.optimize(nIterations);</code> <code>nIterations</code> 是预设的迭代次数（例如书中提到的10次）。优化器会使用选择的算法（如LM）迭代更新顶点的估计值，直到满足收敛条件或达到最大迭代次数。</li></ul><h3 id="第5步将优化的结果保存起来"><a class="markdownIt-Anchor" href="#第5步将优化的结果保存起来"></a> 第5步：将优化的结果保存起来</h3><p>优化完成后，优化器中的顶点值已经更新为最优估计。需要将这些结果提取出来并更新到SLAM系统的关键帧和地图点对象中。</p><ul><li><strong>更新关键帧位姿:</strong><ul><li>遍历所有参与优化的关键帧 <code>vpKFs</code>。</li><li>对于每个有效关键帧 <code>pKF</code>:<ul><li>从优化器中获取对应的位姿顶点: <code>g2o::VertexSE3Expmap* vSE3 = static_cast&lt;g2o::VertexSE3Expmap*&gt;(optimizer.vertex(pKF-&gt;mnId));</code></li><li>获取优化后的位姿估计: <code>g2o::SE3Quat SE3quat = vSE3-&gt;estimate();</code></li><li><strong>有条件地更新位姿:</strong><ul><li><strong>特殊情况 (<code>nLoopKF == 0</code>):</strong> 书中提到，这通常表示该全局BA是在系统刚初始化，地图中只有少量关键帧时（例如，创建初始地图点时）调用的。此时，优化后的位姿可以直接写入关键帧的成员变量中: <code>pKF-&gt;SetPose(Converter::toCvMat(SE3quat));</code></li><li><strong>常规情况 (闭环后调用):</strong> 优化后的位姿会先存储在关键帧的一个专门的成员变量 <code>mTcwGBA</code> 中，而不是立即覆盖原始位姿。 <code>Converter::toCvMat(SE3quat).copyTo(pKF-&gt;mTcwGBA);</code> 这样做可能是为了后续进行验证、或者等待其他模块（如位姿图优化）确认后再统一更新，以保证系统状态的一致性。同时记录是哪个闭环触发了这次全局BA <code>pKF-&gt;mnBAGlobalForKF = nLoopKF;</code>。</li></ul></li></ul></li></ul></li><li><strong>更新地图点位置:</strong> (书中代码片段未完整展示这部分，但逻辑相似)<ul><li>遍历所有参与优化的地图点 <code>vpMP</code>。</li><li>对于每个有效地图点 <code>pMP</code>:<ul><li>从优化器中获取对应的地图点顶点 (使用 <code>pMP-&gt;mnId + maxKFid + 1</code> 作为ID)。</li><li>获取优化后的三维坐标估计。</li><li>将优化后的坐标更新回地图点对象 <code>pMP-&gt;SetWorldPos(...)</code>。</li><li>如果一个地图点在优化后其观测边数量过少，或者误差过大，可能会被判断为外点并剔除。</li></ul></li></ul></li></ul><h2 id="四-全局优化的意义与作用"><a class="markdownIt-Anchor" href="#四-全局优化的意义与作用"></a> 四、全局优化的意义与作用</h2><ol><li><strong>消除累积误差:</strong> SLAM系统在长时间运行时，由于传感器测量噪声、特征匹配的不确定性以及运动估计的微小误差会不断累积，导致估计的轨迹和地图逐渐偏离真实情况。全局优化通过同时考虑所有历史观测和约束，将这些累积误差在整个系统中进行分散和最小化。</li><li><strong>提高地图一致性:</strong> 全局优化确保了构建的地图在全局尺度上是几何一致和准确的。这对于大范围场景的建图尤为重要。特别是在发生<strong>回环检测 (Loop Closure)</strong> 后（即相机回到了先前经过的区域并成功识别出来），全局优化是修正整个轨迹和地图，使回环处的轨迹闭合、地图对齐的关键步骤。</li><li><strong>提升定位精度:</strong> 通过优化所有关键帧的位姿，使得相机在地图中的定位更加准确可靠。一个经过良好优化的地图是后续高精度定位的基础。</li></ol><p>全局优化是计算密集型操作，因此在SLAM系统中不会频繁执行，通常在检测到显著的回环或者累积误差达到一定程度时触发。它是保证SLAM系统长期稳定性和准确性的核心模块之一。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>优化——闭环时本质图优化</title>
      <link href="/2025/05/14/orbslam2-15/"/>
      <url>/2025/05/14/orbslam2-15/</url>
      
        <content type="html"><![CDATA[<p>本章节主要阐述在ORB-SLAM2系统中，当检测到闭环（Loop Closing）后，如何通过优化一个称为“本质图”（Essential Graph）的结构来全局校正和优化所有关键帧的位姿。这个过程对消除累积误差、提升地图全局一致性和定位精度至关重要。</p><h2 id="一-优化的核心目标与对象"><a class="markdownIt-Anchor" href="#一-优化的核心目标与对象"></a> 一、优化的核心目标与对象</h2><ul><li><strong>核心函数</strong>：<code>OptimizeEssentialGraph</code>。</li><li><strong>主要目标</strong>：在闭环确认后，对系统中所有已记录的关键帧的位姿（包括位置和姿态，即<code>Sim(3)</code>变换）进行一次全局性的优化调整。</li><li><strong>关键点</strong>：<ul><li><strong>不直接优化地图点</strong>：在这一特定步骤中，优化过程的变量是关键帧的位姿，而不是三维地图点的坐标。地图点的位置会在关键帧位姿优化完毕后，根据其参考关键帧的位姿更新进行调整。</li><li><strong>全局性</strong>：优化会影响到地图中所有的关键帧，以达到全局最优的目的。</li></ul></li></ul><h2 id="二-本质图的构成顶点-vertices"><a class="markdownIt-Anchor" href="#二-本质图的构成顶点-vertices"></a> 二、本质图的构成：顶点 (Vertices)</h2><p>在本质图优化这个图优化问题中，“顶点”代表了需要被优化的实体。</p><ul><li><p><strong>定义</strong>：每个顶点对应一个关键帧的位姿。可以参考书中的图14-4，图中的每一个节点（无论是红色、绿色还是蓝色）都可视为一个顶点。</p></li><li><p><strong>g2o类型</strong>：在g2o中，这些顶点的具体类型被定义为 <code>g2o::VertexSim3Expmap</code>。</p><ul><li><strong>Sim(3)变换</strong>：<code>Sim3</code>代表相似变换（Similarity Transformation），它包含了旋转（3自由度）、平移（3自由度）和尺度（1自由度）三个部分，共7个自由度。这意味着优化不仅会调整关键帧在三维空间中的位置和朝向，还可能调整它们之间的相对尺度因子。</li><li><strong>尺度优化选项</strong>：<code>g2o::VertexSim3Expmap</code> 类型顶点的一个特性是，它可以根据实际使用的传感器类型（如单目相机、双目相机或RGB-D相机）来决定是否将尺度因子作为优化变量。对于单目SLAM，尺度是不确定的，因此在闭环时通过<code>Sim(3)</code>优化可以恢复全局尺度；而对于双目或RGB-D相机，尺度是可测量的，通常会固定尺度为1。</li></ul><p><img src="/img/benzhitu.png" alt="" /></p></li></ul><h2 id="三-本质图的构成边-edges"><a class="markdownIt-Anchor" href="#三-本质图的构成边-edges"></a> 三、本质图的构成：边 (Edges)</h2><p>“边”在图优化中代表了顶点之间的约束关系或测量。</p><ul><li><strong>定义</strong>：边连接了两个关键帧顶点，表示它们之间存在某种几何约束（通常是相对位姿变换）。</li><li><strong>g2o类型</strong>：尽管边的来源和意义有所不同，但在本质图优化中，它们的数据类型统一为二元边 <code>g2o::EdgeSim3</code>。</li><li><strong>边的主要类型（参照图14-4）</strong>：<ol><li><strong>闭环相关的连接关系</strong>：<ul><li><strong>闭环调整后新增的连接</strong>（图14-4中绿色的连线）：当闭环发生后，会进行地图点的融合和调整。这个过程可能会使得一些原本没有直接共视关系或者共视关系较弱的关键帧之间，因为共享了融合后的地图点而产生新的、较强的连接关系。这些新的连接会作为边加入到本质图中。</li><li><strong>形成闭环的直接连接</strong>（图14-4中红色的连线）：指当前关键帧（检测到闭环的帧）与它在历史轨迹中匹配到的那个闭环关键帧之间的直接连接。这是最核心的闭环约束。</li></ul></li><li><strong>生成树（Spanning Tree）连接关系</strong>（图14-4中黑色带箭头的连线）：ORB-SLAM2在跟踪过程中会维护一个关键帧的生成树（或称为共视树）。树中的边连接了具有较强共视关系的关键帧，通常是当前关键帧与其父关键帧（共视程度最高的关键帧）之间的连接。这些边构成了关键帧位姿图的一个基本骨架。</li><li><strong>高共视权重（Covisibility）的连接关系</strong>（图14-4中黄色的双股连线）：除了生成树的边和闭环边之外，如果两个关键帧之间存在非常好的共视关系（例如，它们共同观测到的地图点数量超过一个设定的阈值，书中例子是至少100个），即使它们不是父子关系或直接的闭环关系，它们之间也会添加一条边。这增加了图的冗余度和鲁棒性。</li></ol></li><li><strong>边的筛选</strong>：书中提到，与完整的共视图（Covisibility Graph，包含所有共视关系）相比，本质图会有选择地移除一些连接关系（如图14-4中黑色的虚线所示）。这样做是为了在保证优化效果的前提下，减少图中边的数量，从而降低优化问题的复杂度和计算量，以加速优化过程的收敛速度。</li></ul><h2 id="四-边的误差定义代价函数"><a class="markdownIt-Anchor" href="#四-边的误差定义代价函数"></a> 四、边的误差定义（代价函数）</h2><p>每条边都会贡献一个误差项到总的代价函数中，优化器的目标是最小化所有误差项之和。</p><ul><li><strong>边的测量值 (Measurement)</strong>：对于一条连接关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">K_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的 <code>g2o::EdgeSim3</code> 边，其“测量值”通常表示从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">K_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的相对<code>Sim(3)</code>变换，我们记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ji}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> (即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>j</mi><msub><mi>w</mi><mi>i</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">T_{jw_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，从i坐标系到j坐标系的变换)。这个测量值是根据它们之间的共视地图点或者其他匹配信息计算得到的。</li><li><strong>误差计算</strong>：<ul><li>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">v_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的顶点，其当前估计的世界位姿为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{iw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (从世界坐标系到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 坐标系的<code>Sim(3)</code>变换)。</li><li>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">v_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">K_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的顶点，其当前估计的世界位姿为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{jw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> (从世界坐标系到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">K_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 坐标系的<code>Sim(3)</code>变换)。</li><li>根据当前的位姿估计，从 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">K_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的相对位姿可以计算为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi><mo separator="true">,</mo><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msubsup><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">S_{ji,est} = S_{jw} \cdot S_{iw}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.131103em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>书中给出的误差定义是 <code>error_ = C * v1-&gt;estimate() * v2-&gt;estimate().inverse()</code>，这里的 <code>C</code> 就是边的测量值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ji}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> (书中可能是符号约定，通常相对变换是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ji}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，而顶点估计是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{iw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{jw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，则误差通常形式为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub><mo>⋅</mo><msub><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msubsup><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">S_{ji} \cdot S_{jw} \cdot S_{iw}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.131103em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span> 或者 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>⋅</mo><msub><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msubsup><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">S_{ji}^{-1} \cdot S_{iw} \cdot S_{jw}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.267211em;vertical-align:-0.412972em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.267211em;vertical-align:-0.412972em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span></span></span></span>，目标是使这个乘积接近单位阵)。更直观的理解是，我们希望测量得到的相对变换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ji}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 与通过当前估计的世界位姿计算出的相对变换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msubsup><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">S_{jw} \cdot S_{iw}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.131103em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span> 尽可能一致。</li><li>误差可以表示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msubsup><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub><mo>⋅</mo><msub><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msubsup><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">E_{ij} = S_{ji} \cdot (S_{jw} \cdot S_{iw}^{-1})^{-1} = S_{ji} \cdot S_{iw} \cdot S_{jw}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.131103em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.267211em;vertical-align:-0.412972em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.412972em;"><span></span></span></span></span></span></span></span></span></span>。优化目标是使这个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 尽可能接近单位<code>Sim(3)</code>变换。</li><li><strong>对数映射 (Logarithmic Map)</strong>：为了便于优化算法（如高斯牛顿法或列文伯格-马夸尔特法）处理，这个<code>Sim(3)</code>形式的误差会通过对数映射 <code>_error = error_.log();</code> 转换为其对应的李代数向量（一个7维向量）。优化器会在这个李代数空间进行迭代更新。</li></ul></li></ul><p>简单来说，优化器会不断调整所有关键帧的<code>Sim(3)</code>位姿（即图中的顶点），使得通过这些位姿计算得到的关键帧间的相对变换，与图中边所代表的“测量到的”相对变换之间的差异最小。</p><h2 id="五-本质图优化的完整流程"><a class="markdownIt-Anchor" href="#五-本质图优化的完整流程"></a> 五、本质图优化的完整流程</h2><p>闭环时的本质图优化遵循一套明确的步骤：</p><ol><li><strong>步骤1：构造g2o优化器</strong><ul><li>初始化一个稀疏优化器对象（<code>g2o::SparseOptimizer</code>）。</li><li>配置线性求解器（如 <code>g2o::LinearSolverEigen</code>）和块求解器（如 <code>g2o::BlockSolver_7_3</code>，因为<code>Sim(3)</code>位姿是7自由度，地图点是3自由度，但这里只优化位姿）。</li><li>选择优化算法，通常是列文伯格-马夸尔特法（<code>g2o::OptimizationAlgorithmLevenberg</code>）。</li><li>可以设置算法的一些参数，如初始Lambda值。</li></ul></li><li><strong>步骤2：添加顶点到优化器</strong><ul><li>遍历当前地图中所有的有效关键帧。</li><li>为每个关键帧创建一个 <code>g2o::VertexSim3Expmap</code> 类型的顶点。</li><li><strong>设置顶点初始估计</strong>：<ul><li>优先使用在闭环过程中通过<code>Sim(3)</code>传播调整过的位姿（<code>CorrectedSim3</code>）作为该顶点的初始估计。</li><li>如果某个关键帧没有经过<code>Sim(3)</code>传播调整（例如，它与闭环区域距离较远），则使用其在正常跟踪过程中得到的位姿（通常是<code>SE(3)</code>，尺度设为1.0来构成<code>Sim(3)</code>）。</li><li>这些初始位姿会存储起来（如 <code>vScw</code>）。</li></ul></li><li><strong>固定闭环匹配帧</strong>：将在闭环检测中匹配上的那个历史关键帧（<code>pLoopKF</code>）的顶点设置为固定（<code>setFixed(true)</code>）。这意味着在优化过程中，该关键帧的位姿不会被改变，它将作为整个图优化的绝对参考基准。</li><li><strong>初始关键帧的优化</strong>：值得注意的是，系统并没有固定地图的初始关键帧（第0帧），所以初始关键帧的位姿也会在这次全局优化中得到调整。</li><li><strong>尺度固定选项</strong>：根据 <code>bFixScale</code> 参数（通常由相机类型决定，如RGB-D或双目时为true），决定是否固定顶点的尺度因子（<code>_fix_scale</code>）。</li><li>将创建的顶点添加到优化器中。</li></ul></li><li><strong>步骤3：添加第一种类型的边（因闭环时地图点调整而新生成的连接）</strong><ul><li>遍历 <code>LoopConnections</code> 这个数据结构，它存储了因为闭环后地图点融合而产生的新的关键帧间的连接关系。</li><li>对于每一对新连接的关键帧 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">K_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>)：<ul><li>获取它们在步骤2中设置的初始<code>Sim(3)</code>位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{iw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{jw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> (从<code>vScw</code>中获取)。</li><li>计算它们之间的相对<code>Sim(3)</code>变换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>S</mi><mrow><mi>j</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msubsup><mi>S</mi><mrow><mi>i</mi><mi>w</mi></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">S_{ji} = S_{jw} \cdot S_{iw}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.131103em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.4231360000000004em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span></span></span></span> 作为这条边的测量值。</li><li>创建一个 <code>g2o::EdgeSim3</code> 类型的边，连接对应的两个顶点。</li><li>设置边的测量值为计算得到的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ji}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>设置边的信息矩阵（<code>information()</code>），通常对于这类新增加的边，会使用单位矩阵，表示它们对总误差的贡献权重是均等的。</li><li>将边添加到优化器中。</li><li>记录已添加的边，避免重复（<code>sInsertedEdges</code>）。</li></ul></li></ul></li><li><strong>步骤4：添加其他主要类型的边（跟踪时形成的边、原始闭环边、高共视边）</strong><ul><li>遍历地图中的所有关键帧 (<code>vpKFs</code>)：<ul><li>对于当前遍历到的关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：<ul><li>获取其逆位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>w</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{wi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (从<code>NonCorrectedSim3</code>或<code>vScw</code>获取，优先使用未经过Sim(3)传播调整过的位姿)。</li><li><strong>步骤4.1：添加生成树的边（父子连接）</strong><ul><li>获取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的父关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">K_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> (在生成树中的父节点)。</li><li>如果存在父关键帧：<ul><li>获取父关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">K_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 的位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>p</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{pw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>计算相对位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>S</mi><mrow><mi>p</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msub><mi>S</mi><mrow><mi>w</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{pi} = S_{pw} \cdot S_{wi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为边的测量值。</li><li>创建 <code>g2o::EdgeSim3</code> 边连接 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">K_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，设置测量值和信息矩阵（通常为单位阵）。</li><li>添加到优化器。</li></ul></li></ul></li><li><strong>步骤4.2：添加原始闭环连接边</strong><ul><li>获取与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 形成闭环关系的关键帧集合 (<code>sLoopEdges</code>)。</li><li>遍历这些闭环连接的关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">K_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：<ul><li>为避免重复添加，通常只处理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">K_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的ID小于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的ID的情况。</li><li>获取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">K_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>l</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{lw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>计算相对位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>l</mi><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>S</mi><mrow><mi>l</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msub><mi>S</mi><mrow><mi>w</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{li} = S_{lw} \cdot S_{wi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为边的测量值。</li><li>创建 <code>g2o::EdgeSim3</code> 边连接 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">K_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，设置测量值和信息矩阵。</li><li>添加到优化器。</li></ul></li></ul></li><li><strong>步骤4.3：添加高共视程度的连接边</strong><ul><li>获取与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 共视地图点超过阈值 (<code>minFeat</code>，如100) 的关键帧集合 (<code>vpConnectedKFs</code>)。</li><li>遍历这些共视关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：<ul><li>进行一些检查避免重复添加：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 不是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的父关键帧， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 不是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的父关键帧，它们之间不构成已添加的闭环边，并且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的ID小于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的ID。</li><li>同时，确保这条边没有在步骤3中因为地图点调整而被添加过（通过查询 <code>sInsertedEdges</code>）。</li><li>如果通过所有检查：<ul><li>获取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>n</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{nw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>计算相对位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>n</mi><mi>i</mi></mrow></msub><mo>=</mo><msub><mi>S</mi><mrow><mi>n</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msub><mi>S</mi><mrow><mi>w</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{ni} = S_{nw} \cdot S_{wi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 作为边的测量值。</li><li>创建 <code>g2o::EdgeSim3</code> 边连接 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">K_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，设置测量值和信息矩阵。</li><li>添加到优化器。</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li><li><strong>步骤5：执行优化</strong><ul><li>调用 <code>optimizer.initializeOptimization()</code> 来初始化优化过程（例如，构建雅可比矩阵结构）。</li><li>调用 <code>optimizer.optimize(N)</code> 来执行N次迭代的优化（例如，N=20）。优化器会调整顶点的估计值（关键帧位姿）以最小化所有边的误差项之和。</li></ul></li><li><strong>步骤6：更新关键帧位姿到地图中</strong><ul><li>在更新地图数据前，通常会上锁（<code>unique_lock&lt;mutex&gt; lock(pMap-&gt;mMutexMapUpdate)</code>)，以防止多线程冲突。</li><li>遍历所有关键帧。</li><li>对于每个关键帧 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">K_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：<ul><li>从优化器中获取其对应的顶点 <code>VSim3 = static_cast&lt;g2o::VertexSim3Expmap*&gt;(optimizer.vertex(nIDi))</code>。</li><li>获取优化后的 <code>Sim(3)</code> 位姿估计 <code>CorrectedSiw = VSim3-&gt;estimate()</code>。</li><li>将优化后的位姿（可能需要从<code>Sim(3)</code>转换回<code>SE(3)</code>，即如果尺度被优化了，需要除以尺度因子得到真实平移）更新到关键帧对象中（<code>pKFi-&gt;SetPose(Tiw)</code>）。</li><li>同时，可以将优化后的逆位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>w</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{wc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 存储起来（<code>vCorrectedSwc</code>）。</li></ul></li></ul></li><li><strong>步骤7：根据参考帧优化前后的相对关系调整地图点的位置</strong><ul><li>这一步非常重要。由于本次优化只直接调整了关键帧的位姿，而没有直接优化地图点。因此，在关键帧位姿更新后，需要遍历所有地图点。</li><li>对于每个地图点，它都有一个参考关键帧。根据其参考关键帧在优化前后的位姿变化（相对变换），来调整该地图点在世界坐标系下的三维坐标，以保持地图点与观测到它的关键帧之间的几何关系的一致性。这个过程在书中的后续代码或者其他模块中实现，但逻辑上是本质图优化后的一个必要步骤。</li></ul></li></ol><p>通过以上七个步骤，ORB-SLAM2能够在检测到闭环后，通过本质图优化有效地进行一次全局的位姿校正，从而显著提升整个SLAM系统的定位精度和地图的一致性。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>优化——Sim(3) 位姿优化</title>
      <link href="/2025/05/14/orbslam2-14/"/>
      <url>/2025/05/14/orbslam2-14/</url>
      
        <content type="html"><![CDATA[<h1 id="闭环线程中的-sim3-位姿优化"><a class="markdownIt-Anchor" href="#闭环线程中的-sim3-位姿优化"></a> 闭环线程中的 Sim(3) 位姿优化</h1><p>理解在检测到潜在的闭环时，系统如何优化当前关键帧 (KF1) 与闭环候选关键帧 (KF2) 之间的相对位姿。此相对位姿通过一个 Sim(3) 变换（包含旋转、平移和尺度信息）来描述。<strong>关键点在于，此优化过程仅针对 Sim(3) 位姿进行，地图点的三维坐标在此步骤中保持固定，不参与优化。</strong></p><h2 id="一-核心思想图优化-graph-optimization"><a class="markdownIt-Anchor" href="#一-核心思想图优化-graph-optimization"></a> 一、核心思想：图优化 (Graph Optimization)</h2><p>该优化过程依赖于图优化方法，具体实现通常借助 g2o (General Graph Optimization) 框架。图优化的基本组成元素如下：</p><ul><li><strong>顶点 (Vertices)：</strong> 图中的节点，代表了系统中待优化的变量。在我们的场景中，主要是 Sim(3) 位姿。</li><li><strong>边 (Edges)：</strong> 连接顶点的边，代表了这些变量之间存在的约束关系。这些约束通常以误差函数的形式表达，优化的目标是最小化所有误差的总和。</li></ul><h2 id="二-顶点的选择-vertices"><a class="markdownIt-Anchor" href="#二-顶点的选择-vertices"></a> 二、顶点的选择 (Vertices)</h2><p>在闭环的 Sim(3) 位姿优化问题中，主要涉及以下两种类型的顶点：</p><ol><li><strong>待优化的 Sim(3) 位姿:</strong><ul><li><strong>描述：</strong> 这是我们核心的优化目标，代表了从闭环候选关键帧 KF2 到当前关键帧 KF1 的 7 自由度相似变换 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>R</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Sim(3) = (s, R, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>)，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span> 为尺度因子， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 为旋转矩阵， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 为平移向量。</li><li><strong>g2o 类型：</strong> 在 g2o 中，这类顶点通常表示为 <code>g2o::VertexSim3Expmap</code>。它使用李代数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">sim(3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span></span></span></span> 进行参数化。</li><li><strong>图示 (参考图 14-3)：</strong> 例如 <code>g2oS12</code>，在优化器中可能对应 <code>optimizer.vertex(0)</code>。</li></ul></li><li><strong>匹配的地图点 (MapPoints):</strong><ul><li><strong>描述：</strong> 这些是在 KF1 和 KF2 中共同观测到的三维地图点。在 Sim(3) 位姿优化阶段，这些地图点的三维坐标被认为是准确的，<strong>因此它们是固定的 (fixed)，不参与优化</strong>。它们作为稳定的参考点，为优化 Sim(3) 位姿提供约束。</li><li><strong>g2o 类型：</strong> 在 g2o 中，三维点通常表示为 <code>g2o::VertexSBAPointXYZ</code> (SBA: Sparse Bundle Adjustment)。</li><li><strong>图示 (参考图 14-3)：</strong> 例如点 <code>P3D2c</code>，在优化器中可能对应 <code>optimizer.vertex(id2)</code>，其中 <code>id2</code> 是该地图点在优化器中的唯一标识。</li></ul></li></ol><h2 id="三-边的选择-edges"><a class="markdownIt-Anchor" href="#三-边的选择-edges"></a> 三、边的选择 (Edges)</h2><p>边定义了顶点之间的约束，即地图点在 Sim(3) 变换下的投影关系。这些是二元边，因为它连接了两种类型的顶点：一个地图点顶点和一个 Sim(3) 位姿顶点。主要存在两种类型的边，对应于投影的方向：</p><ol><li><strong>正向投影边 (Forward Projection Edge):</strong><ul><li><strong>描述：</strong> 将<strong>闭环候选关键帧 KF2</strong> 中的一个地图点（在其自身的相机坐标系下），通过待优化的 Sim(3) 位姿 (<code>g2oS12</code>)，变换到<strong>当前关键帧 KF1</strong> 的相机坐标系下，并进一步投影到 KF1 的图像平面上。其误差是该投影点与 KF1 中对应特征点的实际观测位置之间的差异。</li><li><strong>g2o 类型：</strong> <code>g2o::EdgeSim3ProjectXYZ</code>。</li><li><strong>图示 (参考图 14-3)：</strong> 边 <code>e12</code> 连接了 KF2 中的地图点 <code>P3D2c</code> (通过 <code>optimizer.vertex(id2)</code>) 和 Sim(3) 位姿 <code>g2oS12</code> (通过 <code>optimizer.vertex(0)</code>), 其测量值 (measurement) 是 KF1 中的观测 <code>obs1</code>。</li></ul></li><li><strong>反向投影边 (Inverse Projection Edge):</strong><ul><li><strong>描述：</strong> 将<strong>当前关键帧 KF1</strong> 中的一个地图点（在其自身的相机坐标系下），通过待优化的 Sim(3) 位姿的<strong>逆变换</strong> (<code>g2oS12</code>的逆，即<code>g2oS21</code>)，变换到<strong>闭环候选关键帧 KF2</strong> 的相机坐标系下，并进一步投影到 KF2 的图像平面上。其误差是该投影点与 KF2 中对应特征点的实际观测位置之间的差异。</li><li><strong>g2o 类型：</strong> <code>g2o::EdgeInverseSim3ProjectXYZ</code>。</li></ul></li></ol><h2 id="四-误差的定义-以正向投影边-g2oedgesim3projectxyz-为例"><a class="markdownIt-Anchor" href="#四-误差的定义-以正向投影边-g2oedgesim3projectxyz-为例"></a> 四、误差的定义 (以正向投影边 <code>g2o::EdgeSim3ProjectXYZ</code> 为例)</h2><p>边的核心是其误差函数，优化器会尝试最小化所有边误差的平方和。对于 Sim(3) 投影边，误差通常是<strong>重投影误差</strong>。其计算步骤如下：</p><ol><li><strong>获取三维点坐标：</strong><br />从地图点顶点中获取其在<strong>源关键帧（例如 KF2）的相机坐标系</strong>下的三维坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">P</mi><mtext>c2</mtext></msub></mrow><annotation encoding="application/x-tex">\mathbf{P}_{\text{c2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">c2</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。在代码中如 <code>v2-&gt;estimate()</code>。</li><li><strong>通过 Sim(3) 位姿进行变换：</strong><br />使用当前估计的 Sim(3) 位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>12</mn></msub></mrow><annotation encoding="application/x-tex">S_{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (从 KF2 到 KF1 的变换，代码中如 <code>v1-&gt;estimate()</code>)，将三维点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">P</mi><mtext>c2</mtext></mrow><annotation encoding="application/x-tex">\mathbf{P}{\text{c2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">P</span></span><span class="mord"><span class="mord text"><span class="mord">c2</span></span></span></span></span></span> <em>从 KF2 的相机坐标系变换到 KF1 的相机坐标系下，得到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">P</mi><mtext>c1</mtext></mrow><annotation encoding="application/x-tex">\mathbf{P}{\text{c1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">P</span></span><span class="mord"><span class="mord text"><span class="mord">c1</span></span></span></span></span></span></em>。<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">P</mi><mtext>c1</mtext><mo>=</mo><mi>S</mi><mn>12</mn><mo>⋅</mo><mi mathvariant="bold">P</mi><mtext>c2</mtext><mo>=</mo><mi>s</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>R</mi><mo>⋅</mo><mi mathvariant="bold">P</mi><mtext>c2</mtext><mo>+</mo><mi mathvariant="bold">t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathbf{P}{\text{c1}} = S{12} \cdot \mathbf{P}{\text{c2}} = s \cdot (R \cdot \mathbf{P}{\text{c2}} + \mathbf{t})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">P</span></span><span class="mord"><span class="mord text"><span class="mord">c1</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">P</span></span><span class="mord"><span class="mord text"><span class="mord">c2</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76944em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathbf">P</span></span><span class="mord"><span class="mord text"><span class="mord">c2</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathbf">t</span></span><span class="mclose">)</span></span></span></span><br />这对应代码中的 <code>v1-&gt;estimate().map(v2-&gt;estimate())</code>。<ul><li><code>map</code> 函数内部实现: <code>return s * (r * xyz) + t;</code></li></ul></li><li><strong>投影到归一化图像平面：</strong><br />将变换到 KF1 相机坐标系下的三维点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">P</mi><mtext>c1</mtext></msub><mo>=</mo><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo separator="true">,</mo><mi>Z</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{P}_{\text{c1}} = (X, Y, Z)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">P</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">c1</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 投影到其归一化图像平面（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>平面），得到二维坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>u</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>v</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(u&#x27;, v&#x27;)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>。<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>u</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>X</mi><mi mathvariant="normal">/</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">u&#x27; = X / Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>v</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>Y</mi><mi mathvariant="normal">/</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">v&#x27; = Y / Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span><br />这对应代码中的 <code>project(transformed_point)</code> 函数。<ul><li><code>project</code> 函数内部实现: <code>res(0) = v(0)/v(2); res(1) = v(1)/v(2);</code></li></ul></li><li><strong>转换为像素坐标：</strong><br />使用目标关键帧 KF1 的相机内参数（焦距 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mrow><mi>x</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>f</mi><mrow><mi>y</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">f_{x1}, f_{y1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 和主点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mrow><mi>x</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>c</mi><mrow><mi>y</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">c_{x1}, c_{y1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>），将归一化平面坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>u</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>v</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(u&#x27;, v&#x27;)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 转换为像素坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>u</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>p</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(u_p, v_p)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1274389999999999em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>。<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>p</mi></msub><mo>=</mo><msub><mi>f</mi><mrow><mi>x</mi><mn>1</mn></mrow></msub><mo>⋅</mo><msup><mi>u</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><msub><mi>c</mi><mrow><mi>x</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">u_p = f_{x1} \cdot u&#x27; + c_{x1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mi>p</mi></msub><mo>=</mo><msub><mi>f</mi><mrow><mi>y</mi><mn>1</mn></mrow></msub><mo>⋅</mo><msup><mi>v</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><msub><mi>c</mi><mrow><mi>y</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">v_p = f_{y1} \cdot v&#x27; + c_{y1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><br />这对应代码中的 <code>cam_map1(projected_point)</code> 函数。<ul><li><code>cam_map1</code> 函数内部实现: <code>res[0] = v[0]*_focal_length1[0] + _principle_point1[0]; res[1] = v[1]*_focal_length1[1] + _principle_point1[1];</code></li></ul></li><li><strong>计算误差向量：</strong><br />误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">e</mi></mrow><annotation encoding="application/x-tex">\mathbf{e}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">e</span></span></span></span></span> 是<strong>实际观测到的像素坐标</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">z</mi><mtext>obs</mtext><mo>=</mo><mo stretchy="false">(</mo><mi>u</mi><mtext>obs</mtext><mo separator="true">,</mo><msub><mi>v</mi><mtext>obs</mtext></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{z}{\text{obs}} = (u{\text{obs}}, v_{\text{obs}})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">z</span></span><span class="mord"><span class="mord text"><span class="mord">obs</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord text"><span class="mord">obs</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">obs</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> （即 KF1 中匹配的特征点位置）与步骤 4 中<strong>投影得到的像素坐标</strong> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>u</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>p</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(u_p, v_p)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1274389999999999em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span> 之间的差值。<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">e</mi><mo>=</mo><msub><mi mathvariant="bold">z</mi><mtext>obs</mtext></msub><mo>−</mo><mo stretchy="false">(</mo><msub><mi>u</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>p</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\mathbf{e} = \mathbf{z}_{\text{obs}} - (u_p, v_p)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">e</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">z</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">obs</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1274389999999999em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><br />这对应代码中的 <code>_error = obs - projected_pixel_coordinates;</code></li></ol><h2 id="五-sim3-位姿优化的流程-optimizeroptimizesim3-函数详解"><a class="markdownIt-Anchor" href="#五-sim3-位姿优化的流程-optimizeroptimizesim3-函数详解"></a> 五、Sim(3) 位姿优化的流程 (Optimizer::OptimizeSim3 函数详解)</h2><p>在 ORB-SLAM2 中，<code>Optimizer::OptimizeSim3</code> 函数负责执行此优化。其主要步骤如下：</p><ol><li><strong>步骤 1：初始化 g2o 优化器</strong><ul><li>创建一个 <code>g2o::SparseOptimizer</code> 对象。</li><li>配置求解器：通常选择 Levenberg-Marquardt (LM) 算法 (<code>g2o::OptimizationAlgorithmLevenberg</code>)。</li><li>配置线性求解器：例如 <code>g2o::LinearSolverDense</code> 或 <code>g2o::LinearSolverCholmod</code>，取决于问题的规模和稀疏性。</li></ul></li><li><strong>步骤 2：设置待优化的 Sim(3) 位姿作为顶点</strong><ul><li>创建一个 <code>g2o::VertexSim3Expmap</code> 类型的顶点 <code>vSim3</code>。</li><li>设置其初始估计值：使用传入的 <code>g2oS12</code>。</li><li>设置顶点 ID：通常设为 0 (<code>vSim3-&gt;setId(0)</code>)。</li><li><strong>设置顶点不固定：</strong> <code>vSim3-&gt;setFixed(false)</code>，因为这是我们要优化的变量。</li><li><strong>处理尺度固定性：</strong><ul><li><code>vSim3-&gt;_fix_scale = bFixScale;</code></li><li>如果传感器是<strong>单目相机 (Monocular)</strong>，<code>bFixScale</code> 通常为 <code>false</code>，尺度参数会参与优化。</li><li>如果传感器是<strong>双目相机 (Stereo)</strong> 或 <strong>RGB-D 相机</strong>，<code>bFixScale</code> 通常为 <code>true</code>，尺度参数固定为 1（或由双目/RGB-D直接提供），不参与优化。</li></ul></li><li>存储相关的相机内参（主点 <code>_principle_point1</code>, <code>_principle_point2</code> 和焦距 <code>_focal_length1</code>, <code>_focal_length2</code>）到 <code>vSim3</code> 顶点中，供边的误差函数计算使用。这些内参是从 KF1 和 KF2 的相机参数中获取的。</li><li>将此 Sim(3) 顶点添加到优化器中 (<code>optimizer.addVertex(vSim3)</code>)。</li></ul></li><li><strong>步骤 3：设置匹配的地图点作为顶点 (固定)</strong><ul><li>获取 KF1 和 KF2 之间匹配的地图点列表 (<code>vpMatches1</code>)。</li><li>遍历每一对匹配的地图点 (pMP1 来自 KF1, pMP2 来自 KF2)。</li><li><strong>检查有效性：</strong> 确保 pMP1 和 pMP2 都不是坏点 (<code>!pMP1-&gt;isBad() &amp;&amp; !pMP2-&gt;isBad()</code>)，并且 pMP2 在 KF2 中有对应的二维特征点索引 (<code>i2 &gt;= 0</code>)。</li><li>如果有效：<ul><li><strong>为 pMP1 创建顶点 (KF1 相关):</strong><ul><li>创建一个 <code>g2o::VertexSBAPointXYZ</code> 顶点 <code>vPoint1</code>。</li><li>获取 pMP1 的世界坐标 <code>P3D1w</code>，然后使用 KF1 的位姿 (R1w, t1w) 将其转换到 KF1 的相机坐标系下 <code>P3D1c = R1w * P3D1w + t1w</code>。</li><li>设置 <code>vPoint1</code> 的估计值为 <code>P3D1c</code>。</li><li>设置顶点 ID (例如 <code>2*i + 1</code>，以避免与 Sim(3) 顶点和其他点顶点冲突)。</li><li><strong>设置顶点固定：</strong> <code>vPoint1-&gt;setFixed(true)</code>。</li><li>将 <code>vPoint1</code> 添加到优化器。</li></ul></li><li><strong>为 pMP2 创建顶点 (KF2 相关):</strong><ul><li>创建一个 <code>g2o::VertexSBAPointXYZ</code> 顶点 <code>vPoint2</code>。</li><li>获取 pMP2 的世界坐标 <code>P3D2w</code>，然后使用 KF2 的位姿 (R2w, t2w) 将其转换到 KF2 的相机坐标系下 <code>P3D2c = R2w * P3D2w + t2w</code>。</li><li>设置 <code>vPoint2</code> 的估计值为 <code>P3D2c</code>。</li><li>设置顶点 ID (例如 <code>2*(i+1)</code>).</li><li><strong>设置顶点固定：</strong> <code>vPoint2-&gt;setFixed(true)</code>。</li><li>将 <code>vPoint2</code> 添加到优化器。</li></ul></li></ul></li><li>对有效匹配进行计数 (<code>nCorrespondences++</code>)。</li></ul></li><li><strong>步骤 4：设置地图点投影关系作为边</strong><br />对于每一组通过了步骤 3 检查的有效匹配 (pMP1, pMP2, 以及 KF1 中的观测 kpUn1 和 KF2 中的观测 kpUn2)：<ul><li><strong>4.1 添加正向投影边 (KF2 -&gt; KF1):</strong><ul><li>创建一个 <code>g2o::EdgeSim3ProjectXYZ</code> 类型的边 <code>e12</code>。</li><li>设置连接的顶点：<ul><li>第一个顶点 (index 0 in edge) 是 KF2 的地图点顶点 <code>vPoint2</code> (代码中用 <code>optimizer.vertex(id2)</code>)。</li><li>第二个顶点 (index 1 in edge) 是 Sim(3) 位姿顶点 <code>vSim3</code> (代码中用 <code>optimizer.vertex(0)</code>)。</li></ul></li><li>设置测量值 (Measurement)：使用 KF1 中对应的未畸变特征点的像素坐标 <code>obs1 = (kpUn1.pt.x, kpUn1.pt.y)</code>。</li><li>设置信息矩阵 (Information Matrix)：通常是一个对角矩阵，其对角元素与特征点观测的确定性有关，一般取图像金字塔层级的逆方差 (<code>invSigmaSquare1 = pKF1-&gt;mvInvLevelSigma2[kpUn1.octave]</code>)。信息矩阵是协方差矩阵的逆，表示测量值的可信度。<br /><code>e12-&gt;setInformation(Eigen::Matrix2d::Identity() * invSigmaSquare1);</code></li><li>设置鲁棒核函数 (Robust Kernel)：例如 Huber 核 (<code>g2o::RobustKernelHuber</code>)，以减小离群点 (outliers) 对优化结果的负面影响。设置核函数的宽度 (<code>deltaHuber</code>)。</li><li>将边 <code>e12</code> 添加到优化器，并存入列表 <code>vpEdges12</code>。</li></ul></li><li><strong>4.2 添加反向投影边 (KF1 -&gt; KF2):</strong><ul><li>创建一个 <code>g2o::EdgeInverseSim3ProjectXYZ</code> 类型的边 <code>e21</code>。</li><li>设置连接的顶点：<ul><li>第一个顶点是 KF1 的地图点顶点 <code>vPoint1</code>。</li><li>第二个顶点是 Sim(3) 位姿顶点 <code>vSim3</code>。</li></ul></li><li>设置测量值：使用 KF2 中对应的未畸变特征点的像素坐标 <code>obs2</code>。</li><li>设置信息矩阵（基于 KF2 中特征点的金字塔层级）。</li><li>设置鲁棒核函数。</li><li>将边 <code>e21</code> 添加到优化器，并存入列表 <code>vpEdges21</code>。</li></ul></li><li>记录边的索引，用于后续的 outlier 剔除。</li></ul></li><li><strong>步骤 5：第一次 g2o 优化</strong><ul><li>初始化优化 (<code>optimizer.initializeOptimization()</code>)。</li><li>执行固定次数的迭代优化，例如 5 次 (<code>optimizer.optimize(5)</code>)。</li></ul></li><li><strong>步骤 6：用卡方检验剔除误差大的边 (Outlier Rejection)</strong><ul><li>遍历步骤 4 中添加的所有边对 (<code>vpEdges12[i]</code> 和 <code>vpEdges21[i]</code>)。</li><li>对于每条边，计算其卡方误差 (<code>e12-&gt;chi2()</code> 和 <code>e21-&gt;chi2()</code>)。卡方值是误差项经过信息矩阵加权后的平方和，表示这条边对当前模型拟合的好坏程度。</li><li>如果正向投影边或反向投影边的卡方误差<strong>任何一个</strong>超过预设的阈值 <code>th2</code>：<ul><li>认为这对匹配是外点 (outlier)。</li><li>从优化器中移除这两条边 (<code>optimizer.removeEdge(e12)</code>, <code>optimizer.removeEdge(e21)</code>).</li><li>将对应的原始匹配关系 <code>vpMatches1[idx]</code> 标记为无效 (例如设为 <code>NULL</code>)。</li><li>将 <code>vpEdges12[i]</code> 和 <code>vpEdges21[i]</code> 在列表中的对应位置也标记为无效。</li><li>累加坏点（被剔除的匹配对）的数量 <code>nBad++</code>。</li></ul></li></ul></li><li><strong>步骤 7：第二次 g2o 优化 (根据情况调整迭代次数)</strong><ul><li>根据 <code>nBad</code> 的数量决定迭代次数：<ul><li>如果 <code>nBad &gt; 0</code> (即有边被剔除)，说明初始的匹配中存在较多外点，闭环质量可能不是非常好，此时进行更多次迭代，例如 10 次 (<code>nMoreIterations = 10</code>)。</li><li>如果 <code>nBad == 0</code> (没有边被剔除)，说明初始匹配质量较高，进行较少次数迭代，例如 5 次 (<code>nMoreIterations = 5</code>)。</li></ul></li><li><strong>检查剩余有效匹配数量：</strong> 如果经过外点剔除后，剩余的有效匹配数量 (<code>nCorrespondences - nBad</code>) 过少（例如小于 10），则认为闭环质量太差，放弃本次优化，直接返回 0 (表示没有足够的内点支持)。</li><li>在剔除了外点之后，再次执行 g2o 优化 (<code>optimizer.optimize(nMoreIterations)</code>)。</li></ul></li><li><strong>步骤 8：用优化后的结果更新 Sim(3) 位姿</strong><ul><li>从优化器中获取优化后的 Sim(3) 顶点：<br /><code>g2o::VertexSim3Expmap* vSim3_recov = static_cast&lt;g2o::VertexSim3Expmap*&gt;(optimizer.vertex(0));</code></li><li>用该顶点的最新估计值更新输入的 <code>g2oS12</code> 参数：<br /><code>g2oS12 = vSim3_recov-&gt;estimate();</code></li><li>返回内点的数量 (<code>nCorrespondences - nBad</code>)，这个数量可以作为 Sim(3) 优化成功与否以及闭环质量的一个指标。</li></ul></li></ol><h2 id="六-总结图-14-3-sim3-位姿优化中的顶点和边"><a class="markdownIt-Anchor" href="#六-总结图-14-3-sim3-位姿优化中的顶点和边"></a> 六、总结图 14-3 (Sim(3) 位姿优化中的顶点和边)</h2><ul><li><strong>当前关键帧 KF1:</strong> 我们试图将闭环候选帧对齐到的参考帧。</li><li><strong>闭环候选关键帧 KF2:</strong> 检测到的可能与 KF1 形成闭环的帧。</li><li><strong><code>g2oS12</code> (指向 <code>optimizer.vertex(0)</code>):</strong> 核心待优化的 Sim(3) 变换。它描述了如何将 KF2 的坐标系（及其关联的地图点）变换到 KF1 的坐标系。</li><li><strong><code>P3D2c</code> (指向 <code>optimizer.vertex(id2)</code>):</strong> 一个在 KF2 的相机坐标系下表示的三维地图点。这个点在优化过程中其坐标是<strong>固定不变</strong>的。</li><li><strong><code>obs1</code>:</strong> 地图点 <code>P3D2c</code> 在 KF1 图像上的实际观测到的二维像素坐标。这是边的测量值。</li><li><strong><code>e12</code> (类型为 <code>g2o::EdgeSim3ProjectXYZ()</code>):</strong> 一条正向投影边。它约束了 <code>g2oS12</code>。该边的误差计算过程是：将 <code>P3D2c</code> 通过当前的 <code>g2oS12</code> 估计值从 KF2 坐标系变换到 KF1 坐标系，再投影到 KF1 的图像平面，然后与 <code>obs1</code> 比较得出重投影误差。</li></ul><h2 id="七-简要总结"><a class="markdownIt-Anchor" href="#七-简要总结"></a> 七、简要总结</h2><p>闭环线程中的 Sim(3) 位姿优化是一个至关重要的步骤，它旨在精确估计当前关键帧与过去某个关键帧之间的相对位姿（包括尺度）。通过构建一个包含 Sim(3) 位姿和固定地图点的图模型，并利用它们之间的重投影约束，使用如图优化（g2o）的迭代方法来最小化重投影误差。这个过程还包括鲁棒的外点剔除机制，以确保优化结果的准确性和稳定性，为后续的闭环融合和全局姿态图优化奠定基础。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>优化——局部地图优化</title>
      <link href="/2025/05/14/orbslam2-13/"/>
      <url>/2025/05/14/orbslam2-13/</url>
      
        <content type="html"><![CDATA[<h1 id="局部建图线程中局部地图优化-local-bundle-adjustment-in-local-mapping-thread"><a class="markdownIt-Anchor" href="#局部建图线程中局部地图优化-local-bundle-adjustment-in-local-mapping-thread"></a> 局部建图线程中局部地图优化 (Local Bundle Adjustment in Local Mapping Thread)</h1><h2 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h2><p>在 ORB-SLAM2 系统中，局部建图线程负责处理新的关键帧，并优化局部的地图。<code>LocalBundleAdjustment</code> (局部BA) 是该线程中的核心函数，主要用于优化当前关键帧及其邻近区域的关键帧位姿和它们观测到的地图点三维位置，以构建一个局部一致的地图。</p><h2 id="核心思想"><a class="markdownIt-Anchor" href="#核心思想"></a> 核心思想</h2><p>全局的 Bundle Adjustment (BA) 会优化所有的关键帧和地图点，计算成本非常高。局部BA的思想是<strong>只对当前活跃的、与当前关键帧紧密相关的一个子图进行优化</strong>。这大幅降低了计算复杂度，使得系统能够实时运行，同时通过不断优化局部区域，逐步累积实现全局地图的一致性。</p><p><img src="/img/jubuditu.png" alt="" /></p><h2 id="关键概念-参考图-14-2"><a class="markdownIt-Anchor" href="#关键概念-参考图-14-2"></a> 关键概念 (参考图 14-2)</h2><p>理解局部BA，首先要明确参与优化的不同元素：</p><ul><li><strong>当前关键帧 (Current KF):</strong><ul><li>定义：最新插入到地图的关键帧，是本次局部BA的触发者和中心。</li><li>图14-2标识：中间的红色相机图标 (“当前KF”)。</li></ul></li><li><strong>局部关键帧 (LocalKeyFrames / 待优化局部关键帧):</strong><ul><li>定义：这些是位姿将会被优化的关键帧集合。</li><li>组成：<ol><li>当前关键帧 (Current KF)。</li><li>一级相连关键帧 (First-level connected KeyFrames): 与当前关键帧有共同观测地图点的关键帧（即共视关键帧）。它们是当前关键帧的直接邻居。</li></ol></li><li>图14-2标识：所有红色相机图标（“当前KF”，“KF的共视关键帧KF1”，“KF的共视关键帧KF2”）。这些构成了 <code>ILocalKeyFrames</code>。</li></ul></li><li><strong>局部地图点 (LocalMapPoints / 待优化局部地图点):</strong><ul><li>定义：这些是三维位置将会被优化的地图点集合。</li><li>组成：所有被“局部关键帧”集合中的任意一个关键帧观测到的地图点。</li><li>图14-2标识：红色的“KF地图点”和绿色的“KF1地图点”、“KF2地图点”。这些构成了 <code>ILocalMapPoints</code>。</li></ul></li><li><strong>固定关键帧 (FixedCameras / 不优化固定关键帧):</strong><ul><li>定义：这些关键帧的位姿在本次局部BA中<strong>不会被优化</strong>，保持固定。它们的存在是为了给待优化的局部关键帧和地图点提供更多的观测约束，增加优化问题的稳定性。</li><li>组成：通常是二级相连关键帧 (Second-level connected KeyFrames)。这些关键帧能够观测到“局部地图点”，但它们本身不属于“局部关键帧”集合。可以理解为“局部关键帧的邻居的邻居中，那些能看到局部地图点的关键帧”。</li><li>图14-2标识：灰色的相机图标（“KF1的共视关键帧”，“KF2的共视关键帧”）。这些构成了 <code>IFixedCameras</code>。它们通过观测绿色的地图点（间接也与红色地图点相关）来提供约束。</li></ul></li></ul><h2 id="优化的目标"><a class="markdownIt-Anchor" href="#优化的目标"></a> 优化的目标</h2><p>局部BA的目标是最小化<strong>重投影误差 (Reprojection Error)</strong>。具体来说，就是调整“局部关键帧”的相机位姿（旋转和平移）和“局部地图点”的三维空间坐标，使得这些地图点在经过各自位姿变换并投影到对应关键帧的图像平面上时，其投影位置与图像上实际观测到的特征点位置之间的差异最小。</p><h2 id="图优化视角"><a class="markdownIt-Anchor" href="#图优化视角"></a> 图优化视角</h2><p>局部BA问题通常被构建为一个图优化问题：</p><ul><li><strong>顶点 (Vertices):</strong> 表示需要优化的变量或固定的状态。<ul><li>关键帧位姿顶点:<ul><li>待优化: “局部关键帧”的6自由度位姿 (通常用李代数 <code>se(3)</code> 表示，在g2o中对应 <code>g2o::VertexSE3Expmap</code>)。</li><li>固定: “固定关键帧”的6自由度位姿 (同样是 <code>g2o::VertexSE3Expmap</code>，但其 <code>setFixed(true)</code> 属性被设为真)。</li></ul></li><li>地图点位置顶点:<ul><li>待优化: “局部地图点”的三维坐标 (通常用三维向量表示，在g2o中对应 <code>g2o::VertexSBAPointXYZ</code>)。</li></ul></li></ul></li><li><strong>边 (Edges):</strong> 表示顶点之间的约束关系，即观测。<ul><li>观测关系: 一条边连接一个地图点顶点和一个观测到该地图点的关键帧位姿顶点。这条边代表了一个约束：“该关键帧以其当前估计位姿观测到了该地图点在其当前估计位置”。</li><li>边的类型与误差模型:<ul><li>单目相机 (<code>g2o::EdgeSE3ProjectXYZ</code>): 边表示一个三维地图点投影到单个二维图像平面的过程。误差是二维向量，表示重投影坐标与观测坐标的差。</li><li>双目相机/RGB-D相机 (<code>g2o::EdgeStereoSE3ProjectXYZ</code>):<ul><li>对于双目，边表示一个三维地图点投影到左右两个图像平面的过程，通常误差是三维向量 (u_left, v_left, u_right)。<code>u_right</code> 的目标值通常是根据左图像的u和深度/视差计算得到的。</li><li>对于RGB-D，可以将深度信息转换为一个虚拟的右图像坐标，或者直接使用三维点在相机坐标系下的约束。误差通常也是三维向量。</li></ul></li></ul></li></ul></li></ul><h2 id="误差定义详解-以单目-g2oedgese3projectxyz-为例"><a class="markdownIt-Anchor" href="#误差定义详解-以单目-g2oedgese3projectxyz-为例"></a> 误差定义详解 (以单目 <code>g2o::EdgeSE3ProjectXYZ</code> 为例)</h2><p>书中的 <code>computeError()</code> 函数计算了重投影误差。其核心逻辑是：<br />获取关键帧位姿顶点（<code>v1</code>，类型为 <code>VertexSE3Expmap</code>）和地图点顶点（<code>v2</code>，类型为 <code>VertexSBAPointXYZ</code>）。<br />获取图像上的实际观测坐标 <code>obs</code> (一个二维向量 <code>Vector2d</code>，来自 <code>_measurement</code>)。<br />计算误差 <code>_error</code> 为 <code>obs - cam_project(v1-&gt;estimate().map(v2-&gt;estimate()))</code>。</p><p>详细分解步骤如下：</p><ol><li><code>_vertices[0]</code> (<code>v2</code>): 连接到边的第一个顶点，代表地图点。<code>v2-&gt;estimate()</code> 返回该地图点当前估计的世界坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>w</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>Z</mi><mi>w</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">P_w = (X_w, Y_w, Z_w)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>。</li><li><code>_vertices[1]</code> (<code>v1</code>): 连接到边的第二个顶点，代表关键帧。<code>v1-&gt;estimate()</code> 返回该关键帧当前估计的位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{cw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (一个SE3对象，表示从世界坐标系到相机坐标系的变换)。</li><li><code>v1-&gt;estimate().map(v2-&gt;estimate())</code>: 这一步将世界坐标系下的地图点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">P_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 通过关键帧位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{cw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 变换到该关键帧的相机坐标系下，得到点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>c</mi></msub><mo>=</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msub><mi>P</mi><mi>w</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>Z</mi><mi>c</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">P_c = T_{cw} \cdot P_w = (X_c, Y_c, Z_c)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>。</li><li><code>cam_project(P_c)</code>: 这个函数负责将相机坐标系下的三维点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">P_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 投影到该关键帧的二维图像平面上。它使用相机的内参矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> (包含焦距 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>f</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">f_x, f_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 和主点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">c_x, c_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>)：<br />$ \hat{u} = f_x \frac{X_c}{Z_c} + c_x <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span> \hat{v} = f_y \frac{Y_c}{Z_c} + c_y $<br />如果考虑相机畸变，还需要在投影前后进行畸变校正和反校正。</li><li><code>_measurement</code> (<code>obs</code>): 这是该地图点在该关键帧图像上被实际检测到的特征点的二维坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>。</li><li><code>_error = obs - cam_project(...)</code>: 计算得到的误差是一个二维向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="normal">Δ</mi><mi>u</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>u</mi><mo>−</mo><mover accent="true"><mi>u</mi><mo>^</mo></mover><mo separator="true">,</mo><mi>v</mi><mo>−</mo><mover accent="true"><mi>v</mi><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\Delta u, \Delta v) = (u - \hat{u}, v - \hat{v})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">Δ</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">u</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，即观测值与根据当前估计投影得到的值之间的差异。优化的目标是最小化所有这类误差的平方和（通常加权）。</li></ol><h2 id="局部地图优化-optimizerlocalbundleadjustment-的详细流程"><a class="markdownIt-Anchor" href="#局部地图优化-optimizerlocalbundleadjustment-的详细流程"></a> 局部地图优化 (<code>Optimizer::LocalBundleAdjustment</code>) 的详细流程</h2><p>以下是代码中 <code>LocalBundleAdjustment</code> 函数执行的主要步骤：</p><ol><li><strong>步骤 1: 将当前关键帧及其共视关键帧加入局部关键帧中 (<code>lLocalKeyFrames</code>)</strong><ul><li>将触发本次局部BA的当前关键帧 <code>pKF</code> 加入 <code>lLocalKeyFrames</code>。</li><li>获取 <code>pKF</code> 的一级相连关键帧 (即有共视地图点的关键帧，通过 <code>pKF-&gt;GetVectorCovisibleKeyFrames()</code>)。</li><li>将这些有效的一级相连关键帧也加入 <code>lLocalKeyFrames</code>。</li><li>使用 <code>mnBALocalForKF = pKF-&gt;mnId</code> 标记这些关键帧，以防止在后续步骤中重复处理或错误添加。</li></ul></li><li><strong>步骤 2: 遍历局部关键帧，将它们观测到的地图点加入局部地图点中 (<code>lLocalMapPoints</code>)</strong><ul><li>遍历 <code>lLocalKeyFrames</code> 中的每一个关键帧 <code>pKFi</code>。</li><li>获取 <code>pKFi</code> 观测到的所有地图点 <code>vpMPs = pKFi-&gt;GetMapPointMatches()</code>。</li><li>对于每一个有效的地图点 <code>pMP</code>，如果它还没有被加入（通过检查 <code>pMP-&gt;mnBALocalForKF != pKF-&gt;mnId</code>），则将其加入 <code>lLocalMapPoints</code>，并用 <code>pMP-&gt;mnBALocalForKF = pKF-&gt;mnId</code> 标记。</li></ul></li><li><strong>步骤 3: 得到能被局部地图点观测到但不属于局部关键帧的关键帧，作为固定关键帧 (<code>lFixedCameras</code>)</strong><ul><li>遍历 <code>lLocalMapPoints</code> 中的每一个地图点 <code>pMP</code>。</li><li>获取观测到 <code>pMP</code> 的所有关键帧及其在该关键帧中的索引 <code>observations = pMP-&gt;GetObservations()</code>。</li><li>对于每一个观测到 <code>pMP</code> 的关键帧 <code>pKFi</code>:<ul><li>如果 <code>pKFi</code> 不在 <code>lLocalKeyFrames</code> 中 (通过 <code>pKFi-&gt;mnBALocalForKF != pKF-&gt;mnId</code> 判断)，并且它还没有被标记为固定关键帧 (通过 <code>pKFi-&gt;mnBAFixedForKF != pKF-&gt;mnId</code> 判断)。</li><li>则将 <code>pKFi</code> 加入 <code>lFixedCameras</code>，并用 <code>pKFi-&gt;mnBAFixedForKF = pKF-&gt;mnId</code> 标记。这些是二级相连关键帧，提供额外约束。</li></ul></li></ul></li><li><strong>步骤 4: 构造g2o优化器</strong><ul><li>初始化g2o图优化框架：<ul><li>创建稀疏优化器 <code>g2o::SparseOptimizer optimizer</code>。</li><li>选择线性求解器类型 (如 <code>g2o::LinearSolverEigen</code> 或 <code>g2o::LinearSolverCSparse</code>)。</li><li>选择块求解器 (如 <code>g2o::BlockSolver_6_3</code>，表示位姿用6个参数，地图点用3个参数)。</li><li>选择优化算法 (如 <code>g2o::OptimizationAlgorithmLevenberg</code>，即Levenberg-Marquardt算法)。</li></ul></li><li>设置外部停止标志 <code>pbStopFlag</code>，允许其他线程提前终止优化。</li></ul></li><li><strong>步骤 5: 添加待优化的位姿顶点——局部关键帧的位姿 (<code>lLocalKeyFrames</code>)</strong><ul><li>遍历 <code>lLocalKeyFrames</code>。</li><li>为每个关键帧 <code>pKFi</code> 创建一个 <code>g2o::VertexSE3Expmap</code> 顶点。</li><li>设置顶点的初始估计值为该关键帧当前的位姿 <code>pKFi-&gt;GetPose()</code>。</li><li>设置顶点的ID为关键帧的ID <code>pKFi-&gt;mnId</code>。</li><li><strong>特别地</strong>：如果关键帧是初始关键帧 (通常 <code>pKFi-&gt;mnId == 0</code>)，则将其位姿设置为固定 <code>vSE3-&gt;setFixed(true)</code>，不参与优化。</li><li>将顶点添加到优化器中 <code>optimizer.addVertex(vSE3)</code>。</li><li>记录最大的关键帧ID <code>maxKFid</code>，用于后续地图点顶点ID的设置，以避免ID冲突。</li></ul></li><li><strong>步骤 6: 添加不优化的位姿顶点——固定关键帧的位姿 (<code>lFixedCameras</code>)</strong><ul><li>遍历 <code>lFixedCameras</code>。</li><li>为每个关键帧 <code>pKFi</code> 创建一个 <code>g2o::VertexSE3Expmap</code> 顶点。</li><li>设置顶点的初始估计值为该关键帧当前的位姿。</li><li>设置顶点的ID。</li><li><strong>关键</strong>：将这些顶点全部设置为固定 <code>vSE3-&gt;setFixed(true)</code>，因为它们的位姿不在此次局部BA中优化。</li><li>将顶点添加到优化器。</li><li>更新 <code>maxKFid</code>。</li></ul></li><li><strong>步骤 7: 添加待优化的局部地图点作为顶点 (<code>lLocalMapPoints</code>)</strong><ul><li>遍历 <code>lLocalMapPoints</code>。</li><li>为每个地图点 <code>pMP</code> 创建一个 <code>g2o::VertexSBAPointXYZ</code> 顶点。</li><li>设置顶点的初始估计值为该地图点当前的世界坐标 <code>pMP-&gt;GetWorldPos()</code>。</li><li>设置顶点的ID。为了避免与关键帧ID冲突，通常设置为 <code>pMP-&gt;mnId + maxKFid + 1</code>。</li><li>将这些地图点顶点设置为边缘化 <code>vPoint-&gt;setMarginalized(true)</code>。在基于舒尔补的BA求解中，地图点通常被边缘化，以减小求解系统的规模，提高效率。</li><li>将顶点添加到优化器。</li></ul></li><li><strong>步骤 8: 每添加完一个地图点之后，对每对关联的地图点和观测到它的关键帧构建边</strong><ul><li>对于每个在步骤7中添加的地图点 <code>pMP</code>：<ul><li>获取所有观测到该 <code>pMP</code> 的关键帧 <code>observations = pMP-&gt;GetObservations()</code>。</li><li>对于每一个观测此 <code>pMP</code> 的关键帧 <code>pKFi</code> (可以是局部关键帧或固定关键帧):<ul><li>如果 <code>pKFi</code> 是有效的 (not bad)。</li><li>获取 <code>pMP</code> 在 <code>pKFi</code> 图像上的观测坐标 <code>kpUn.pt.x, kpUn.pt.y</code> (通常是归一化平面坐标或去畸变后的像素坐标)。</li><li>创建相应的边对象：<ul><li>单目: 例如创建一个 <code>g2o::EdgeSE3ProjectXYZ</code> 类型的边。</li><li>双目/RGB-D: 例如创建一个 <code>g2o::EdgeStereoSE3ProjectXYZ</code> 类型的边。</li></ul></li><li>设置边的顶点：<ul><li>将地图点顶点设为边的第一个顶点 (e.g., <code>e-&gt;setVertex(0, optimizer.vertex(id_of_map_point_pMP))</code>)。</li><li>将观测关键帧顶点设为边的第二个顶点 (e.g., <code>e-&gt;setVertex(1, optimizer.vertex(pKFi-&gt;mnId))</code>)。</li></ul></li><li>设置边的测量值 <code>e-&gt;setMeasurement(obs)</code>，即观测到的图像坐标。</li><li>设置边的信息矩阵 (Information Matrix)，即权重的逆协方差矩阵。通常与特征点提取时的图像金字塔层级有关 <code>invSigma2 = pKFi-&gt;mvInvLevelSigma2[kpUn.octave]</code>。信息矩阵一般为 <code>Eigen::Matrix2d::Identity() * invSigma2</code> (对于单目)。尺度越小（层级越高），不确定性越大，权重越小。</li><li><strong>初始阶段</strong>：可以设置鲁棒核函数 (e.g., <code>e-&gt;setRobustKernel(new g2o::RobustKernelHuber())</code>) 来抑制潜在外点（错误匹配）的影响。Huber阈值 <code>thHuberMono</code> 通常根据卡方分布计算（例如，<code>sqrt(5.991)</code> 对应自由度为2，置信度95%）。</li><li>将边添加到优化器 <code>optimizer.addEdge(e)</code>。</li><li>同时，将边、关联的关键帧和地图点存储在列表 (<code>vpEdgesMono</code>, <code>vpEdgeKFMono</code>, <code>vpMapPointEdgeMono</code> 等) 中，以便后续进行外点剔除。</li></ul></li></ul></li></ul></li><li><strong>步骤 9: 分成两个阶段开始优化</strong><ul><li>检查外部停止标志。</li><li><strong>第一阶段优化:</strong><ul><li><code>optimizer.initializeOptimization()</code>: 初始化优化过程。</li><li><code>optimizer.optimize(5)</code>: 执行少量迭代（例如5次）。</li></ul></li><li>再次检查外部停止标志。</li><li><strong>步骤 9.1: 检测外点，并设置下次不优化/移除鲁棒核</strong> (如果第一阶段优化后继续优化)<ul><li>遍历在步骤8中创建的所有边 (例如 <code>vpEdgesMono</code> 中的边)。</li><li>对于每条边 <code>e</code> 和其关联的地图点 <code>pMP</code>:<ul><li>如果 <code>pMP</code> 已经无效，则跳过。</li><li>计算边的卡方误差 <code>e-&gt;chi2()</code>。</li><li>检查地图点在相机坐标系下的深度是否为正 <code>e-&gt;isDepthPositive()</code> (投影点在相机前方)。</li><li><strong>外点判断</strong>: 如果 <code>e-&gt;chi2()</code> 大于某个阈值 (例如5.991，对应自由度为2，显著性水平0.05的卡方分布临界值)，或者深度为负，则认为这条边对应的观测是外点。</li><li><strong>处理外点</strong>:<ul><li><code>e-&gt;setLevel(1)</code>: 将该边的优化等级设为1，表示在接下来的优化迭代中不考虑这条边（即暂时禁用）。</li><li><code>e-&gt;setRobustKernel(0)</code>: 移除鲁棒核函数。因为第二阶段通常认为是精求解，此时可能已经通过卡方检验识别了大部分外点，或者希望对内点进行更精确的拟合。</li></ul></li></ul></li></ul></li><li><strong>步骤 9.2: 排除误差较大的边后再次进行优化 (第二阶段优化)</strong><ul><li><code>optimizer.initializeOptimization(0)</code>: 再次初始化优化（参数0可能表示从当前的图结构开始，而不是level 0的边）。</li><li><code>optimizer.optimize(10)</code>: 执行更多次迭代（例如10次）进行精细求解。</li></ul></li></ul></li><li><strong>步骤 10: 在优化结束后重新计算误差，剔除边连接误差比较大的关键帧和地图点</strong><ul><li>遍历所有边 (如 <code>vpEdgesMono</code> 和 <code>vpEdgesStereo</code>)。</li><li>对于每条边 <code>e</code> 及其关联的地图点 <code>pMP</code> 和关键帧 <code>pKFi</code>:<ul><li>如果 <code>pMP</code> 无效，跳过。</li><li>再次检查 <code>e-&gt;chi2()</code> 和深度 <code>e-&gt;isDepthPositive()</code>。</li><li>如果仍然是外点 (误差大于阈值或深度为负)，则将这对 <code>(pKFi, pMP)</code> 添加到待删除列表 <code>vToErase</code>。这意味着这个观测关系被认为是错误的，将在地图中被移除。</li></ul></li><li>遍历 <code>vToErase</code> 列表，调用 <code>pKFi-&gt;EraseMapPointMatch(pMP)</code> 和 <code>pMP-&gt;EraseObservation(pKFi)</code> 来实际断开这些错误的连接。</li></ul></li><li><strong>步骤 11: 更新优化后的关键帧位姿及地图点的位置、平均观测方向等属性</strong><ul><li><strong>更新关键帧位姿:</strong> 遍历 <code>lLocalKeyFrames</code>，从优化器中获取优化后的位姿 (e.g., <code>optimizer.vertex(pKFi-&gt;mnId)-&gt;estimate()</code>)，并更新到关键帧对象 <code>pKFi-&gt;SetPose(corrected_pose)</code>。</li><li><strong>更新地图点位置:</strong> 遍历 <code>lLocalMapPoints</code>，从优化器中获取优化后的三维坐标 (e.g., <code>optimizer.vertex(id_of_map_point)-&gt;estimate()</code>)，并更新到地图点对象 <code>pMP-&gt;SetWorldPos(corrected_position)</code>。</li><li><strong>更新地图点其他属性:</strong> 地图点的位置更新后，还需要调用 <code>pMP-&gt;UpdateNormalAndDepth()</code> 来更新其平均观测方向和在观测帧中的深度等信息，这些信息对于后续的跟踪和建图非常重要。</li></ul></li></ol><h2 id="图-14-2-元素总结"><a class="markdownIt-Anchor" href="#图-14-2-元素总结"></a> 图 14-2 元素总结</h2><ul><li><strong>红色相机 (当前KF, KF的共视KF1, KF的共视KF2):</strong> 代表 <code>lLocalKeyFrames</code> (待优化的局部关键帧)，其位姿会被优化。</li><li><strong>红色地图点 (KF地图点) 和 绿色地图点 (KF1地图点, KF2地图点):</strong> 代表 <code>lLocalMapPoints</code> (待优化的局部地图点)，其三维位置会被优化。</li><li><strong>灰色相机 (KF1的共视关键帧, KF2的共视关键帧):</strong> 代表 <code>lFixedCameras</code> (不优化的固定关键帧)，其位姿固定，但它们对绿色地图点的观测为优化提供了额外约束。</li><li><strong>所有连线:</strong> 代表观测关系，即图优化中的边。线的源头是关键帧，指向被观测的地图点。</li></ul><h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2><p>局部建图线程中的 <code>LocalBundleAdjustment</code> 是ORB-SLAM2中一个至关重要的优化步骤。通过精心选择一个包含当前关键帧、其紧密相连的关键帧和它们所观测的地图点的局部子图进行优化，并引入固定关键帧作为额外约束，系统能够在保持较高地图精度的同时，显著降低计算量，从而满足实时性要求。两阶段优化和外点剔除策略进一步增强了优化的鲁棒性和准确性。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>优化——跟踪线程仅优化位姿</title>
      <link href="/2025/05/14/orbslam2-12/"/>
      <url>/2025/05/14/orbslam2-12/</url>
      
        <content type="html"><![CDATA[<h2 id="1-概述"><a class="markdownIt-Anchor" href="#1-概述"></a> 1. 概述</h2><p><code>PoseOptimization</code> 函数是ORB-SLAM2中用于<strong>跟踪线程 (Tracking Thread)</strong> 的一个关键优化步骤。其核心目标是：</p><ul><li><strong>仅优化当前帧的相机位姿 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>E</mi><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SE(3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span></span></span></span>变换)</strong>。</li><li><strong>不优化地图点 (MapPoints) 的三维位置</strong>，即假设地图点在世界坐标系中的位置是固定的。</li></ul><p>此函数主要应用在跟踪过程中的运动跟踪、参考帧跟踪、地图跟踪和重定位阶段。</p><h2 id="2-图优化基础顶点与边"><a class="markdownIt-Anchor" href="#2-图优化基础顶点与边"></a> 2. 图优化基础：顶点与边</h2><p>该优化过程基于图优化理论，使用g2o库来实现。图由顶点和边构成。</p><h3 id="21-顶点-vertex"><a class="markdownIt-Anchor" href="#21-顶点-vertex"></a> 2.1. 顶点 (Vertex)</h3><ul><li><strong>定义</strong>: 代表当前帧的相机位姿，这也是本次优化的<strong>待优化变量</strong>。</li><li><strong>表示</strong>: 通常是一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>E</mi><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SE(3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span></span></span></span> 变换，描述了从世界坐标系 (World Frame) 到当前相机坐标系 (Camera Frame) 的旋转 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>) 和平移 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>)。<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>t</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">T_{cw} = \begin{pmatrix} R_{cw} &amp; t_{cw} \\ 0 &amp; 1 \end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></li></ul></li><li><strong>g2o类型</strong>: <code>g2o::VertexSE3Expmap</code>。使用李代数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>e</mi><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">se(3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord">3</span><span class="mclose">)</span></span></span></span> 进行优化。</li><li><strong>特点</strong>:<ul><li>在优化图中，通常只有一个这样的顶点（对应当前帧的位姿）。</li><li>其他帧的位姿或地图点在此特定优化中被视为固定，不参与优化。</li><li>顶点ID通常设为0，且 <code>setFixed(false)</code> 表明它是可优化的。</li></ul></li></ul><h3 id="22-边-edge"><a class="markdownIt-Anchor" href="#22-边-edge"></a> 2.2. 边 (Edge)</h3><ul><li><strong>定义</strong>: 代表一个<strong>地图点在当前帧中的投影约束</strong>。每一条边都关联一个三维地图点和当前帧的位姿。</li><li><strong>类型</strong>:<ul><li><strong>一元边 (Unary Edge)</strong>: 因为它只连接一个待优化的顶点（即当前帧的位姿）。地图点本身是固定的，不作为优化图中的顶点。</li><li><strong>g2o类型 (单目)</strong>: <code>g2o::EdgeSE3ProjectXYZOnlyPose</code>。</li><li><strong>g2o类型 (双目/RGB-D)</strong>: <code>g2o::EdgeStereoSE3ProjectXYZOnlyPose</code>。</li></ul></li><li><strong>误差定义 (核心)</strong>: 边的误差是<strong>观测到的二维特征点位置</strong>与<strong>三维地图点根据当前估计位姿投影到图像上的二维位置</strong>之间的差，即<strong>重投影误差 (Reprojection Error)</strong>。</li></ul><h2 id="3-误差函数详解"><a class="markdownIt-Anchor" href="#3-误差函数详解"></a> 3. 误差函数详解</h2><h3 id="31-单目相机-monocular-camera"><a class="markdownIt-Anchor" href="#31-单目相机-monocular-camera"></a> 3.1. 单目相机 (Monocular Camera)</h3><p>对于 <code>g2o::EdgeSE3ProjectXYZOnlyPose</code>：</p><ul><li><strong>误差向量维度</strong>: 2 (图像 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x, y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 坐标的差)。</li><li><strong>误差计算</strong>:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>=</mo><msub><mi>z</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><mo>−</mo><mi>π</mi><mo stretchy="false">(</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e = z_{obs} - \pi(T_{cw} \cdot P_w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br />其中：<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span>: 二维误差向量。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z_{obs}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 观测到的特征点在当前帧图像上的二维像素坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>u</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><mo separator="true">,</mo><msub><mi>v</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(u_{obs}, v_{obs})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>。这是通过特征提取和匹配得到的。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">P_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 该特征点对应的三维地图点在世界坐标系下的坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>X</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>w</mi></msub><mo separator="true">,</mo><msub><mi>Z</mi><mi>w</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(X_w, Y_w, Z_w)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>。这个坐标在 <code>PoseOptimization</code> 中是<strong>固定不变的</strong>。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{cw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 当前估计的相机位姿 (从世界到相机的变换)，即图中的顶点 <code>vSE3-&gt;estimate()</code>。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>: 相机投影函数，将相机坐标系下的三维点投影到二维图像平面。<ol><li><strong>坐标变换</strong>: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>c</mi></msub><mo>=</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msub><mi>P</mi><mi>w</mi></msub><mo>=</mo><msub><mi>R</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub><msub><mi>P</mi><mi>w</mi></msub><mo>+</mo><msub><mi>t</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_c = T_{cw} \cdot P_w = R_{cw}P_w + t_{cw}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br />在代码中对应 <code>v1-&gt;estimate().map(Xw)</code>。<ul><li><code>v1</code> 即当前帧位姿顶点 <code>VertexSE3Expmap*</code>。</li><li><code>estimate()</code> 获取当前位姿的估计值 (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>E</mi><mn>3</mn><mi>Q</mi><mi>u</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">SE3Quat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">3</span><span class="mord mathnormal">Q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span></span></span></span>)。</li><li><code>map(Xw)</code> 用此位姿将世界坐标 <code>Xw</code> 变换到相机坐标系下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>c</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>Z</mi><mi>c</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">P_c = (X_c, Y_c, Z_c)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>。</li></ul></li><li><strong>归一化平面投影</strong>:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><msub><mi>X</mi><mi>c</mi></msub><mi mathvariant="normal">/</mi><msub><mi>Z</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">x&#x27; = X_c / Z_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><msub><mi>Y</mi><mi>c</mi></msub><mi mathvariant="normal">/</mi><msub><mi>Z</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">y&#x27; = Y_c / Z_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />在代码中对应 <code>project2d(trans_xyz)</code>。</li><li><strong>像素坐标转换 (内参)</strong>:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mi>x</mi></msub><mo>⋅</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><msub><mi>c</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">u_{proj} = f_x \cdot x&#x27; + c_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mi>y</mi></msub><mo>⋅</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><msub><mi>c</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">v_{proj} = f_y \cdot y&#x27; + c_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><br />在代码中对应 <code>cam_project(trans_xyz)</code> 中的后续步骤。</li></ol></li><li>最终误差: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>−</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">e = \begin{pmatrix} u_{obs} \\ v_{obs} \end{pmatrix} - \begin{pmatrix} u_{proj} \\ v_{proj} \end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span>。</li></ul></li></ul><h3 id="32-双目相机或rgb-d相机-stereorgb-d-camera"><a class="markdownIt-Anchor" href="#32-双目相机或rgb-d相机-stereorgb-d-camera"></a> 3.2. 双目相机或RGB-D相机 (Stereo/RGB-D Camera)</h3><p>对于 <code>g2o::EdgeStereoSE3ProjectXYZOnlyPose</code>：</p><ul><li><strong>误差向量维度</strong>: 3。</li><li><strong>观测值</strong>:<ul><li>对于双目相机，观测值通常是左目图像的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>u</mi><mi>L</mi></msub><mo separator="true">,</mo><msub><mi>v</mi><mi>L</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u_L, v_L)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和右目图像中对应点的<strong>横坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">u_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></strong>。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>u</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><mo separator="true">,</mo><msub><mi>v</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><mo separator="true">,</mo><msub><mi>u</mi><mrow><mi>R</mi><mo separator="true">,</mo><mi>o</mi><mi>b</mi><mi>s</mi></mrow></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">z_{obs} = (u_{L,obs}, v_{L,obs}, u_{R,obs})^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1274389999999999em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li><strong>投影</strong>:<ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>c</mi></msub><mo>=</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>w</mi></mrow></msub><mo>⋅</mo><msub><mi>P</mi><mi>w</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>Z</mi><mi>c</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">P_c = T_{cw} \cdot P_w = (X_c, Y_c, Z_c)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>.</li><li>左目投影 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>u</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mo separator="true">,</mo><msub><mi>v</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u_{L,proj}, v_{L,proj})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 与单目类似：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mi>x</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mi>c</mi></msub><mi mathvariant="normal">/</mi><msub><mi>Z</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>c</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">u_{L,proj} = f_x \cdot (X_c / Z_c) + c_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>v</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>f</mi><mi>y</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>c</mi></msub><mi mathvariant="normal">/</mi><msub><mi>Z</mi><mi>c</mi></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>c</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">v_{L,proj} = f_y \cdot (Y_c / Z_c) + c_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></li><li>右目横坐标投影 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mrow><mi>R</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">u_{R,proj}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mrow><mi>R</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi>u</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub><mo>−</mo><mfrac><mrow><msub><mi>f</mi><mi>x</mi></msub><mo>⋅</mo><mi>b</mi></mrow><msub><mi>Z</mi><mi>c</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">u_{R,proj} = u_{L,proj} - \frac{f_x \cdot b}{Z_c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.377316em;vertical-align:-0.44509999999999994em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.07153em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br />其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 是双目相机的基线 (baseline)。在代码中通常用 <code>bf</code> 表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>x</mi></msub><mo>⋅</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f_x \cdot b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>。</li></ol></li><li><strong>误差计算</strong>:<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>u</mi><mi mathvariant="normal">_</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>o</mi><mi>b</mi><mi>s</mi></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>v</mi><mi mathvariant="normal">_</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>o</mi><mi>b</mi><mi>s</mi></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>u</mi><mi mathvariant="normal">_</mi><mrow><mi>R</mi><mo separator="true">,</mo><mi>o</mi><mi>b</mi><mi>s</mi></mrow></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>−</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>u</mi><mi mathvariant="normal">_</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mrow><mi>L</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mrow><mi>R</mi><mo separator="true">,</mo><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">e = \begin{pmatrix} u\_{L,obs} \\ v\_{L,obs} \\ u\_{R,obs} \end{pmatrix} - \begin{pmatrix} u\_{L,proj} \\ v_{L,proj} \\ u_{R,proj} \end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">b</span><span class="mord mathnormal">s</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">b</span><span class="mord mathnormal">s</span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">b</span><span class="mord mathnormal">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></li></ul><h3 id="33-信息矩阵-information-matrix-omega"><a class="markdownIt-Anchor" href="#33-信息矩阵-information-matrix-omega"></a> 3.3. 信息矩阵 (Information Matrix) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span></h3><ul><li>每条边都有一个信息矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span>，它是误差协方差矩阵的逆。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span> 反映了观测的置信度。通常与特征点所在的<strong>图像金字塔层级 (octave)</strong> 有关。<ul><li><code>const float invSigma2 = pFrame-&gt;mvInvLevelSigma2[kpUn.octave];</code></li><li><code>e-&gt;setInformation(Eigen::Matrix2d::Identity() * invSigma2);</code> (单目)</li><li>层级越高（图像越缩放，特征点越不稳定），<code>invSigma2</code> 越小，表示信息量越低，权重越小。</li></ul></li></ul><h3 id="34-鲁棒核函数-robust-kernel"><a class="markdownIt-Anchor" href="#34-鲁棒核函数-robust-kernel"></a> 3.4. 鲁棒核函数 (Robust Kernel)</h3><ul><li>为了降低<strong>外点 (outliers)</strong> (即错误的特征匹配或动态物体上的点) 对优化结果的负面影响，通常会使用鲁棒核函数，如<strong>Huber核</strong>。<ul><li><code>g2o::RobustKernelHuber* rk = new g2o::RobustKernelHuber;</code></li><li><code>rk-&gt;setDelta(deltaMono);</code> (deltaMono 通常基于卡方分布计算，如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mn>5.991</mn></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{5.991}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.13278em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">5</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">1</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span></span> 对应自由度为2，置信度95%)</li><li><code>e-&gt;setRobustKernel(rk);</code></li></ul></li><li>鲁棒核函数会调整误差较大边的权重，使其对总代价函数的影响减小。</li><li>在优化的后期迭代中，当误差普遍较小时，可能会移除鲁棒核 (<code>e-&gt;setRobustKernel(0);</code>)。</li></ul><h2 id="4-optimizerposeoptimization-函数执行流程"><a class="markdownIt-Anchor" href="#4-optimizerposeoptimization-函数执行流程"></a> 4. <code>Optimizer::PoseOptimization</code> 函数执行流程</h2><ol><li><strong>Step 1: 构造g2o优化器</strong><ul><li>选择求解器类型，如 <code>BlockSolver_6_3</code> (位姿6维，地图点3维，但这里地图点不优化)。</li><li>选择线性求解器，如 <code>LinearSolverDense</code>。</li><li>选择非线性优化算法，如 <code>OptimizationAlgorithmLevenberg</code> (Levenberg-Marquardt)。</li><li><code>g2o::SparseOptimizer optimizer;</code></li><li><code>optimizer.setAlgorithm(solver);</code></li></ul></li><li><strong>Step 2: 添加顶点 (Vertex)</strong><ul><li>将当前帧的初始位姿估计 <code>pFrame-&gt;mTcw</code> (转换为 <code>SE3Quat</code>) 作为顶点添加到优化器中。</li><li><code>g2o::VertexSE3Expmap* vSE3 = new g2o::VertexSE3Expmap();</code></li><li><code>vSE3-&gt;setEstimate(Converter::toSE3Quat(pFrame-&gt;mTcw));</code></li><li><code>vSE3-&gt;setId(0);</code></li><li><code>vSE3-&gt;setFixed(false);</code> // 表明此顶点是待优化的</li><li><code>optimizer.addVertex(vSE3);</code></li></ul></li><li><strong>Step 3: 添加一元边 (Unary Edges)</strong><ul><li>遍历当前帧 <code>pFrame</code> 中所有有效的地图点匹配 <code>mvpMapPoints</code>。</li><li>对于每个有效的地图点 <code>pMP</code>:<ul><li><strong>获取观测</strong>: 特征点在当前帧归一化图像平面上的坐标 <code>kpUn.pt.x, kpUn.pt.y</code>。</li><li><strong>创建边</strong>:<ul><li>单目: <code>g2o::EdgeSE3ProjectXYZOnlyPose* e = new g2o::EdgeSE3ProjectXYZOnlyPose();</code></li><li>双目/RGB-D: (类似地创建 <code>EdgeStereoSE3ProjectXYZOnlyPose</code>)</li></ul></li><li><strong>关联顶点</strong>: <code>e-&gt;setVertex(0, optimizer.vertex(0));</code> (连接到ID为0的位姿顶点)。</li><li><strong>设置测量值</strong>: <code>e-&gt;setMeasurement(obs);</code> (观测到的二维/三维坐标)。</li><li><strong>设置信息矩阵</strong>: 根据特征点金字塔层级 <code>invSigma2</code>。</li><li><strong>设置鲁棒核</strong>: (如Huber核) <code>e-&gt;setRobustKernel(rk);</code></li><li><strong>设置相机内参</strong>: <code>e-&gt;fx, e-&gt;fy, e-&gt;cx, e-&gt;cy</code> (对于单目) 或 <code>e-&gt;bf</code> (对于双目)。</li><li><strong>设置地图点世界坐标</strong>: <code>e-&gt;Xw = pMP-&gt;GetWorldPos();</code> (这是固定的)。</li><li><strong>添加边到优化器</strong>: <code>optimizer.addEdge(e);</code></li><li>记录边和对应的地图点索引，用于后续内外点判断。</li></ul></li></ul></li><li><strong>Step 4: 执行优化与内外点筛选</strong><ul><li>进行多轮优化迭代 (例如，书中提到共4次主优化，每次主优化内部迭代10次)。<ul><li><code>const int its[4] = &#123;10, 10, 10, 10&#125;;</code></li></ul></li><li>在每轮主优化开始前，可以重新初始化顶点估计值:<ul><li><code>vSE3-&gt;setEstimate(Converter::toSE3Quat(pFrame-&gt;mTcw));</code> (这里用的是进入优化前的位姿，或者上一轮优化的结果也可以)</li></ul></li><li>初始化优化器针对特定级别的边: <code>optimizer.initializeOptimization(0);</code></li><li>执行单轮优化: <code>optimizer.optimize(its[it]);</code></li><li><strong>内外点判断 (Outlier Rejection)</strong>:<ul><li>优化后，遍历所有边，计算其卡方误差 <code>chi2 = e-&gt;chi2()</code> (即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mi>T</mi></msup><mi mathvariant="normal">Ω</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">e^T \Omega e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Ω</span><span class="mord mathnormal">e</span></span></span></span>)。</li><li><code>if (chi2 &gt; chi2Threshold)</code>:<ul><li>将此观测标记为外点: <code>pFrame-&gt;mvbOutlier[idx] = true;</code></li><li>在g2o中，将此外点的优化等级设为1 (<code>e-&gt;setLevel(1);</code>)，使其在下一轮 <code>initializeOptimization(0)</code> 时不被激活。</li></ul></li><li>Else (内点):<ul><li>标记为内点: <code>pFrame-&gt;mvbOutlier[idx] = false;</code></li><li>优化等级设为0 (<code>e-&gt;setLevel(0);</code>)。</li></ul></li><li>根据内外点情况，可能在若干轮优化后移除鲁棒核 (<code>e-&gt;setRobustKernel(0);</code>)，因为此时大部分外点已被剔除，误差主要由高斯噪声引起。</li></ul></li><li>如果内点数量过少 (如小于3)，则放弃优化。</li></ul></li><li><strong>Step 5: 更新位姿</strong><ul><li>从优化器中获取优化后的位姿估计。</li><li><code>g2o::VertexSE3Expmap* vSE3_recov = static_cast&lt;g2o::VertexSE3Expmap*&gt;(optimizer.vertex(0));</code></li><li><code>g2o::SE3Quat SE3quat_recov = vSE3_recov-&gt;estimate();</code></li><li>将g2o的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>E</mi><mn>3</mn><mi>Q</mi><mi>u</mi><mi>a</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">SE3Quat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">3</span><span class="mord mathnormal">Q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span></span></span></span> 格式转换回 <code>cv::Mat</code>。</li><li><code>cv::Mat pose = Converter::toCvMat(SE3quat_recov);</code></li><li>更新当前帧的位姿: <code>pFrame-&gt;SetPose(pose);</code></li></ul></li></ol><ul><li><strong>返回值</strong>: 优化后的内点数量。</li></ul><h2 id="5-总结"><a class="markdownIt-Anchor" href="#5-总结"></a> 5. 总结</h2><p><code>PoseOptimization</code> 是一个轻量级的优化过程，通过最小化地图点在当前帧的重投影误差来快速估计当前相机的精确位姿。它只调整当前帧的6自由度位姿，保持地图点不变，因此计算效率较高，非常适合实时性要求高的跟踪线程。通过迭代优化和内外点判断，可以得到一个鲁棒且精确的位姿估计。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>跟踪 —— 局部地图跟踪</title>
      <link href="/2025/05/13/orbslam2-11/"/>
      <url>/2025/05/13/orbslam2-11/</url>
      
        <content type="html"><![CDATA[<h1 id="local-map-tracking"><a class="markdownIt-Anchor" href="#local-map-tracking"></a> Local Map Tracking</h1><h2 id="1-目标与定位"><a class="markdownIt-Anchor" href="#1-目标与定位"></a> 1. 目标与定位</h2><ul><li><strong>角色</strong>：第二阶段跟踪，在初步跟踪（参考关键帧、恒速模型、重定位）之后进行。</li><li><strong>目的</strong>：利用更丰富的局部地图信息，对第一阶段获得的当前帧位姿进行<strong>精细化优化</strong>，得到更准确的位姿。</li><li><strong>核心</strong>：增加匹配约束，仅优化当前帧位姿。</li></ul><h2 id="2-与局部建图线程-local-mapping的区别"><a class="markdownIt-Anchor" href="#2-与局部建图线程-local-mapping的区别"></a> 2. 与“局部建图线程 (Local Mapping)”的区别</h2><ul><li><strong>局部地图 (Local Map) - 用于本阶段（局部地图跟踪）</strong><ul><li><strong>数据</strong>：由局部关键帧及其观测到的局部地图点构成。</li><li><strong>功能</strong>：为当前帧提供投影匹配候选，<strong>仅优化当前帧位姿</strong>。不改变关键帧位姿，也不改变地图点三维坐标。</li><li><strong>本质</strong>：“用图”来精调当前帧。</li></ul></li><li><strong>局部建图线程 (Local Mapping) - 独立线程</strong><ul><li><strong>数据</strong>：处理新生成的关键帧。</li><li><strong>功能</strong>：<ol><li>生成新的地图点。</li><li>进行局部BA (Bundle Adjustment)，同时优化局部区域内的关键帧位姿和地图点坐标。</li><li>剔除冗余关键帧和不可靠地图点。</li></ol></li><li><strong>本质</strong>：“建图”与“维护图”。</li></ul></li></ul><h2 id="3-局部地图跟踪的核心步骤"><a class="markdownIt-Anchor" href="#3-局部地图跟踪的核心步骤"></a> 3. 局部地图跟踪的核心步骤</h2><h3 id="第-1-步构建局部地图更新局部关键帧和局部地图点"><a class="markdownIt-Anchor" href="#第-1-步构建局部地图更新局部关键帧和局部地图点"></a> 第 1 步：构建局部地图（更新局部关键帧和局部地图点）</h3><p>目的是为当前帧搜集一个相关的、小范围的地图子集。</p><ul><li><strong>1.1 更新局部关键帧 (Local KeyFrames)</strong><ul><li><strong>一级共视关键帧</strong>：直接与当前帧有共同观测地图点的关键帧。</li><li><strong>二级共视关键帧</strong>：一级共视关键帧的共视关键帧（如共视程度最高的前 N 个）。</li><li><strong>一级共视关键帧的父/子关键帧</strong>：在共视图/生成树结构中的父节点和子节点。</li><li><strong>目的</strong>：形成当前帧的“上下文环境”，确保足够的观测信息。</li></ul></li><li><strong>1.2 更新局部地图点 (Local MapPoints)</strong><ul><li><strong>来源</strong>：由上述“局部关键帧”集合所观测到的所有地图点。</li><li><strong>特点</strong>：通常覆盖范围远大于当前帧直接视野，为相机小范围运动和旋转提供了潜在匹配。</li></ul></li></ul><h3 id="第-2-步投影匹配获取更多匹配点对"><a class="markdownIt-Anchor" href="#第-2-步投影匹配获取更多匹配点对"></a> 第 2 步：投影匹配，获取更多匹配点对</h3><p>利用局部地图点与当前帧特征点建立更多约束。</p><ul><li><strong>2.1 筛选可用的局部地图点</strong><ul><li><strong>排除已匹配点</strong>：在第一阶段跟踪中已成功匹配的地图点不再参与。</li><li><strong>视野范围检查 (In Frustum Check)</strong>：<ol><li><strong>深度为正</strong>：地图点在当前相机坐标系下，Z 轴坐标 &gt; 0。</li><li><strong>投影在图像内</strong>：地图点投影到当前帧像素平面上，坐标 (u, v) 在图像边界内。</li><li><strong>有效距离</strong>：地图点与相机中心的距离在其定义的有效观测距离范围内。</li><li><strong>观测角度</strong>：当前相机指向地图点的向量与该点平均观测方向的夹角小于阈值（如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>60</mn><mo lspace="0em" rspace="0em">∘</mo></msup></mrow><annotation encoding="application/x-tex">{60}^{ \circ }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7084550000000001em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord">6</span><span class="mord">0</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7084550000000001em;"><span style="top:-3.09734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∘</span></span></span></span></span></span></span></span></span></span></span></span>）。</li></ol></li></ul></li><li><strong>2.2 进行投影匹配</strong><ul><li>将筛选出的合格局部地图点投影到当前帧图像。</li><li>在投影点附近区域搜索当前帧的 ORB 特征点，进行特征描述子匹配。</li></ul></li></ul><h3 id="第-3-步位姿优化-pose-optimization"><a class="markdownIt-Anchor" href="#第-3-步位姿优化-pose-optimization"></a> 第 3 步：位姿优化 (Pose Optimization)</h3><p>利用新增的匹配关系进一步优化当前帧位姿。</p><ul><li><strong>方法</strong>：仅优化位姿的 BA (Pose-Only Bundle Adjustment)。</li><li><strong>固定项</strong>：局部地图点的位置、局部关键帧的位姿均保持不变。</li><li><strong>优化项</strong>：仅当前普通帧的位姿 (旋转 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> 和平移 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>)。</li><li><strong>目标</strong>：最小化地图点在当前帧上的重投影误差。</li></ul><h3 id="第-4-步更新统计信息"><a class="markdownIt-Anchor" href="#第-4-步更新统计信息"></a> 第 4 步：更新统计信息</h3><ul><li>更新当前帧中各匹配地图点的内点/外点状态。</li><li>统计成功跟踪（优化后为内点）的地图点总数。</li></ul><h3 id="第-5-步判断跟踪状态"><a class="markdownIt-Anchor" href="#第-5-步判断跟踪状态"></a> 第 5 步：判断跟踪状态</h3><ul><li>根据内点数量决定跟踪是否成功。</li><li>若近期发生过重定位，成功跟踪的内点数阈值会更严格。</li><li>内点数不足则认为跟踪失败，否则成功，当前帧位姿得到更新和确认。</li></ul><h2 id="4-总结思路"><a class="markdownIt-Anchor" href="#4-总结思路"></a> 4. 总结思路</h2><ol><li><strong>“召集助手”</strong>：确定与当前帧相关的局部关键帧集合。</li><li><strong>“扩大搜索范围”</strong>：基于局部关键帧，构建包含丰富三维点的局部地图。</li><li><strong>“精挑细选”</strong>：从局部地图点中筛选出在当前帧视野内且观测条件良好的候选点。</li><li><strong>“建立更多连接”</strong>：将候选点投影到当前帧，进行特征匹配，增加约束。</li><li><strong>“精调姿态”</strong>：利用所有匹配，仅优化当前帧的位姿，使其更精确地对齐局部地图。</li></ol>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>跟踪 —— 重定位跟踪</title>
      <link href="/2025/05/13/orbslam2-9/"/>
      <url>/2025/05/13/orbslam2-9/</url>
      
        <content type="html"><![CDATA[<h1 id="relocalization"><a class="markdownIt-Anchor" href="#relocalization"></a> Relocalization</h1><h2 id="一-核心目标与触发时机"><a class="markdownIt-Anchor" href="#一-核心目标与触发时机"></a> 一、核心目标与触发时机</h2><ul><li><strong>核心目标：</strong> 当系统由于各种原因（如快速运动、场景剧变、遮挡等）导致跟踪丢失，即无法确定当前相机帧相对于已有地图的位姿时，重定位模块的目标是在已构建的地图中<strong>重新找回当前帧的准确位姿</strong>。</li><li><strong>触发时机：</strong> 这是 SLAM 系统中的一种**“拯救”或“恢复”机制**。它在常规的、依赖连续性的跟踪方法（如恒速模型跟踪、参考关键帧跟踪）均宣告失败后被激活。</li></ul><h2 id="二-核心思想全局搜索与局部验证"><a class="markdownIt-Anchor" href="#二-核心思想全局搜索与局部验证"></a> 二、核心思想：全局搜索与局部验证</h2><p>重定位的整个过程可以概括为两个主要阶段，体现了从粗略的全局匹配到精确的局部验证的思想：</p><ol><li><strong>全局外观搜索 (Global Appearance-Based Search)：</strong><ul><li>由于跟踪已经丢失，系统对当前帧的位姿没有任何先验信息或良好的初始估计。</li><li><strong>策略：</strong> 利用<strong>词袋模型 (Bag-of-Words, BoW)</strong> 在整个历史关键帧数据库 (KeyFrame Database) 中进行快速、大规模的搜索。</li><li><strong>目的：</strong> 找出那些在视觉外观上与当前丢失帧最相似的<strong>候选关键帧 (Candidate KeyFrames)</strong>。这些候选帧是潜在的、当前相机可能重新观察到的场景。</li></ul></li><li><strong>局部几何验证与位姿精化 (Local Geometric Verification &amp; Pose Refinement)：</strong><ul><li>对筛选出的每一个候选关键帧，进行更细致的局部处理。</li><li><strong>策略：</strong><ul><li><strong>特征匹配：</strong> 在当前帧和候选关键帧之间进行ORB特征点的匹配。</li><li><strong>初始位姿估计：</strong> 利用匹配上的3D地图点（来自候选关键帧）和当前帧对应的2D特征点，通过 <strong>EPnP (Efficient Perspective-n-Point)</strong> 算法结合RANSAC（随机采样一致性）来估计一个初始的、相对准确的当前帧位姿。EPnP是一种高效的从n对3D-2D点对应中恢复相机位姿的算法。</li><li><strong>迭代优化：</strong> 获得初始位姿后，通过反复的<strong>投影匹配</strong>（将候选关键帧中更多的地图点根据当前估计位姿投影到当前帧，以寻找新的匹配）和<strong>BA优化 (Bundle Adjustment)</strong>（此阶段通常仅优化当前帧的位姿，不改变地图点坐标）来迭代地增加可靠的匹配点数量，并进一步精化当前帧的位姿。</li></ul></li></ul></li></ol><h2 id="三-关键技术与详细流程"><a class="markdownIt-Anchor" href="#三-关键技术与详细流程"></a> 三、关键技术与详细流程</h2><h3 id="a-倒排索引-inverted-index-加速候选关键帧搜索"><a class="markdownIt-Anchor" href="#a-倒排索引-inverted-index-加速候选关键帧搜索"></a> A. 倒排索引 (Inverted Index) - 加速候选关键帧搜索</h3><p>为了避免在可能包含成百上千个关键帧的数据库中进行暴力比对（这在实时系统中是不可接受的），ORB-SLAM2 采用<strong>倒排索引</strong>来高效地完成全局外观搜索。</p><ul><li><p><strong>定义与对比：</strong></p><ul><li><strong>倒排索引 (Inverted Index)：</strong><ul><li><strong>索引基础：</strong> 以“视觉单词 (Word)”（词袋模型中的基本单元）为索引。</li><li><strong>存储内容：</strong> 对于词袋模型词典中的每一个视觉单词，倒排索引存储一个列表，该列表记录了所有包含这个特定视觉单词的关键帧的标识（如指针或ID）以及可能的权重信息。</li><li><strong>核心优势：</strong> 可以非常快速地查询到“有哪些关键帧包含了某个（或某组）特定的视觉单词”。这对于判断图像间的视觉相似性（即共享的视觉单词数量和权重）至关重要且效率极高。</li></ul></li><li><strong>直接索引 (Direct Index)：</strong><ul><li><strong>索引基础：</strong> 以“图像 (KeyFrame)”为索引。</li><li><strong>存储内容：</strong> 每张图像（关键帧）存储其提取到的所有特征点，以及每个特征点在词袋树中所对应的视觉单词（节点ID）。</li><li><strong>核心优势：</strong> 能够快速获取一个关键帧中属于同一个视觉单词（或词袋树节点）下的所有特征点，这在进行两帧之间的特征匹配和后续的几何关系验证时非常有用。</li></ul></li></ul></li><li><p><strong>倒排索引在ORB-SLAM2中的数据结构示例：</strong></p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mvInvertedFile 是一个向量，其索引是 WordId (视觉单词的ID)</span></span><br><span class="line"><span class="comment">// mvInvertedFile[word_id] 是一个链表，存储了所有包含 word_id 这个视觉单词的关键帧指针</span></span><br><span class="line">std::vector&lt;std::list&lt;KeyFrame*&gt;&gt; mvInvertedFile;</span><br></pre></td></tr></table></figure></li><li><p><strong>倒排索引的维护：</strong></p><ul><li><strong>添加新关键帧时 (<code>KeyFrameDatabase::add(KeyFrame *pKF)</code>)：</strong><ol><li>获取新关键帧 <code>pKF</code> 的词袋向量 <code>pKF-&gt;mBowVec</code>（该向量记录了关键帧中包含的所有视觉单词及其权重）。</li><li>遍历此BoW向量中的每一个视觉单词 (WordId, WordValue)。</li><li>对于每一个WordId，将该关键帧 <code>pKF</code> 的指针添加到 <code>mvInvertedFile[WordId]</code> 对应的链表中。</li></ol></li><li><strong>删除关键帧时 (<code>KeyFrameDatabase::erase(KeyFrame* pKF)</code>)：</strong><ol><li>获取待删除关键帧 <code>pKF</code> 的词袋向量。</li><li>遍历此BoW向量中的每一个视觉单词.</li><li>对于每一个WordId，访问 <code>mvInvertedFile[WordId]</code> 对应的链表，并从中找到并移除关键帧 <code>pKF</code> 的指针。</li></ol></li></ul></li></ul><h3 id="b-搜索重定位候选关键帧-keyframedatabasedetectrelocalizationcandidatesframe-f"><a class="markdownIt-Anchor" href="#b-搜索重定位候选关键帧-keyframedatabasedetectrelocalizationcandidatesframe-f"></a> B. 搜索重定位候选关键帧 (<code>KeyFrameDatabase::DetectRelocalizationCandidates(Frame *F)</code>)</h3><p>此函数的目标是从整个关键帧数据库中，高效地筛选出一小组与当前丢失帧 <code>F</code> 最可能在视觉上匹配的候选关键帧。</p><ol><li><strong>步骤 1：初步筛选 - 找出共享单词的关键帧 (<code>lKFsSharingWords</code>)</strong><ul><li>遍历当前帧 <code>F</code> 的BoW向量 <code>F-&gt;mBowVec</code> 中的每一个视觉单词 (WordId)。</li><li>利用<strong>倒排索引 <code>mvInvertedFile[WordId]</code></strong>，获取所有包含该WordId的历史关键帧列表。</li><li>将这些历史关键帧加入到一个临时的集合 <code>lKFsSharingWords</code> 中。</li><li>为每个加入到 <code>lKFsSharingWords</code> 的关键帧 <code>pKFi</code>，用 <code>pKFi-&gt;mnRelocWords++</code> 记录它与当前帧 <code>F</code> 共享的单词数量。</li><li>使用 <code>pKFi-&gt;mnRelocQuery = F-&gt;mnId</code> 作为标记，确保在处理当前帧 <code>F</code> 的不同单词时，同一个历史关键帧 <code>pKFi</code> 只被加入 <code>lKFsSharingWords</code> 一次，并且其 <code>mnRelocWords</code> 能被正确累计。</li><li>如果 <code>lKFsSharingWords</code> 在处理完当前帧所有单词后仍为空（即当前帧与数据库中所有关键帧都没有共同的视觉单词），则无法进行重定位，函数返回空列表。</li></ul></li><li><strong>步骤 2：设定共同单词数阈值1 (<code>minCommonWords</code>)</strong><ul><li>遍历 <code>lKFsSharingWords</code> 中的所有关键帧。</li><li>找到其中与当前帧 <code>F</code> 共享单词数最多的那个值，记为 <code>maxCommonWords</code>。</li><li>设定第一个筛选阈值：<code>minCommonWords = maxCommonWords * 0.8f</code> (例如，取最大共享单词数的80%)。</li><li><strong>目的：</strong> 过滤掉那些虽然与当前帧有共同单词，但共同数量过少的关键帧，减少后续计算量。</li></ul></li><li><strong>步骤 3：计算BoW相似度得分并进行二次筛选 (<code>lScoreAndMatch</code>)</strong><ul><li>再次遍历 <code>lKFsSharingWords</code>。</li><li>只挑选那些共享单词数 <code>pKFi-&gt;mnRelocWords &gt; minCommonWords</code> 的关键帧 <code>pKFi</code>。</li><li>对于这些通过了阈值1的关键帧，计算它们各自的BoW向量与当前帧 <code>F</code> 的BoW向量之间的<strong>相似度得分 <code>si</code></strong>。这个得分通常由词袋库提供，例如 <code>si = mpVoc-&gt;score(F-&gt;mBowVec, pKFi-&gt;mBowVec);</code>。</li><li>将计算得到的得分 <code>si</code> 存入关键帧对象中，如 <code>pKFi-&gt;mRelocScore = si;</code>。</li><li>将 <code>(si, pKFi)</code> 这样一个得分和关键帧指针的配对存入一个新的列表 <code>lScoreAndMatch</code>。</li><li>如果 <code>lScoreAndMatch</code> 在此步骤后为空，则返回空列表。</li></ul></li><li><strong>步骤 4：计算共视组累积得分并设定阈值2 (<code>minScoreToRetain</code>)</strong><ul><li><strong>核心思想：</strong> 单个关键帧与当前帧的视觉相似度可能存在偶然性。如果一个候选关键帧及其在地图中共视关系紧密的“邻居”们（共同构成一个稳定的场景区域）都与当前帧相似，那么这个区域就更可能是当前相机真实观察到的场景。这增加了重定位的鲁棒性。</li><li>遍历 <code>lScoreAndMatch</code> 中的每一个配对 <code>(score, pKFi)</code>：<ul><li>令 <code>pKFi</code> 为当前考虑的中心候选关键帧。</li><li>获取 <code>pKFi</code> 在共视图中连接最紧密的一组关键帧（例如，通过 <code>pKFi-&gt;GetBestCovisibilityKeyFrames(10)</code> 获取共视程度最高的10个邻居关键帧 <code>vpNeighs</code>）。</li><li>计算这个以 <code>pKFi</code> 为核心的“共视组”的<strong>累积得分 <code>accScore</code></strong>：<ul><li>初始 <code>accScore = pKFi-&gt;mRelocScore</code> (即 <code>score</code> from <code>lScoreAndMatch</code>)。</li><li>遍历 <code>vpNeighs</code> 中的每一个邻居关键帧 <code>pKF2</code>。</li><li><strong>重要条件：</strong> 只有当这个邻居 <code>pKF2</code> <strong>也存在于 <code>lScoreAndMatch</code> 中</strong>（即 <code>pKF2-&gt;mnRelocQuery == F-&gt;mnId</code>，意味着它也通过了步骤3的筛选，与当前帧F有足够的直接相似性）时，才将其自身的得分 <code>pKF2-&gt;mRelocScore</code> 加入到 <code>accScore</code> 中。</li></ul></li><li>在计算 <code>accScore</code> 的同时，记录这个共视组中，拥有最高<strong>个体BoW得分</strong>的关键帧及其得分（设为 <code>pBestKFInGroup</code> 和 <code>bestScoreInGroup</code>）。初始时 <code>pBestKFInGroup = pKFi</code>, <code>bestScoreInGroup = pKFi-&gt;mRelocScore</code>。</li><li>将 <code>(accScore, pBestKFInGroup)</code> 存入一个新的列表 <code>lAccScoreAndMatch</code>。</li><li>在遍历所有 <code>lScoreAndMatch</code> 中的 <code>pKFi</code> 后，记录所有共视组中出现的最高累积得分 <code>bestAccScore</code>。</li></ul></li><li>设定第二个筛选阈值：<code>minScoreToRetain = 0.75f * bestAccScore</code> (例如，取最高累积得分的75%)。</li></ul></li><li><strong>步骤 5：筛选最终候选关键帧组 (<code>vpRelocCandidates</code>)</strong><ul><li>遍历 <code>lAccScoreAndMatch</code> 中的每一个配对 <code>(accScore, pBestKFInGroup)</code>。</li><li>只选择那些其累积得分 <code>accScore &gt; minScoreToRetain</code> 的组。</li><li>对于每个通过此阈值的组，将其对应的那个具有最高个体得分的关键帧 <code>pBestKFInGroup</code> 加入到最终的候选关键帧列表 <code>vpRelocCandidates</code> 中。</li><li>使用 <code>std::set&lt;KeyFrame*&gt;</code> 来辅助去重，确保同一个关键帧不会被重复添加到 <code>vpRelocCandidates</code>。</li><li>返回 <code>vpRelocCandidates</code>。这个列表中的关键帧将是接下来进行实际PnP求解和位姿优化的对象。</li></ul></li></ol><h3 id="c-执行重定位尝试-trackingrelocalization"><a class="markdownIt-Anchor" href="#c-执行重定位尝试-trackingrelocalization"></a> C. 执行重定位尝试 (<code>Tracking::Relocalization()</code>)</h3><p>在获得了经过层层筛选的候选关键帧列表后，系统将逐个尝试用它们来恢复当前丢失帧 <code>mCurrentFrame</code> 的位姿。</p><ol><li><strong>步骤 1：计算当前帧的BoW向量。</strong><ul><li><code>mCurrentFrame.ComputeBoW();</code> (如果尚未计算)。</li></ul></li><li><strong>步骤 2：获取候选关键帧列表。</strong><ul><li>调用 <code>mpKeyFrameDB-&gt;DetectRelocalizationCandidates(&amp;mCurrentFrame)</code> 得到 <code>vpCandidateKFs</code>。</li><li>如果 <code>vpCandidateKFs</code> 为空，则表示没有找到合适的候选，重定位失败，函数返回 <code>false</code>。</li></ul></li><li><strong>步骤 3：初始化 - 遍历候选，进行初步BoW匹配，准备PnP求解器。</strong><ul><li>对 <code>vpCandidateKFs</code> 中的每个候选关键帧 <code>pKF</code>：<ul><li>检查 <code>pKF</code> 是否有效 (例如，<code>pKF-&gt;isBad()</code>)，无效则跳过。</li><li><strong>BoW特征匹配：</strong> 调用 <code>matcher.SearchByBoW(pKF, mCurrentFrame, vvpMapPointMatches[i])</code>。<code>vvpMapPointMatches[i]</code> 是一个 <code>std::vector&lt;MapPoint*&gt;</code>，存储了当前帧 <code>mCurrentFrame</code> 的特征点与候选关键帧 <code>pKF</code> 的地图点之间的匹配关系。函数返回匹配上的点对数量 <code>nmatches</code>。</li><li><strong>初步过滤：</strong> 如果 <code>nmatches &lt; 15</code> (阈值，表示匹配太少)，则认为此候选关键帧不足以进行可靠的位姿估计，将其标记为已丢弃 <code>vbDiscarded[i] = true;</code>，然后继续处理下一个候选。</li><li><strong>创建PnP求解器：</strong> 如果 <code>nmatches &gt;= 15</code>，则为此候选关键帧创建一个 <code>PnPsolver</code> 实例（ORB-SLAM2中使用的是EPnP算法的实现）。这个求解器会与当前帧 <code>mCurrentFrame</code> 以及刚获得的匹配 <code>vvpMapPointMatches[i]</code> 相关联。同时设置PnP求解器所需的RANSAC参数，如：<ul><li><code>probability = 0.99</code> (RANSAC成功概率)</li><li><code>minInliers = 10</code> (RANSAC迭代中，接受一个解所需的最小内点数)</li><li><code>maxIterations = 300</code> (RANSAC最大迭代次数)</li><li><code>minSet = 4</code> (EPnP求解一次位姿所需的最少点对数)</li><li><code>epsilon = 0.5</code> (RANSAC内点比例，用于提前终止)</li><li><code>th2 = 5.991</code> (卡方检验阈值，用于判断一个点是否为内点，会根据特征点金字塔层级调整)</li></ul></li><li>记录有效的候选PnP求解器数量 <code>nCandidates++</code>。</li></ul></li></ul></li><li><strong>步骤 4：核心循环 - 迭代尝试PnP求解、位姿优化和投影匹配。</strong><ul><li>此步骤在一个 <code>while (nCandidates &gt; 0 &amp;&amp; !bMatch)</code> 的循环中进行。<code>bMatch</code> 标志位表示是否已有一个候选关键帧成功重定位了当前帧。</li><li>在循环中，再次遍历所有未被标记为 <code>vbDiscarded[i]</code> 的候选关键帧及其对应的 <code>PnPsolver</code> <code>vpPnPsolvers[i]</code>：<ul><li><strong>a. EPnP迭代求解初始位姿：</strong><ul><li>调用 <code>PnPsolver* pSolver = vpPnPsolvers[i];</code></li><li><code>cv::Mat Tcw = pSolver-&gt;iterate(5, bNoMore, vbInliers, nInliers);</code><ul><li><code>iterate(5, ...)</code>: 尝试进行最多5轮RANSAC迭代（或者直到内部判断已充分探索）。</li><li><code>bNoMore</code>: 输出参数，如果为 <code>true</code>，表示此 <code>PnPsolver</code> 的RANSAC迭代已达到最大次数或无法找到更多解，应丢弃此候选。</li><li><code>vbInliers</code>: 输出参数，一个 <code>std::vector&lt;bool&gt;</code>，标记了EPnP求解后哪些初始匹配点被认为是内点。</li><li><code>nInliers</code>: 输出参数，内点的数量。</li><li><code>Tcw</code>: 如果求解成功，返回估计的从世界到当前相机的位姿变换矩阵。</li></ul></li><li>如果 <code>bNoMore</code> 为 <code>true</code>，则 <code>vbDiscarded[i] = true; nCandidates--;</code> 并继续处理下一个候选。</li></ul></li><li><strong>b. 首次位姿优化 (BA) - 如果EPnP成功：</strong><ul><li>如果 <code>!Tcw.empty()</code> (EPnP求解得到一个位姿)：<ul><li>将求解得到的 <code>Tcw</code> 赋给当前帧：<code>Tcw.copyTo(mCurrentFrame.mTcw);</code>。</li><li>根据 <code>vbInliers</code>，将EPnP认为是内点的那些匹配（即 <code>vvpMapPointMatches[i][j]</code>）关联到当前帧的地图点列表 <code>mCurrentFrame.mvpMapPoints[j]</code>。其他未标记为内点的，在当前帧中对应位置设为 <code>NULL</code>。</li><li>调用 <code>int nGood = Optimizer::PoseOptimization(&amp;mCurrentFrame);</code>。这是一个仅优化位姿的BA，它使用当前帧 <code>mCurrentFrame</code> 中所有已关联的地图点来优化其位姿 <code>mCurrentFrame.mTcw</code>。函数返回优化后的内点数量 <code>nGood</code>。</li><li><strong>初步判断：</strong> 如果 <code>nGood &lt; 10</code> (优化后内点数太少)，说明当前EPnP解引导的BA效果不佳。此时<strong>不会立即丢弃该候选帧</strong> (<code>vbDiscarded[i]</code> 不变)，而是 <code>continue;</code> 跳过后续的投影匹配等步骤，直接尝试此候选帧的下一次EPnP迭代（如果 <code>pSolver-&gt;iterate</code> 允许）或下一个候选帧。</li><li>清除BA优化过程中标记为外点 (<code>mCurrentFrame.mvbOutlier[io]</code>) 的地图点在当前帧的关联 (设为 <code>NULL</code>)。</li></ul></li></ul></li><li><strong>c. 首次投影匹配 (尝试增加匹配点 - Rescue Attempt 1) - 如果首次BA内点数不足：</strong><ul><li>如果 <code>nGood &lt; 50</code> (例如，阈值设为50，表示首次BA后的内点数仍不够理想，但有挽救价值)：<ul><li><code>sFound</code>: 一个 <code>std::set&lt;MapPoint*&gt;</code>，包含当前 <code>mCurrentFrame.mvpMapPoints</code> 中所有非空的地图点（即当前已知的内点）。</li><li><code>int nadditional = matcher2.SearchByProjection(mCurrentFrame, vpCandidateKFs[i], sFound, 10, 100);</code><ul><li><code>mCurrentFrame</code>: 当前帧，其位姿是刚通过首次BA优化过的。</li><li><code>vpCandidateKFs[i]</code>: 当前正在处理的候选关键帧。</li><li><code>sFound</code>: 告诉 <code>SearchByProjection</code> 不要重复匹配这些已经找到的点。</li><li><code>10</code>: 投影搜索窗口大小（像素）。</li><li><code>100</code>: 可能是对地图点深度或与当前帧的距离施加的限制，或者是描述子匹配的某种阈值参数。</li></ul></li><li>此函数的作用是：将候选关键帧 <code>vpCandidateKFs[i]</code> 中那些尚未与当前帧匹配上的地图点，根据当前帧已优化的位姿 <code>mCurrentFrame.mTcw</code>，投影到当前帧的图像平面上。然后在投影点附近搜索当前帧的特征点，如果找到匹配，就将这个新的3D-2D对应关系添加到 <code>mCurrentFrame</code> 中。<code>nadditional</code> 是新增加的匹配点数量。</li></ul></li></ul></li><li><strong>d. 第二次位姿优化 (BA) - 如果首次投影匹配有效：</strong><ul><li>如果 <code>nadditional + nGood &gt;= 50</code> (即首次投影匹配增加了足够的点，使得总数有望达标)：<ul><li>再次调用 <code>nGood = Optimizer::PoseOptimization(&amp;mCurrentFrame);</code> 使用更多的匹配点（原有的 <code>nGood</code> + 新增的 <code>nadditional</code>）来优化位姿。</li></ul></li></ul></li><li><strong>e. 第二次投影匹配 (更精细地增加匹配点 - Rescue Attempt 2) - 如果二次BA后仍有希望：</strong><ul><li>如果第二次BA优化后，内点数 <code>nGood</code> 仍未达到最终目标50，但处于一个有希望的区间，例如 <code>30 &lt; nGood &lt; 50</code>：<ul><li>这表明当前帧的位姿可能因为上一步的BA而变得更准确了。值得用更严格的参数再尝试一次投影匹配，以期找到更多高质量的匹配。</li><li>清空 <code>sFound</code> 并重新加入当前所有内点。</li><li><code>nadditional = matcher2.SearchByProjection(mCurrentFrame, vpCandidateKFs[i], sFound, 3, 64);</code><ul><li><code>3</code>: 使用更小的投影搜索窗口（更精确的位姿允许更小的搜索范围）。</li><li><code>64</code>: 可能是更严格的描述子匹配阈值（例如，ORB描述子汉明距离上限）。</li></ul></li></ul></li></ul></li><li><strong>f. 第三次位姿优化 (BA) - 如果第二次投影匹配有效：</strong><ul><li>如果 <code>nGood + nadditional &gt;= 50</code> (即第二次投影匹配使得总数达标)：<ul><li>最后进行一次 <code>nGood = Optimizer::PoseOptimization(&amp;mCurrentFrame);</code>。</li><li>清除优化后的外点。</li></ul></li></ul></li><li><strong>g. 判断当前候选关键帧是否成功重定位：</strong><ul><li>如果在上述 <strong>任何一次BA优化</strong> (b, d, 或 f) 之后，内点数量 <code>nGood &gt;= 50</code> (阈值，表示找到了足够多的可靠匹配)：<ul><li>则认为使用当前的候选关键帧 <code>vpCandidateKFs[i]</code> 已经成功地重定位了当前帧 <code>mCurrentFrame</code>。</li><li>设置 <code>bMatch = true;</code>。</li><li><strong><code>break;</code></strong> 跳出当前对所有候选关键帧的遍历循环（即<code>for(int i=0; i&lt;nKFs; i++)</code>循环）。一旦有一个候选成功，就不再考虑其他候选了。</li></ul></li></ul></li></ul></li></ul></li><li><strong>步骤 5：返回最终结果。</strong><ul><li>当 <code>while</code> 循环结束（因为 <code>nCandidates &lt;= 0</code> 或 <code>bMatch == true</code>）：<ul><li>如果 <code>!bMatch</code>，则表示尝试了所有（或所有有希望的）候选关键帧后，均未能成功重定位。函数返回 <code>false</code>。</li><li>如果 <code>bMatch</code> 为 <code>true</code>，则重定位成功。<ul><li>记录当前成功重定位的帧ID：<code>mnLastRelocFrameId = mCurrentFrame.mnId;</code> (这可以用于防止系统在短时间内对同一帧反复进行不必要的重定位尝试)。</li><li>函数返回 <code>true</code>。当前帧 <code>mCurrentFrame</code> 的位姿 <code>mTcw</code> 和关联的地图点 <code>mvpMapPoints</code> 已经被更新。</li></ul></li></ul></li></ul></li></ol><h2 id="四-重定位效果与重要性"><a class="markdownIt-Anchor" href="#四-重定位效果与重要性"></a> 四、重定位效果与重要性</h2><ul><li><strong>鲁棒性强：</strong> 重定位模块的设计使其具有“顽强的生命力”，能够在诸多挑战性场景下（如环境外观发生较大尺度变化、存在动态物体干扰、光照剧变后恢复等）成功找回丢失的相机位姿。</li><li><strong>系统连续性保障：</strong> 它是保证SLAM系统长期稳定运行和从跟踪失败中恢复的关键。没有有效的重定位，一次跟踪丢失就可能导致整个SLAM任务失败。</li></ul><h2 id="五-总结"><a class="markdownIt-Anchor" href="#五-总结"></a> 五、总结</h2><p>ORB-SLAM2的重定位是一个精心设计的多阶段过程，它巧妙地结合了：</p><ul><li><strong>高效的全局场景识别</strong>：通过词袋模型和倒排索引技术，快速从大规模地图中检索潜在匹配区域。</li><li><strong>鲁棒的初始位姿估计</strong>：利用EPnP算法和RANSAC策略，从稀疏的初始匹配中求解相机位姿。</li><li><strong>迭代的位姿精化和数据关联</strong>：通过多次BA优化和引导性的投影匹配，不断提升位姿的准确性并增加可靠的3D-2D对应关系。</li></ul><p>这个模块的复杂性正体现了其在应对SLAM核心挑战——跟踪丢失——时所付出的努力和实现的高性能。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>跟踪 —— 恒速跟踪</title>
      <link href="/2025/05/13/orbslam2-8/"/>
      <url>/2025/05/13/orbslam2-8/</url>
      
        <content type="html"><![CDATA[<h1 id="trackwithmotionmodel"><a class="markdownIt-Anchor" href="#trackwithmotionmodel"></a> TrackWithMotionModel</h1><h2 id="一-核心思想与定义"><a class="markdownIt-Anchor" href="#一-核心思想与定义"></a> 一、核心思想与定义</h2><p>恒速模型跟踪基于一个核心假设：<strong>在连续的图像帧之间极短的时间内（通常为几十毫秒），相机的运动状态可以近似为匀速运动。</strong></p><p>因此，可以利用<strong>上一帧的位姿</strong>以及先前估计得到的**帧间相对运动（速度和角速度，统称为速度 V）来预测当前帧的位姿，并以此为初始值进行后续的匹配和优化。</p><h2 id="二-为何使用恒速模型跟踪"><a class="markdownIt-Anchor" href="#二-为何使用恒速模型跟踪"></a> 二、为何使用恒速模型跟踪？</h2><ol><li><strong>效率优先：</strong><ul><li>在地图初始化并通过参考关键帧跟踪成功获得初始速度后，恒速模型提供了一种<strong>更简单、计算更快</strong>的位姿估计方法。</li><li>相比于参考关键帧跟踪（涉及词袋匹配等），恒速模型直接利用运动先验，对实时性要求高的SLAM系统非常重要。</li></ul></li><li><strong>常用策略：</strong><ul><li>一旦系统有了速度信息，恒速模型便成为跟踪线程中的首选和最常用的跟踪方法。</li></ul></li></ol><h2 id="三-关键公式"><a class="markdownIt-Anchor" href="#三-关键公式"></a> 三、关键公式</h2><ol><li><strong>速度 (Velocity) <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">V</mi></mrow><annotation encoding="application/x-tex">\mathbf{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span></span></span></span>：</strong><ul><li>表示从上一帧 (<code>l</code>) 到当前帧 (<code>c</code>) 的相对位姿变换 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{cl}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>如果上一帧的世界位姿为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">w</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{T}{\mathrm{lw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">T</span></span><span class="mord"><span class="mord"><span class="mord mathrm">l</span><span class="mord mathrm" style="margin-right:0.01389em;">w</span></span></span></span></span></span><em>，当前帧的世界位姿为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">w</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{T}{\mathrm{cw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">T</span></span><span class="mord"><span class="mord"><span class="mord mathrm">c</span><span class="mord mathrm" style="margin-right:0.01389em;">w</span></span></span></span></span></span></em>，则：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">V</mi><mo>=</mo><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">l</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">w</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">w</mi></mrow></msub><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">w</mi></mrow></msub><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">w</mi><mi mathvariant="normal">l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{V} = \mathbf{T}_{\mathrm{cl}} = \mathbf{T}_{\mathrm{cw}} (\mathbf{T}_{\mathrm{lw}})^{-1} = \mathbf{T}_{\mathrm{cw}} \mathbf{T}_{\mathrm{wl}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight">l</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span><span class="mord mathrm mtight">l</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>在实践中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">V</mi></mrow><annotation encoding="application/x-tex">\mathbf{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span></span></span></span> 通常是上上帧到上一帧的运动。</li></ul></li><li><strong>当前帧位姿预测 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{cw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：</strong><ul><li>利用速度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">V</mi></mrow><annotation encoding="application/x-tex">\mathbf{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span></span></span></span> 和上一帧的世界位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{lw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><em>：<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">w</mi></mrow></msub><mo>=</mo><mi mathvariant="bold">V</mi><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{cw}} = \mathbf{V} \mathbf{T}_{\mathrm{lw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">c</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></em></li><li>此预测结果作为当前帧位姿优化的初始值。</li></ul></li></ol><h2 id="四-关键步骤与原理"><a class="markdownIt-Anchor" href="#四-关键步骤与原理"></a> 四、关键步骤与原理</h2><p>恒速模型跟踪主要包含两个大的阶段：<code>UpdateLastFrame()</code> 的预处理和 <code>TrackWithMotionModel()</code> 的核心跟踪流程。</p><h3 id="a-预处理更新上一帧信息-updatelastframe"><a class="markdownIt-Anchor" href="#a-预处理更新上一帧信息-updatelastframe"></a> A. 预处理：更新上一帧信息 (<code>UpdateLastFrame()</code>)</h3><p>此步骤在正式跟踪当前帧之前，对上一帧 (<code>mLastFrame</code>) 进行关键的更新。</p><ol><li><strong>更新上一帧的世界位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{lw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：</strong><ul><li><strong>目的：</strong> 确保用于预测当前帧的上一帧位姿是最新的、最准确的。</li><li><strong>方法：</strong> 不直接使用上一帧跟踪后得到的位姿，而是通过其对应的<strong>参考关键帧 (<code>pRef</code>)</strong> 来间接更新。<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">w</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">r</mi></mrow></msub><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{lw}} = \mathbf{T}_{\mathrm{lr}} \mathbf{T}_{\mathrm{rw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">r</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />其中：<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{lw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 上一帧在世界坐标系下的位姿 (待更新)。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{lr}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">l</span><span class="mord mathrm mtight">r</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 上一帧相对于其参考关键帧的位姿变换 (已知，存储如 <code>mlRelativeFramePoses</code>)。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold">T</mi><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\mathbf{T}_{\mathrm{rw}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">T</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">r</span><span class="mord mathrm mtight" style="margin-right:0.01389em;">w</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 上一帧的参考关键帧在世界坐标系下的位姿 (该位姿可能已被局部建图线程优化过，更准确)。</li></ul></li><li><strong>原理：</strong> 普通帧（如果未被选为关键帧）是“用完即抛”的，其位姿不会被后端持续优化。而关键帧的位姿会通过局部建图和回环检测不断优化。通过上述公式，可以将关键帧的优化成果传递给上一普通帧，从而提高其位姿的准确性。</li></ul></li><li><strong>为双目/RGB-D相机的上一帧创建临时地图点：</strong><ul><li><strong>适用条件：</strong> 仅当传感器为双目相机 (System::STEREO) 或 RGB-D 相机 (System::RGBD) 时执行，且上一帧不是关键帧。单目相机 (System::MONOCULAR) 则跳过此步。</li><li><strong>目的：</strong> 利用双目/RGB-D可直接获取深度信息的优势，为上一帧中一些有深度但尚未关联地图点的特征点创建<strong>临时地图点 (Temporal MapPoints)</strong>。这些点能显著<strong>增加下一帧（即当前帧）跟踪时的3D信息，提高投影匹配的稳定性和成功率。</strong></li><li><strong>特性：</strong><ul><li><strong>临时性：</strong> 这些点仅用于当前帧的跟踪，不会加入到全局地图中，在跟踪流程的后续阶段会被清除（例如，在创建新关键帧之前）。</li><li><strong>简化属性：</strong> 创建时可能不包含完整的地图点属性，因为其生命周期很短。</li></ul></li><li><strong>创建流程：</strong><ol><li><strong>筛选：</strong> 找出上一帧中所有具有有效深度值 (<code>mLastFrame.mvDepth[i] &gt; 0</code>) 的特征点。</li><li><strong>排序：</strong> 将这些点按深度值从小到大排序。</li><li><strong>创建判断：</strong> 遍历排序后的点：<ul><li>如果该特征点在上一帧中没有对应的地图点 (<code>!mLastFrame.mvpMapPoints[i]</code>)。</li><li>或者其对应的地图点质量差（例如，被创建后从未被其他帧观测到 <code>pMP-&gt;Observations() &lt; 1</code>）。<br />则认为需要为该特征点创建一个新的临时地图点。</li></ul></li><li><strong>生成：</strong> 利用特征点的2D坐标和深度值，通过反投影 (<code>mLastFrame.UnprojectStereo(i)</code>) 计算其在上一帧相机坐标系下的3D坐标，然后转换到世界坐标系下，创建新的<code>MapPoint</code>对象。</li><li><strong>存储：</strong> 将新创建的临时地图点存入 <code>mLastFrame.mvpMapPoints</code> 的对应位置，并加入一个临时列表 <code>mlpTemporalPoints</code> 以便后续统一清理。</li><li><strong>终止条件：</strong> 当创建的临时点达到一定数量（如 <code>nPoints &gt; 100</code>）且当前处理的点的深度已超过设定阈值 (<code>mThDepth</code>，例如40倍基线）时，停止创建（太远或太多的点可能反而降低效率或引入不确定性）。</li></ol></li></ul></li></ol><h3 id="b-核心跟踪流程-trackwithmotionmodel"><a class="markdownIt-Anchor" href="#b-核心跟踪流程-trackwithmotionmodel"></a> B. 核心跟踪流程 (<code>TrackWithMotionModel()</code>)</h3><ol><li><strong>调用预处理：</strong><ul><li>执行 <code>UpdateLastFrame()</code> 来更新上一帧的位姿并（如果适用）创建临时地图点。</li></ul></li><li><strong>初始位姿估计：</strong><ul><li>使用恒速模型公式预测当前帧 <code>mCurrentFrame</code> 的初始世界位姿：<br /><code>mCurrentFrame.SetPose(mVelocity * mLastFrame.mTcw);</code></li></ul></li><li><strong>投影匹配 (<code>SearchByProjection</code>)：</strong><ul><li><strong>数据源：</strong> 将<strong>上一帧 <code>mLastFrame</code> 中所有有效的地图点</strong>（包括常规地图点和刚刚为双目/RGB-D创建的临时地图点）投影到当前帧 <code>mCurrentFrame</code> 的图像平面上（基于当前帧的初始估计位姿）。</li><li><strong>匹配：</strong> 在每个投影点周围的一个预设搜索窗口内（单目通常 <code>th=15</code> 像素，双目/RGB-D <code>th=7</code> 像素），为当前帧的ORB特征点寻找匹配的地图点。</li><li><strong>鲁棒性增强 (二次搜索)：</strong><ul><li>如果初次投影匹配找到的匹配点数量不足（如 <code>nmatches &lt; 20</code>），系统会认为初始位姿估计可能不够准确或场景变化稍大。</li><li>此时，会将搜索窗口的半径扩大一倍（<code>2*th</code>），并重新进行一次投影匹配，尝试找回更多潜在的匹配。</li></ul></li><li>如果二次搜索后匹配点仍然过少，则认为恒速模型跟踪失败。</li></ul></li><li><strong>位姿优化 (<code>Optimizer::PoseOptimization</code>)：</strong><ul><li>基于投影匹配成功的3D地图点及其在当前帧中对应的2D特征点，通过非线性优化算法（如Bundle Adjustment的仅优化位姿版本）最小化重投影误差，进一步精确当前帧的位姿。</li><li><strong>注意：</strong> 此阶段仅优化当前帧的位姿，不改变3D地图点的坐标。</li></ul></li><li><strong>外点剔除：</strong><ul><li>在位姿优化后，根据重投影误差等准则，识别并剔除那些可能是错误匹配的特征点（外点）。</li><li>更新当前帧内点（<code>mvpMapPoints</code>）和外点标记（<code>mvbOutlier</code>）。</li></ul></li><li><strong>成功判断：</strong><ul><li>统计最终有效的内点匹配数量 (<code>nmatchesMap</code>)。</li><li>如果内点数量大于等于一个阈值（例如，在非“仅定位”模式下 <code>nmatchesMap &gt;= 10</code>），则认为恒速模型跟踪成功，返回 <code>true</code>。否则返回 <code>false</code>。</li><li>在“仅定位”模式下 (<code>mbOnlyTracking</code>)，对内点数量有更严格的要求（如 <code>nmatchesMap &lt; 10</code> 会标记 <code>mbVO</code> 为 <code>true</code>，表示可能退化为视觉里程计，且总匹配数 <code>nmatches &gt; 20</code> 才认为成功）。</li></ul></li></ol><h2 id="五-优缺点总结"><a class="markdownIt-Anchor" href="#五-优缺点总结"></a> 五、优缺点总结</h2><ul><li><strong>优点：</strong><ol><li><strong>高效性：</strong> 仅依赖上一帧信息和已知的速度模型，计算量小，速度快，是系统正常运行时的主要跟踪手段。</li><li><strong>稳定性增强技巧：</strong><ul><li>双目/RGB-D模式下动态生成临时地图点，有效增加了可用于跟踪的3D点数量。</li><li>投影匹配不足时，采用扩大搜索半径的二次尝试策略，提高了对轻微运动变化的鲁棒性。</li><li>通过参考关键帧更新上一帧位姿，间接利用了后端优化的成果。</li></ul></li></ol></li><li><strong>缺点：</strong><ol><li><strong>理想化假设：</strong> “匀速运动”的假设在相机发生剧烈运动（如快速旋转、急停/急加速）或系统帧率较低（导致帧间变化大）时可能不成立。</li><li><strong>易丢失：</strong> 当上述假设不满足时，预测的初始位姿与真实位姿偏差可能过大，导致投影匹配失败，进而跟踪丢失。此时系统需要回退到参考关键帧跟踪或进行重定位。</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>跟踪 —— 参考关键帧跟踪</title>
      <link href="/2025/05/13/orbslam2-7/"/>
      <url>/2025/05/13/orbslam2-7/</url>
      
        <content type="html"><![CDATA[<h1 id="trackreferencekeyframe"><a class="markdownIt-Anchor" href="#trackreferencekeyframe"></a> TrackReferenceKeyFrame</h1><h2 id="一-核心目标"><a class="markdownIt-Anchor" href="#一-核心目标"></a> 一、核心目标</h2><p>当相机捕获到新的普通帧（位姿未知）时，利用一个已知的、位姿相对准确的<strong>参考关键帧 (Reference KeyFrame)</strong> 来估计当前普通帧的精确位姿。</p><h2 id="二-应用场景"><a class="markdownIt-Anchor" href="#二-应用场景"></a> 二、应用场景</h2><p>参考关键帧跟踪主要在以下两种情况下被调用：</p><ol><li><strong>系统刚初始化后：</strong><ul><li><strong>场景描述：</strong> SLAM 系统通过初始几帧（如第1、2帧）完成地图初始化，并将它们设为关键帧。当后续帧（如第3帧）进入时，系统尚无稳定的运动模型（例如，恒速模型中的速度为空）。</li><li><strong>为何使用：</strong> 此时，最可靠的方式是直接将新帧与已初始化的关键帧进行匹配，以获得新帧的初始位姿。参考关键帧的位姿是后续建图和跟踪的基础，相对可靠。</li></ul></li><li><strong>恒速模型跟踪失败后：</strong><ul><li><strong>场景描述：</strong> 系统尝试使用恒速模型预测当前帧位姿失败（可能由于相机运动剧烈、场景纹理缺乏等）。</li><li><strong>为何使用：</strong><ul><li><strong>恒速模型局限性：</strong> 仅依赖前一帧信息，信息量有限，速度估计可能不准，易导致错误匹配。</li><li><strong>参考关键帧优势：</strong> 通常经过局部建图线程优化，位姿更精确；可能关联了更多地图点，3D信息更丰富。因此，作为一种更稳健的备选方案。</li></ul></li></ul></li></ol><h2 id="三-具体流程与原理"><a class="markdownIt-Anchor" href="#三-具体流程与原理"></a> 三、具体流程与原理</h2><p>参考关键帧跟踪主要包含以下步骤：</p><ol><li><strong>当前帧特征编码 (BoW转换)：</strong><ul><li><strong>操作：</strong> 将当前普通帧提取的ORB特征（特别是描述子）转化为词袋 (Bag-of-Words, BoW) 向量。</li><li><strong>原理：</strong> BoW模型通过预训练的视觉词典，将特征描述子映射为“视觉单词”，形成一个表示图像内容的向量。<strong>目的是为后续高效特征匹配做准备，缩小匹配搜索范围。</strong></li></ul></li><li><strong>基于BoW的快速特征匹配：</strong><ul><li><strong>操作：</strong> 利用当前帧和参考关键帧的BoW向量，进行<code>SearchByBoW</code>特征匹配。</li><li><strong>原理：</strong> 只对在BoW空间中属于相同或相近“视觉单词”的特征点进行匹配，<strong>极大提高匹配效率和成功率</strong>。成功匹配后，当前帧的2D特征点就与参考关键帧的3D地图点建立了对应关系。</li></ul></li><li><strong>初始位姿赋予与3D-2D优化：</strong><ul><li><strong>操作：</strong><ol><li><strong>初始位姿估计：</strong> 通常使用<strong>上一帧 (<code>mLastFrame</code>) 的位姿</strong>作为当前帧位姿的初始猜测值，以加速优化过程的收敛。</li><li><strong>位姿优化 (<code>Optimizer::PoseOptimization</code>)：</strong> 基于步骤2建立的“当前帧2D点 - 参考关键帧3D点”的匹配关系，通过最小化<strong>重投影误差 (Reprojection Error)</strong> 来优化当前帧的位姿。</li></ol></li><li><strong>原理：</strong><ul><li><strong>重投影误差：</strong> 将参考关键帧的3D地图点根据当前帧的估计位姿投影到当前帧图像平面，计算投影点与实际匹配的2D特征点之间的像素距离。</li><li><strong>优化目标：</strong> 调整当前帧的位姿，使得所有匹配点的总重投影误差最小。</li><li><strong>重点：</strong> 在此优化步骤中，<strong>仅优化当前帧的位姿，不改变参考关键帧的3D地图点坐标</strong>，因为后者被认为是相对准确的。</li></ul></li></ul></li><li><strong>外点剔除：</strong><ul><li><strong>操作：</strong> 在位姿优化后，识别并剔除那些可能是错误匹配的特征点（外点, Outliers）。</li><li><strong>原理：</strong> 位姿优化过程本身有助于识别外点（例如，重投影误差过大的点）。剔除外点是为了<strong>保证最终位姿估计的鲁棒性和准确性</strong>，只保留高质量的内点 (Inliers) 匹配。</li></ul></li><li><strong>跟踪成功判断：</strong><ul><li><strong>操作：</strong> 检查经过外点剔除后，剩余的有效内点匹配数量。</li><li><strong>原理：</strong> 如果内点数量超过预设阈值（例如，ORB-SLAM2中初始匹配少于15个或优化后内点少于10个则认为失败），则认为参考关键帧跟踪成功，当前帧位姿得到可靠估计；否则，跟踪失败。</li></ul></li></ol><h2 id="四-总结"><a class="markdownIt-Anchor" href="#四-总结"></a> 四、总结</h2><p>参考关键帧跟踪是ORB-SLAM2跟踪线程中的一个<strong>核心且鲁棒的位姿估计算法</strong>。它通过利用位姿已知的参考关键帧，结合高效的BoW特征匹配和精确的3D-2D位姿优化技术，为当前帧提供可靠的位姿估计，尤其在系统初始化阶段或快速运动模型失效时发挥着关键作用。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>投影匹配--闭环版</title>
      <link href="/2025/05/13/orbslam2-6/"/>
      <url>/2025/05/13/orbslam2-6/</url>
      
        <content type="html"><![CDATA[<h2 id="1-函数背景与目标"><a class="markdownIt-Anchor" href="#1-函数背景与目标"></a> 1. 函数背景与目标</h2><p>这个特定版本的 <code>SearchByProjection</code> 函数在 ORB-SLAM2 的<strong>闭环检测 (Loop Closing)</strong> 流程中被调用。</p><ul><li><strong>调用时机</strong>：当系统检测到一个潜在的闭环（当前关键帧 <code>pKF</code> 与过去的某个关键帧 <code>pLoopKF</code> 在同一位置），并且已经<strong>成功计算出</strong>连接这两个关键帧位姿的 <strong>Sim3 变换矩阵 <code>Scw</code></strong> 之后。</li><li><strong>函数目标</strong>：利用已知的 <code>Scw</code> 变换，为当前关键帧 <code>pKF</code> 中那些<strong>尚未建立地图点关联</strong>的特征点，去寻找并建立与<strong>闭环候选帧 <code>pLoopKF</code> 及其共视帧相关的地图点 (<code>vpPoints</code>)</strong> 之间的<strong>新匹配关系</strong>。其核心目的是<strong>增加闭环约束的数量和质量</strong>。</li></ul><h2 id="2-核心思想"><a class="markdownIt-Anchor" href="#2-核心思想"></a> 2. 核心思想</h2><p><strong>利用已计算出的 Sim3 变换 <code>Scw</code> 作为几何先验，指导特征匹配过程，从而在两个看似分离的地图部分之间建立更多可靠的连接点。</strong></p><p>具体来说，是将 <code>pLoopKF</code> 相关区域的 3D 地图点 (<code>vpPoints</code>)，通过 <code>Scw</code> 变换投影到当前关键帧 <code>pKF</code> 的图像平面上，然后在投影点附近搜索匹配的 <code>pKF</code> 特征点。</p><h2 id="3-主要执行步骤与思想解析"><a class="markdownIt-Anchor" href="#3-主要执行步骤与思想解析"></a> 3. 主要执行步骤与思想解析</h2><h3 id="a-输入与准备-code-step-1-initialization"><a class="markdownIt-Anchor" href="#a-输入与准备-code-step-1-initialization"></a> a. 输入与准备 (Code Step 1 &amp; Initialization)</h3><ul><li><strong>输入</strong>：当前关键帧 <code>pKF</code>，Sim3 变换 <code>Scw</code>，闭环候选区域的地图点 <code>vpPoints</code>，<code>pKF</code> 的匹配向量 <code>vpMatched</code> (既是输入也是输出)，搜索半径阈值 <code>th</code>。</li><li><strong>分解 Sim3</strong>：从 <code>Scw</code> 中提取出尺度 <code>scw</code>、旋转 <code>Rcw</code>、平移 <code>tcw</code> 以及 <code>pKF</code> 的相机光心世界坐标 <code>Ow</code>。这为后续的投影和检查做准备。</li><li><strong>初始化已匹配集合 <code>spAlreadyFound</code></strong>：将 <code>vpMatched</code> 中已存在的有效匹配放入 <code>set</code> 中，用于快速判断某个地图点是否已在 <code>pKF</code> 中有匹配，避免重复处理。</li></ul><h3 id="b-遍历候选地图点并尝试匹配-code-step-2"><a class="markdownIt-Anchor" href="#b-遍历候选地图点并尝试匹配-code-step-2"></a> b. 遍历候选地图点并尝试匹配 (Code Step 2)</h3><p>对 <code>vpPoints</code> 中的每一个地图点 <code>pMP</code> 进行如下尝试：</p><ol><li><strong>过滤</strong> (Step 2.1):<ul><li>跳过坏点 (<code>pMP-&gt;isBad()</code>)。</li><li>跳过在 <code>pKF</code> 中已经有对应匹配的 <code>pMP</code> (<code>spAlreadyFound.count(pMP)</code>)。 <strong>目标是寻找新匹配。</strong></li></ul></li><li><strong>投影与有效性检查</strong> (Step 2.2):<ul><li>将 <code>pMP</code> 的世界坐标 <code>p3Dw</code> 通过 <code>Rcw</code>, <code>tcw</code> 变换到 <code>pKF</code> 的相机坐标 <code>p3Dc</code>。</li><li>执行<strong>标准投影检查</strong>：<ul><li>深度为正 (点在相机前方)。</li><li>投影点 <code>(u, v)</code> 在 <code>pKF</code> 图像边界内。</li></ul></li><li>执行<strong>闭环特定的鲁棒性检查</strong>：<ul><li><strong>尺度不变性距离检查</strong>：计算 <code>pMP</code> 到 <code>pKF</code> 光心 <code>Ow</code> 的距离 <code>dist</code>，检查其是否在 <code>pMP</code> 的有效观测距离范围 (<code>minDistance</code>, <code>maxDistance</code>) 内。距离过远或过近可能导致描述子变化过大。</li><li><strong>视角检查</strong>：检查 <code>pKF</code> 对 <code>pMP</code> 的观测角度是否过大（&gt; 60度）。视角过大同样会导致外观变化剧烈。</li><li><strong>目的</strong>：这些额外检查是为了确保即使经过了可能的尺度漂移和较大的视角变化，匹配仍然是可靠的。</li></ul></li></ul></li><li><strong>预测尺度与搜索半径</strong>：<ul><li>根据 <code>pMP</code> 到 <code>pKF</code> 的距离 <code>dist</code>，预测 <code>pMP</code> 在 <code>pKF</code> 中应出现的金字塔层级 <code>nPredictedLevel</code>。</li><li>计算在该预测层级下的搜索半径 <code>radius</code>。</li></ul></li><li><strong>局部候选点搜索</strong> (Step 2.3):<ul><li>调用 <code>pKF-&gt;GetFeaturesInArea(u, v, radius)</code>，在投影点 <code>(u, v)</code> 附近找到空间上接近的 <code>pKF</code> 特征点索引 <code>vIndices</code>。</li></ul></li><li><strong>描述子匹配与最终确认</strong> (Step 2.4):<ul><li>遍历 <code>vIndices</code> 中的候选 <code>pKF</code> 特征点 <code>idx</code>：<ul><li><strong>再次过滤</strong>：跳过 <code>pKF</code> 中已匹配的特征点 (<code>vpMatched[idx]</code>)。</li><li><strong>严格尺度检查</strong>：要求候选点层级 <code>kpLevel</code> 必须与预测层级 <code>nPredictedLevel</code> 非常接近（通常是 <code>nPredictedLevel-1</code> 或 <code>nPredictedLevel</code>）。</li><li><strong>计算描述子距离</strong>：计算 <code>pMP</code> 描述子与候选点 <code>idx</code> 描述子之间的汉明距离 <code>dist</code>。</li><li><strong>寻找最佳匹配</strong>：找到距离最小 (<code>bestDist</code>) 的候选点 <code>bestIdx</code>。</li><li><strong>严格阈值判断</strong>：只有当 <code>bestDist</code> 小于一个<strong>较低的阈值 <code>TH_LOW</code></strong> 时，才认为匹配成功。这要求比普通跟踪更高的匹配置信度。</li><li><strong>存储新匹配</strong>：如果成功，更新 <code>vpMatched[bestIdx] = pMP</code>，并增加 <code>nmatches</code>。</li></ul></li></ul></li></ol><h3 id="c-返回结果-code-step-3"><a class="markdownIt-Anchor" href="#c-返回结果-code-step-3"></a> c. 返回结果 (Code Step 3)</h3><ul><li>函数返回本次调用新发现并建立的匹配数量 <code>nmatches</code>。</li></ul><h2 id="4-函数意义与重要性"><a class="markdownIt-Anchor" href="#4-函数意义与重要性"></a> 4. 函数意义与重要性</h2><ul><li>这个函数是<strong>闭环流程的关键一步</strong>，它利用已有的 Sim3 几何关系来指导匹配，可以<strong>挖掘出比初始检测更多的可靠匹配点</strong>。</li><li>这些新增的匹配点对于后续的 <strong>Sim3 位姿优化</strong> 和 <strong>地图点融合 (Map Fusion)</strong> 过程至关重要，它们提供了更强的约束，有助于精确地对齐地图、消除累积误差并修正尺度。</li><li>函数中各种严格的检查（尺度不变性、视角、低描述子距离阈值、严格尺度层级检查）确保了新增匹配的高质量，这对于保持地图一致性非常重要。</li></ul>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>投影匹配--帧间跟踪版</title>
      <link href="/2025/05/13/orbslam2-5/"/>
      <url>/2025/05/13/orbslam2-5/</url>
      
        <content type="html"><![CDATA[<h1 id="searchbyprojection-函数"><a class="markdownIt-Anchor" href="#searchbyprojection-函数"></a> (SearchByProjection) 函数</h1><h2 id="1-函数目标与核心思想"><a class="markdownIt-Anchor" href="#1-函数目标与核心思想"></a> 1. 函数目标与核心思想</h2><p><code>SearchByProjection</code> 是 ORB-SLAM2 中用于<strong>连续帧间跟踪 (Frame-to-Frame Tracking)</strong> 的核心函数之一。</p><p><strong>核心思想</strong>：利用<strong>上一帧 (<code>LastFrame</code>) 已经构建好的三维地图点 (<code>MapPoint</code>)</strong>，结合<strong>当前帧 (<code>CurrentFrame</code>) 的初始位姿估计</strong>，来<strong>预测</strong>这些三维点在当前帧图像上的二维投影位置。然后在这些投影位置附近的小范围内搜索，以找到对应的二维特征点，从而建立匹配关系。</p><p>这是一种<strong>基于模型的预测与搜索策略</strong>，比盲目搜索或纯二维匹配更高效和鲁棒。</p><h2 id="2-前提条件"><a class="markdownIt-Anchor" href="#2-前提条件"></a> 2. 前提条件</h2><ul><li><code>LastFrame</code> 中已经有一些特征点被成功三角化，并形成了稳定的 <code>MapPoint</code>（即已知其三维世界坐标）。</li><li>对 <code>CurrentFrame</code> 的相机位姿 <code>CurrentFrame.mTcw</code> (从世界坐标系到当前相机坐标系的变换) 有一个初始的估计。这个估计可能来自：<ul><li>匀速运动模型。</li><li>上一帧成功跟踪后的位姿。</li><li>重定位成功后的位姿。</li></ul></li></ul><h2 id="3-主要执行步骤与思想"><a class="markdownIt-Anchor" href="#3-主要执行步骤与思想"></a> 3. 主要执行步骤与思想</h2><h3 id="a-准备工作与帧间运动估计-code-steps-1-2"><a class="markdownIt-Anchor" href="#a-准备工作与帧间运动估计-code-steps-1-2"></a> a. 准备工作与帧间运动估计 (Code Steps 1, 2)</h3><ul><li><strong>初始化旋转直方图 (<code>rotHist</code>)</strong> (Code Step 1):<ul><li><strong>思想</strong>：用于后续的旋转一致性检查，以剔除外点。直方图统计匹配特征点对之间的主方向角度差。</li></ul></li><li><strong>计算当前帧相对于上一帧的运动信息</strong> (Code Step 2):<ul><li><strong>思想</strong>：了解相机是前进、后退还是基本保持距离，对于后续指导特征搜索的尺度（金字塔层级）非常重要。</li><li>通过两帧的位姿，计算出当前相机中心在上一帧相机坐标系下的平移向量 <code>tlc</code>。</li><li>根据 <code>tlc</code> 的 Z 分量判断前进 (<code>bForward</code>) 或后退 (<code>bBackward</code>) 状态（主要针对非单目）。</li></ul></li></ul><h3 id="b-投影地图点并进行局部搜索-code-steps-3-4"><a class="markdownIt-Anchor" href="#b-投影地图点并进行局部搜索-code-steps-3-4"></a> b. 投影地图点并进行局部搜索 (Code Steps 3, 4)</h3><ul><li><strong>遍历 <code>LastFrame</code> 的有效地图点 (<code>MapPoint</code>)</strong> (Code Step 3):<ul><li>对于每个与 <code>LastFrame</code> 特征点关联的 <code>MapPoint</code>：<ol><li>获取其三维世界坐标 <code>x3Dw</code>。</li><li>使用 <code>CurrentFrame</code> 的位姿 <code>Rcw</code>, <code>tcw</code> 将 <code>x3Dw</code> 变换到当前相机坐标系下，得到 <code>x3Dc</code>。</li><li><strong>检查有效性</strong>：确保点在相机前方 (<code>invzc &gt; 0</code>)。</li><li><strong>投影</strong>：使用 <code>CurrentFrame</code> 的相机内参将 <code>x3Dc</code> 投影到图像平面，得到预测的二维像素坐标 <code>(u, v)</code>。</li><li><strong>边界检查</strong>：确保 <code>(u, v)</code> 在图像有效范围内。</li></ol></li></ul></li><li><strong>在投影点附近使用 <code>GetFeaturesInArea</code> 进行局部搜索</strong> (Code Step 4):<ul><li><strong>思想</strong>：由于位姿估计、地图点定位等存在误差，真实匹配点会在投影位置附近。同时，物体由于相机远近移动，其在图像中的尺度会变化。</li><li><strong>确定搜索半径 <code>radius</code></strong>：基于上一帧特征点的金字塔层级进行缩放 (<code>th * CurrentFrame.mvScaleFactors[nLastOctave]</code>)。尺度大的特征（通常对应更远或更大的物体部分，或者在低分辨率金字塔层级检测到的特征），其不确定性可能更大，搜索半径也相应调整。</li><li><strong>自适应搜索金字塔层级</strong>：<ul><li>若相机前进 (<code>bForward</code>)：物体变大，当前帧特征可能在更高或相同层级。搜索范围 <code>[nLastOctave, maxLevel]</code>。</li><li>若相机后退 (<code>bBackward</code>)：物体变小，当前帧特征可能在更低或相同层级。搜索范围 <code>[0, nLastOctave]</code>。</li><li>若相机运动不明显：在上一帧层级附近搜索，如 <code>[nLastOctave-1, nLastOctave+1]</code>。</li></ul></li><li>调用 <code>CurrentFrame.GetFeaturesInArea(u,v, radius, minLevel, maxLevel)</code> 获得候选匹配特征点列表 <code>vIndices2</code>。</li></ul></li></ul><h3 id="c-描述子匹配与最佳选择-code-step-5"><a class="markdownIt-Anchor" href="#c-描述子匹配与最佳选择-code-step-5"></a> c. 描述子匹配与最佳选择 (Code Step 5)</h3><ul><li><strong>思想</strong>：在位置和尺度上接近的候选点中，通过特征描述子的相似性（外观）来确定最佳匹配。</li><li>遍历 <code>vIndices2</code> 中的候选特征点：<ol><li><strong>排除已匹配点</strong>：若当前帧的候选特征点已有关联地图点，则跳过。</li><li><strong>（可选）双目/RGB-D 一致性检查</strong>：对右目图像或深度值进行额外约束。</li><li><strong>计算描述子距离</strong>：计算 <code>LastFrame</code> 地图点 <code>pMP</code> 的描述子与当前帧候选特征点描述子之间的汉明距离 (<code>DescriptorDistance</code>)。</li><li><strong>选择最佳匹配</strong>：在所有候选点中，选择汉明距离最小且小于阈值 <code>TH_HIGH</code> 的作为最佳匹配点 <code>bestIdx2</code>。</li></ol></li></ul><h3 id="d-存储匹配并更新旋转直方图-code-step-6"><a class="markdownIt-Anchor" href="#d-存储匹配并更新旋转直方图-code-step-6"></a> d. 存储匹配并更新旋转直方图 (Code Step 6)</h3><ul><li>如果找到有效匹配：<ol><li>在 <code>CurrentFrame</code> 中记录该匹配：<code>CurrentFrame.mvpMapPoints[bestIdx2] = pMP</code>。</li><li>增加成功匹配计数 <code>nmatches</code>。</li><li>若启用朝向检查 (<code>mbCheckOrientation</code>)：计算 <code>LastFrame</code> 特征点与 <code>CurrentFrame</code> 匹配特征点的主方向角度差，更新 <code>rotHist</code> 直方图。</li></ol></li></ul><h3 id="e-旋转一致性检查与外点剔除-code-step-7"><a class="markdownIt-Anchor" href="#e-旋转一致性检查与外点剔除-code-step-7"></a> e. 旋转一致性检查与外点剔除 (Code Step 7)</h3><ul><li><strong>思想</strong>：利用刚体场景下特征点旋转角度变化的一致性来剔除误匹配。</li><li>分析 <code>rotHist</code> 直方图，找出票数最高的前三个主导旋转角度区间。</li><li>遍历所有之前建立的匹配，如果某个匹配的角度差不在这三个主导区间内，则将其视作外点，并从当前帧的匹配中移除 (<code>CurrentFrame.mvpMapPoints[rotHist[i][j]] = NULL</code>)，同时减少 <code>nmatches</code>。</li></ul><h2 id="4-函数优势"><a class="markdownIt-Anchor" href="#4-函数优势"></a> 4. 函数优势</h2><ul><li><strong>高效性</strong>：通过投影预测，将搜索范围大大缩小，避免了全局或大范围的盲目搜索。</li><li><strong>鲁棒性</strong>：结合了位置预测、尺度自适应、外观（描述子）匹配以及几何（旋转）一致性等多重约束，能够有效地找到正确匹配并剔除外点。</li><li><strong>利用地图信息</strong>：充分利用了已建立的地图点信息，使得跟踪更为稳定。</li></ul><p>此方法是视觉 SLAM 中实现稳定、高效帧间跟踪的关键技术之一。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>通过词袋进行匹配</title>
      <link href="/2025/05/13/orbslam2-4/"/>
      <url>/2025/05/13/orbslam2-4/</url>
      
        <content type="html"><![CDATA[<h1 id="词袋模型-bag-of-words-bow"><a class="markdownIt-Anchor" href="#词袋模型-bag-of-words-bow"></a> 词袋模型 (Bag-of-Words, BoW)</h1><h2 id="1-基本概念"><a class="markdownIt-Anchor" href="#1-基本概念"></a> 1. 基本概念</h2><p>词袋模型源于自然语言处理，在计算机视觉中被借鉴用于图像表示和检索。其核心思想是：</p><ul><li>将图像看作是由一些基本的“视觉单词”（Visual Words）组成的文档。</li><li>忽略特征点的空间布局信息（至少在生成 BoW 向量时），只关心图像中出现了哪些视觉单词以及它们的频率。</li><li>目的是得到一个能够概括图像内容的、紧凑的全局描述符。</li></ul><h2 id="2-orb-slam2-中的-bow-实现"><a class="markdownIt-Anchor" href="#2-orb-slam2-中的-bow-实现"></a> 2. ORB-SLAM2 中的 BoW 实现</h2><h3 id="a-视觉词典-visual-vocabulary-dictionary"><a class="markdownIt-Anchor" href="#a-视觉词典-visual-vocabulary-dictionary"></a> a. 视觉词典 (Visual Vocabulary / Dictionary)</h3><ul><li><strong>构建</strong>：这是一个<strong>离线预训练</strong>的过程。使用大量不同场景下的 ORB 特征描述子，通过聚类算法（如层次 K-Means）构建一个<strong>词典树（Vocabulary Tree）</strong>。</li><li><strong>结构</strong>：树的叶子节点代表一个<strong>视觉单词</strong>。每个视觉单词对应着描述子空间中的一个聚类中心。词典通常包含大量（例如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span> - <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span>）视觉单词。</li><li><strong>作用</strong>：提供一个标准化的参照系，用于将连续的 ORB 描述子**量化（Quantize）**为离散的视觉单词 ID。</li></ul><h3 id="b-特征描述子量化"><a class="markdownIt-Anchor" href="#b-特征描述子量化"></a> b. 特征描述子量化</h3><ul><li>对于图像中提取的每一个 ORB 特征描述子，在词典树中进行高效查找，找到与其最相似（距离最近）的视觉单词。</li><li>该特征点就被赋予了这个视觉单词的 ID。</li></ul><h3 id="c-bow-向量生成"><a class="markdownIt-Anchor" href="#c-bow-向量生成"></a> c. BoW 向量生成</h3><ul><li>对整个图像（通常是关键帧），统计其中所有特征点被量化后的视觉单词 ID。</li><li>生成一个<strong>稀疏向量</strong>（BoW Vector），其维度等于词典中视觉单词的总数。</li><li>向量的每个元素表示对应视觉单词在该图像中出现的<strong>频率</strong>或<strong>权重</strong>（常用 <strong>TF-IDF</strong> - Term Frequency–Inverse Document Frequency - 来计算权重，以突出那些在当前帧常见但在整个数据集中不常见的词，增强区分度）。</li><li>这个 BoW 向量可以看作是该图像的<strong>全局“指纹”</strong>。</li></ul><h2 id="3-bow-在-orb-slam2-中的主要应用"><a class="markdownIt-Anchor" href="#3-bow-在-orb-slam2-中的主要应用"></a> 3. BoW 在 ORB-SLAM2 中的主要应用</h2><p>BoW 的核心优势在于<strong>高效的相似性检索</strong>，主要用于：</p><h3 id="a-闭环检测-loop-closure-detection"><a class="markdownIt-Anchor" href="#a-闭环检测-loop-closure-detection"></a> a. 闭环检测 (Loop Closure Detection)</h3><ul><li><strong>目标</strong>：检测相机是否回到了先前经过的区域。</li><li><strong>方法</strong>：<ol><li>将当前帧（或新生成的关键帧）的 BoW 向量与数据库中存储的历史关键帧的 BoW 向量进行比较（计算相似度得分）。</li><li>利用 <strong>DBoW2</strong> 库中的倒排索引等加速结构，可以非常快速地找到 BoW 向量相似度高的候选关键帧。</li><li>高相似度意味着两个关键帧在视觉内容上可能很接近，是潜在的闭环候选帧。</li></ol></li></ul><h3 id="b-重定位-relocalization"><a class="markdownIt-Anchor" href="#b-重定位-relocalization"></a> b. 重定位 (Relocalization)</h3><ul><li><strong>目标</strong>：当跟踪丢失时，确定相机当前在地图中的位置。</li><li><strong>方法</strong>：<ol><li>计算当前帧的 BoW 向量。</li><li>在关键帧数据库中搜索与之 BoW 向量最相似的关键帧。</li><li>这些相似的关键帧及其位姿可以为当前帧提供一个初始的位姿估计。</li></ol></li></ul><h2 id="4-bow-在-orb-slam2-中的次要应用加速特征匹配"><a class="markdownIt-Anchor" href="#4-bow-在-orb-slam2-中的次要应用加速特征匹配"></a> 4. BoW 在 ORB-SLAM2 中的次要应用：加速特征匹配</h2><ul><li><strong>场景</strong>：当通过 BoW 向量比较<strong>已找到</strong>潜在的闭环/重定位候选帧后，需要在当前帧和候选帧之间进行精确的<strong>特征点匹配</strong>，以进行几何验证和位姿计算。</li><li><strong>方法</strong>：可以利用特征点所属的视觉单词信息来加速匹配。如果两个特征点是真匹配，它们的描述子很可能属于同一个视觉单词。因此，可以：<ul><li><strong>优先</strong>匹配属于同一视觉单词的特征点对。</li><li><strong>只</strong>在属于同一视觉单词的特征点子集之间进行匹配尝试。</li></ul></li><li><strong>优势</strong>：减少了需要进行暴力匹配的特征点对数量，提高了后续几何验证步骤的效率。</li></ul><h2 id="5-与连续帧跟踪的区别"><a class="markdownIt-Anchor" href="#5-与连续帧跟踪的区别"></a> 5. 与连续帧跟踪的区别</h2><ul><li>在**连续帧跟踪（Tracking）**过程中，ORB-SLAM2 <strong>主要不依赖</strong> BoW 进行特征匹配。</li><li>Tracking 更多地使用基于<strong>上一帧位姿和地图点</strong>的<strong>投影匹配</strong>，并结合<strong>局部区域搜索</strong>（如 <code>Frame::GetFeaturesInArea</code>）来高效、准确地找到匹配。</li></ul><h2 id="6-总结"><a class="markdownIt-Anchor" href="#6-总结"></a> 6. 总结</h2><p>ORB-SLAM2 中的 BoW 模型是一个强大的工具，它通过将图像内容表示为视觉单词的集合，生成紧凑的全局描述符 (BoW Vector)。这使得系统能够<strong>极快地在大量关键帧中检索视觉上相似的场景</strong>，是实现高效<strong>闭环检测</strong>和<strong>重定位</strong>的关键技术。同时，它也能在后续步骤中<strong>辅助加速特征点匹配</strong>过程。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>单目初始化中的特征匹配</title>
      <link href="/2025/05/13/orbslam2-3/"/>
      <url>/2025/05/13/orbslam2-3/</url>
      
        <content type="html"><![CDATA[<h1 id="framegetfeaturesinarea-函数"><a class="markdownIt-Anchor" href="#framegetfeaturesinarea-函数"></a> <code>Frame::GetFeaturesInArea</code> 函数</h1><h2 id="1-函数目标"><a class="markdownIt-Anchor" href="#1-函数目标"></a> 1. 函数目标</h2><p>该函数的核心目的是在给定的图像帧 (<code>Frame</code>) 中，<strong>高效地</strong>查找满足以下条件的特征点：</p><ol><li>位于以指定点 <code>(x, y)</code> 为圆心、<code>r</code> 为半径的<strong>圆形区域</strong>内。</li><li>其所在的<strong>图像金字塔层级</strong> (<code>octave</code>) 在指定的 <code>[minLevel, maxLevel]</code> 范围内（可选）。</li></ol><p>这在特征匹配、局部地图跟踪等场景中非常常用，需要在某个预期位置附近搜索对应的特征点。</p><h2 id="2-面临的挑战与常规思路"><a class="markdownIt-Anchor" href="#2-面临的挑战与常规思路"></a> 2. 面临的挑战与常规思路</h2><p>如果图像中有大量特征点（例如上千个），最直观的方法是：</p><ul><li>遍历当前帧中的<strong>所有</strong>特征点。</li><li>对<strong>每一个</strong>特征点，计算它到圆心 <code>(x, y)</code> 的距离。</li><li>判断距离是否小于 <code>r</code>，并且层级是否符合要求。</li></ul><p><strong>缺点：</strong> 计算量巨大，需要对所有点进行距离计算，对于实时性要求高的 SLAM 系统来说效率太低。</p><h2 id="3-orb-slam2-的优化策略网格化加速-grid-based-acceleration"><a class="markdownIt-Anchor" href="#3-orb-slam2-的优化策略网格化加速-grid-based-acceleration"></a> 3. ORB-SLAM2 的优化策略：网格化加速 (Grid-based Acceleration)</h2><p>为了解决效率问题，ORB-SLAM2 采用了<strong>空间划分</strong>的思想，具体为<strong>网格化</strong>：</p><ul><li><strong>预处理</strong>：在提取特征点后，系统会根据每个特征点的坐标，将其分配到预先划分好的<strong>二维网格</strong> (<code>mGrid</code>) 中。每个网格单元存储落入其中的特征点的索引列表。</li><li><strong><code>GetFeaturesInArea</code> 的执行逻辑</strong>：<ol><li><strong>确定相关网格 (Coarse Filtering)</strong>：<ul><li>根据输入的圆心 <code>(x, y)</code> 和半径 <code>r</code>，计算出这个圆形区域<strong>可能覆盖</strong>到的<strong>网格单元</strong>的最小/最大行号和列号 (<code>nMinCellX</code> 到 <code>nMaxCellX</code>, <code>nMinCellY</code> 到 <code>nMaxCellY</code>)。</li><li><strong>目的</strong>：快速确定一个包含搜索圆的<strong>矩形网格区域</strong>，将搜索范围从整个图像缩小到少数几个网格单元。</li></ul></li><li><strong>遍历候选特征点</strong>：<ul><li><strong>只</strong>遍历上一步确定的相关网格单元。</li><li>获取这些网格单元中包含的所有特征点索引。这些点是“候选点”。</li><li><strong>目的</strong>：大大减少需要进一步检查的特征点数量。</li></ul></li><li><strong>精确筛选 (Fine Filtering)</strong>：<ul><li>对<strong>每一个候选点</strong>执行精确检查：<ul><li><strong>层级检查</strong>：<code>kpUn.octave</code> 是否在 <code>[minLevel, maxLevel]</code> 之间。</li><li><strong>距离检查</strong>：计算该点到圆心 <code>(x, y)</code> 的<strong>精确距离</strong>，判断是否 <code>&lt; r</code> （通常用距离平方 <code>&lt; r*r</code> 来避免开方运算）。</li></ul></li><li><strong>目的</strong>：从候选点中精确找出真正符合圆形区域和层级要求的点。</li></ul></li><li><strong>返回结果</strong>：收集所有通过精确筛选的特征点的索引。</li></ol></li></ul><h2 id="4-核心思想总结为何需要网格距离判断"><a class="markdownIt-Anchor" href="#4-核心思想总结为何需要网格距离判断"></a> 4. 核心思想总结：为何需要“网格+距离判断”？</h2><ul><li><strong>网格是矩形的，搜索区是圆形的</strong>：网格能快速定位到包含搜索圆的<strong>矩形</strong>区域内的候选点，但这个矩形区域比圆形区域要大。</li><li><strong>网格提供粗筛</strong>：它能高效排除大量无关的点，提供一个较小的<strong>候选集</strong>。</li><li><strong>距离判断提供精筛</strong>：对于网格筛选出的候选点，必须进行精确的距离计算，才能判断它们是否<strong>真正</strong>位于<strong>圆形</strong>区域内部，排除那些在矩形网格内但在圆形区域外的点。</li></ul><p><strong>结论：</strong> <code>GetFeaturesInArea</code> 通过<strong>网格进行快速粗筛</strong>，然后对<strong>少量候选点进行精确的距离和层级判断</strong>，实现了在保证准确性的前提下，大幅提升邻域特征点搜索效率的目标。这是一种典型的<strong>空间换时间</strong>优化策略。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关键帧类</title>
      <link href="/2025/05/13/orbslam2-2/"/>
      <url>/2025/05/13/orbslam2-2/</url>
      
        <content type="html"><![CDATA[<p><code>KeyFrame</code>（关键帧）是 ORB_SLAM2 系统中非常核心的一个概念和数据结构。它不是每一帧都创建，而是从普通的 <code>Frame</code> 对象中选取具有代表性的帧来创建。关键帧构成了地图的基础，用于跟踪、局部建图和回环检测。</p><p>以下是对 <code>KeyFrame</code> 类的详细解析：</p><h3 id="1-关键帧的角色与创建"><a class="markdownIt-Anchor" href="#1-关键帧的角色与创建"></a> <strong>1. 关键帧的角色与创建</strong></h3><ul><li><strong>作用</strong>：关键帧是地图的基本单元，存储了比普通帧更持久和重要的信息，用于优化相机轨迹和构建环境地图。它们之间通过共视图（Covisibility Graph）和生成树（Spanning Tree）等结构连接起来。</li><li><strong>创建</strong>：关键帧由一个 <code>Frame</code> 对象、一个指向地图 <code>Map</code> 的指针和一个指向关键帧数据库 <code>KeyFrameDatabase</code> 的指针来构造。构造时，它会从父 <code>Frame</code> 复制大量信息，如时间戳、相机参数、特征点、描述子、地图点关联等，并被赋予一个唯一的 <code>mnId</code>。</li></ul><h3 id="2-核心数据成员属性"><a class="markdownIt-Anchor" href="#2-核心数据成员属性"></a> <strong>2. 核心数据成员（属性）</strong></h3><p><code>KeyFrame</code> 类包含了众多成员变量来存储其状态和信息，主要分为几类：</p><ul><li><strong>标识与时间戳</strong>：<ul><li><code>mnId</code>: 关键帧的唯一 ID。</li><li><code>mnFrameId</code>: 创建此关键帧的原始 <code>Frame</code> 的 ID。</li><li><code>mTimeStamp</code>: 时间戳。</li></ul></li><li><strong>位姿信息</strong>：<ul><li><code>Tcw</code>: 从世界坐标系到当前相机坐标系的变换矩阵。</li><li><code>Twc</code>: 从相机坐标系到世界坐标系的变换矩阵（Tcw 的逆）。</li><li><code>Ow</code>: 相机光心在世界坐标系下的坐标。</li><li>这些位姿信息通过 <code>mMutexPose</code> 互斥锁保护，需要通过 <code>SetPose</code>, <code>GetPose</code>, <code>GetPoseInverse</code>, <code>GetCameraCenter</code> 等函数访问。</li></ul></li><li><strong>相机与图像信息</strong>：<ul><li>相机内参 (<code>fx</code>, <code>fy</code>, <code>cx</code>, <code>cy</code>, <code>invfx</code>, <code>invfy</code>, <code>mK</code>)。</li><li>双目/深度信息 (<code>mbf</code>, <code>mb</code>, <code>mThDepth</code>)。</li><li>图像边界 (<code>mnMinX</code>, <code>mnMinY</code>, <code>mnMaxX</code>, <code>mnMaxY</code>)。</li><li>图像网格 (<code>mGrid</code>)：用于加速特征点匹配，存储每个网格单元内的特征点索引。</li></ul></li><li><strong>特征点与描述子</strong>：<ul><li><code>N</code>: 特征点数量。</li><li><code>mvKeys</code>: 原始特征点 (cv::KeyPoint 格式)。</li><li><code>mvKeysUn</code>: 去畸变后的归一化特征点坐标。</li><li><code>mDescriptors</code>: 特征点的 ORB 描述子。</li><li><code>mvuRight</code> / <code>mvDepth</code>: 双目或 RGB-D 下特征点的右图像坐标或深度信息。</li></ul></li><li><strong>地图点关联</strong>：<ul><li><code>mvpMapPoints</code>: 一个 <code>std::vector&lt;MapPoint*&gt;</code>，存储与该关键帧中特征点关联的地图点指针。如果某个特征点没有关联地图点，或关联的地图点被删除，则对应指针为 <code>NULL</code>。该变量由 <code>mMutexFeatures</code> 保护。</li></ul></li><li><strong>词袋模型 (BoW)</strong>：<ul><li><code>mBowVec</code>: DBoW2 格式的词袋向量，用于快速进行图像识别（回环检测、重定位）。</li><li><code>mFeatVec</code>: DBoW2 格式的特征向量，记录了特征点到词典内部节点的映射关系。</li><li>通过 <code>ComputeBoW()</code> 函数计算生成。</li></ul></li><li><strong>图结构信息</strong>（由 <code>mMutexConnections</code> 保护）：<ul><li><strong>共视图 (Covisibility Graph)</strong>：<ul><li><code>mConnectedKeyFrameWeights</code>: 存储与其他关键帧的连接及其权重（共视地图点数量）。</li><li><code>mvpOrderedConnectedKeyFrames</code>, <code>mvOrderedWeights</code>: 按权重排序后的共视关键帧列表及其权重。</li></ul></li><li><strong>生成树 (Spanning Tree)</strong>：<ul><li><code>mpParent</code>: 指向父关键帧（通常是共视程度最高的那个）。</li><li><code>mspChildrens</code>: 指向子关键帧的集合。</li></ul></li><li><strong>回环边 (Loop Edges)</strong>：<ul><li><code>mspLoopEdges</code>: 存储与当前关键帧形成闭环关系的关键帧集合。</li></ul></li></ul></li><li><strong>状态标志</strong>：<ul><li><code>mbBad</code>: 标记该关键帧是否已被标记为“坏点”，准备或已经被删除。</li><li><code>mbNotErase</code>, <code>mbToBeErased</code>: 用于控制删除逻辑，例如在进行回环优化时暂时阻止删除。</li></ul></li><li><strong>指针</strong>：<ul><li><code>mpMap</code>: 指向所属的 <code>Map</code> 对象。</li><li><code>mpKeyFrameDB</code>: 指向 <code>KeyFrameDatabase</code>。</li><li><code>mpORBvocabulary</code>: 指向 ORB 词典。</li></ul></li></ul><h3 id="3-核心功能成员函数"><a class="markdownIt-Anchor" href="#3-核心功能成员函数"></a> <strong>3. 核心功能（成员函数）</strong></h3><ul><li><strong>位姿管理</strong>：<code>SetPose</code> 设置位姿并计算相关变量 (Ow, Twc)，<code>GetPose</code> 等函数提供线程安全的位姿访问。</li><li><strong>BoW 计算</strong>：<code>ComputeBoW</code> 使用 ORB 词典计算关键帧的词袋表示。</li><li><strong>共视图管理</strong>：<ul><li><code>AddConnection</code>: 添加与其他关键帧的共视连接。</li><li><code>EraseConnection</code>: 删除共视连接。</li><li><code>UpdateConnections</code>: 核心函数，根据共享的地图点重新计算并更新与其他关键帧的共视权重和连接关系。</li><li><code>UpdateBestCovisibles</code>: 对共视关键帧按权重排序。</li><li><code>GetConnectedKeyFrames</code>, <code>GetVectorCovisibleKeyFrames</code>, <code>GetBestCovisibilityKeyFrames</code>, <code>GetCovisiblesByWeight</code>, <code>GetWeight</code>: 提供不同方式查询共视关键帧。</li></ul></li><li><strong>生成树管理</strong>：<code>AddChild</code>, <code>EraseChild</code>, <code>ChangeParent</code>, <code>GetChilds</code>, <code>GetParent</code>, <code>hasChild</code> 用于维护生成树结构。</li><li><strong>回环边管理</strong>：<code>AddLoopEdge</code>, <code>GetLoopEdges</code> 用于记录和查询回环信息。</li><li><strong>地图点管理</strong>：<ul><li><code>AddMapPoint</code>: 关联一个地图点到指定的特征点索引。</li><li><code>EraseMapPointMatch</code>: 断开与某个地图点的关联（将指针设为 NULL）。</li><li><code>ReplaceMapPointMatch</code>: 替换某个索引处的地图点关联。</li><li><code>GetMapPoints</code>, <code>GetMapPointMatches</code>, <code>GetMapPoint</code>: 获取关联的地图点信息。</li><li><code>TrackedMapPoints</code>: 统计被有效跟踪（观测次数达标）的地图点数量。</li></ul></li><li><strong>特征点相关操作</strong>：<ul><li><code>GetFeaturesInArea</code>: 在指定区域内快速查找特征点。</li><li><code>UnprojectStereo</code>: 将双目或 RGB-D 特征点反投影到三维空间。</li><li><code>IsInImage</code>: 判断某个二维点是否在图像范围内。</li></ul></li><li><strong>删除管理</strong>：<ul><li><code>SetNotErase</code>, <code>SetErase</code>: 控制是否允许删除该关键帧。</li><li><code>SetBadFlag</code>: 标记关键帧为坏点，并执行复杂的清理逻辑，包括：断开与其他关键帧的连接、通知地图点移除观测、更新生成树结构、从地图和关键帧数据库中移除自身。这是一个非常关键的操作，确保地图结构的完整性。</li><li><code>isBad</code>: 查询关键帧是否已被标记为坏点。</li></ul></li><li><strong>其他</strong>：<ul><li><code>ComputeSceneMedianDepth</code>: 估计场景深度（主要用于单目初始化）。</li></ul></li></ul><h3 id="4-线程安全"><a class="markdownIt-Anchor" href="#4-线程安全"></a> <strong>4. 线程安全</strong></h3><p>由于 ORB_SLAM2 是多线程系统（Tracking, Local Mapping, Loop Closing），<code>KeyFrame</code> 的很多数据会被多个线程同时访问。因此，关键数据（位姿、图连接、地图点关联）都使用了 <code>std::mutex</code> 进行保护，以确保线程安全。</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> <strong>总结</strong></h3><p><code>KeyFrame</code> 类是 ORB_SLAM2 中地图表示的核心，它不仅存储了自身的详细信息（位姿、特征、BoW），更重要的是维护了与其他关键帧（通过共视图、生成树、回环边）和地图点之间的复杂连接关系。这些关系是 SLAM 系统进行优化和保持一致性的基础。对 <code>KeyFrame</code> 的管理（创建、更新连接、删除）是 Local Mapping 和 Loop Closing 线程的关键任务。</p><h2 id="何时插入关键帧"><a class="markdownIt-Anchor" href="#何时插入关键帧"></a> 何时插入关键帧</h2><ol><li><strong>距离上一个关键帧足够远</strong>: 确保自从上一次插入关键帧后，已经过了一定的时间或者处理了足够数量的帧，以防止关键帧插入过于密集。</li><li><strong>跟踪质量下降</strong>: 当前帧能够稳定跟踪到的地图点数量显著减少。这通常通过以下两种方式之一来判断：<ul><li>当前帧跟踪到的地图点总数低于某个下限阈值。</li><li>当前帧跟踪到的地图点数量，相比于其参考关键帧（通常是距离最近的关键帧）所能看到的地图点数量，低于一个特定的比例（例如90%）。这表明视角或场景发生了显著变化。</li></ul></li><li><strong>局部建图线程准备就绪</strong>: 负责处理新关键帧和进行局部优化的“局部建图”（Local Mapping）线程当前不是非常繁忙，并且允许接受新的关键帧。如果它正在进行耗时的局部BA（Bundle Adjustment）或者全局BA，或者被其他原因阻塞，则会暂停插入。</li><li><strong>满足最小跟踪点数</strong>: 即使满足了与参考关键帧的比例条件，通常也要求当前帧跟踪到的点数不能过少（要高于另一个更低的阈值），以保证关键帧的质量。</li></ol><p>简单来说，插入关键帧是为了在<strong>视角变化足够大（跟踪点减少）、距离上一关键帧有一定间隔、且后端处理单元有能力处理</strong>时，向地图中添加新的、带有足够信息的节点。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mappoint类</title>
      <link href="/2025/05/13/orbslam2-1/"/>
      <url>/2025/05/13/orbslam2-1/</url>
      
        <content type="html"><![CDATA[<p><strong><code>MapPoint</code> 类的核心定位：场景中的三维点</strong></p><p>简单来说，<code>MapPoint</code> 类代表了在三维真实世界中的一个<strong>静态点</strong>。在 SLAM 系统运行过程中，相机会从不同的视角观测到场景中的特征点（比如墙角、纹理清晰的物体表面等）。当系统通过三角化等方法确定了这些二维图像特征点对应的三维空间位置后，就会创建一个 <code>MapPoint</code> 对象来存储这个三维点的信息。</p><p><strong><code>MapPoint</code> 类的主要职责和包含的信息：</strong></p><p><code>MapPoint</code> 类不仅仅存储一个三维点的坐标，它还包含了大量与这个三维点相关的观测信息、几何属性以及在 SLAM 系统不同模块中用于追踪和优化的状态信息。</p><p>以下是 <code>MapPoint</code> 类的主要成员变量和功能的概览：</p><hr /><p><strong>1. 核心属性 (Core Properties):</strong></p><ul><li><strong><code>mWorldPos</code> (类型: <code>cv::Mat</code>)</strong>:<ul><li><strong>含义</strong>: 地图点在<strong>世界坐标系</strong>下的三维坐标 (通常是一个 3x1 的列向量)。这是 <code>MapPoint</code> 最基本也是最重要的信息。</li><li><strong>获取/设置</strong>: 通过 <code>GetWorldPos()</code> 和 <code>SetWorldPos()</code> 方法。</li></ul></li><li><strong><code>mnId</code> (类型: <code>long unsigned int</code>)</strong>:<ul><li><strong>含义</strong>: 每个 <code>MapPoint</code> 对象都有一个全局唯一的 ID。通过静态成员变量 <code>nNextId</code> 自增生成，确保了 ID 的唯一性。</li></ul></li><li><strong><code>mpRefKF</code> (类型: <code>KeyFrame*</code>)</strong>:<ul><li><strong>含义</strong>: 指向该地图点的<strong>参考关键帧</strong> (Reference KeyFrame) 的指针。通常是第一个创建该地图点的关键帧，或者与该地图点关联最紧密的关键帧。参考关键帧对于计算地图点的观测距离范围等属性非常重要。</li><li><strong>获取</strong>: 通过 <code>GetReferenceKeyFrame()</code> 方法。</li></ul></li><li><strong><code>mDescriptor</code> (类型: <code>cv::Mat</code>)</strong>:<ul><li><strong>含义</strong>: 该地图点的<strong>代表性描述子 (Descriptor)</strong>。一个三维点可能被多个关键帧观测到，每个观测都会对应一个二维特征点的描述子（例如 ORB 描述子）。<code>mDescriptor</code> 存储的是从这些观测到的描述子中挑选出来的一个“最具代表性”的描述子。这个描述子用于后续的特征匹配，例如在重定位或闭环检测中快速识别该地图点。</li><li><strong>计算</strong>: 通过 <code>ComputeDistinctiveDescriptors()</code> 方法计算。该方法会比较所有观测到该点的描述子，选择与其他描述子平均距离最小的那个。</li><li><strong>获取</strong>: 通过 <code>GetDescriptor()</code> 方法。</li></ul></li></ul><hr /><p><strong>2. 观测信息 (Observation Information):</strong></p><ul><li><strong><code>mObservations</code> (类型: <code>std::map&lt;KeyFrame*, size_t&gt;</code>)</strong>:<ul><li><strong>含义</strong>: 一个 <code>std::map</code> 容器，记录了所有<strong>观测到</strong>这个地图点的关键帧 (<code>KeyFrame*</code>) 以及该地图点在对应关键帧中特征点的索引 (<code>size_t</code>)。这是维护地图点与关键帧之间关联的核心数据结构，也是构建共视图的基础。</li><li><strong>操作</strong>:<ul><li><code>AddObservation()</code>: 添加一个新的观测关系。</li><li><code>EraseObservation()</code>: 移除一个观测关系。</li><li><code>GetObservations()</code>: 获取所有观测关系。</li></ul></li><li><strong><code>nObs</code> (类型: <code>int</code>)</strong>:<ul><li><strong>含义</strong>: 观测到该地图点的<strong>相机数目</strong>。对于单目相机，每次观测 <code>nObs</code> 加1；对于双目或 RGB-D 相机（可以提供深度信息，相当于两个独立的观测），每次观测 <code>nObs</code> 加2。这个值用于判断地图点的可靠性。</li><li><strong>获取</strong>: 通过 <code>Observations()</code> 方法。</li></ul></li></ul></li></ul><hr /><p><strong>3. 几何与尺度属性 (Geometric and Scale Properties):</strong></p><ul><li><strong><code>mNormalVector</code> (类型: <code>cv::Mat</code>)</strong>:<ul><li><strong>含义</strong>: 地图点的<strong>平均观测方向</strong>。计算方法是：将所有观测到该点的关键帧相机光心指向该点的方向向量进行归一化，然后求平均。这个向量指示了该点主要从哪个方向被观测。</li><li><strong>用途</strong>: 用于判断地图点是否在当前相机视野内（可见性剔除）。</li><li><strong>更新</strong>: 通过 <code>UpdateNormalAndDepth()</code> 方法。</li><li><strong>获取</strong>: 通过 <code>GetNormal()</code> 方法。</li></ul></li><li><strong><code>mfMinDistance</code>, <code>mfMaxDistance</code> (类型: <code>float</code>)</strong>:<ul><li><strong>含义</strong>: 地图点的<strong>最小和最大有效观测距离</strong>。这两个值是基于该地图点在其参考关键帧中的观测情况（特征点所在的金字塔层级和到相机的距离）来估计的。它们定义了一个深度范围，在这个范围内，该地图点可以被认为是可靠的观测。</li><li><strong>用途</strong>: 用于 <code>PredictScale()</code> 函数，预测当地图点投影到新图像时，对应的特征点应该在图像金字塔的哪个尺度层级。</li><li><strong>更新</strong>: 通过 <code>UpdateNormalAndDepth()</code> 方法。</li><li><strong>获取</strong>: 通过 <code>GetMinDistanceInvariance()</code> 和 <code>GetMaxDistanceInvariance()</code> (这两个方法会返回 <code>0.8f*mfMinDistance</code> 和 <code>1.2f*mfMaxDistance</code>，增加了一些容错范围)。</li></ul></li></ul><hr /><p><strong>4. 状态与追踪计数器 (Status and Tracking Counters):</strong></p><ul><li><strong><code>mbBad</code> (类型: <code>bool</code>)</strong>:<ul><li><strong>含义</strong>: 标记该地图点是否为<strong>坏点 (Bad Point)</strong>。如果一个地图点的观测过少，或者在优化过程中被认为是外点，就可能被标记为坏点。坏点将不再参与后续的追踪和优化。</li><li><strong>设置</strong>: 通过 <code>SetBadFlag()</code> 方法。该方法不仅设置 <code>mbBad</code> 为 <code>true</code>，还会清除其所有观测关系，并通知所属的地图 (<code>mpMap</code>) 将其从地图中移除。</li><li><strong>检查</strong>: 通过 <code>isBad()</code> 方法。</li></ul></li><li><strong><code>mpReplaced</code> (类型: <code>MapPoint*</code>)</strong>:<ul><li><strong>含义</strong>: 指向<strong>替换</strong>当前地图点的另一个地图点的指针。在地图点融合（MapPoint fusion）的过程中，如果发现两个地图点实际上是同一个三维点，质量较差的那个会被质量较好的那个替换掉。<code>mpReplaced</code> 就指向那个质量更好的地图点。</li><li><strong>设置/获取</strong>: 通过 <code>Replace()</code> 和 <code>GetReplaced()</code> 方法。</li></ul></li><li><strong><code>mnVisible</code> (类型: <code>int</code>)</strong>:<ul><li><strong>含义</strong>: 该地图点<strong>在帧视野中出现的次数</strong>。只要一个地图点通过了 <code>Frame::isInFrustum()</code> 的判断（即理论上在当前相机视野内），即使没有成功匹配上特征点，<code>mnVisible</code> 也会增加。</li><li><strong>操作</strong>: 通过 <code>IncreaseVisible()</code> 方法增加计数。</li></ul></li><li><strong><code>mnFound</code> (类型: <code>int</code>)</strong>:<ul><li><strong>含义</strong>: 该地图点<strong>成功匹配到帧中特征点的次数</strong>。这个计数比 <code>mnVisible</code> 更严格，要求地图点不仅在视野内，而且成功地与某一帧的特征点建立了对应关系。</li><li><strong>操作</strong>: 通过 <code>IncreaseFound()</code> 方法增加计数。</li><li><strong>获取</strong>: 通过 <code>GetFound()</code> 方法。</li><li><strong><code>GetFoundRatio()</code></strong>: 返回 <code>mnFound / mnVisible</code> 的比例，可以用来评估地图点的追踪稳定性。</li></ul></li></ul><hr /><p><strong>5. 用于不同线程的状态标记 (Status Flags for Different Threads):</strong></p><p>ORB-SLAM2 是一个多线程系统，<code>MapPoint</code> 类中包含了一些用于在不同线程（Tracking, Local Mapping, Loop Closing）中同步状态或避免重复操作的标记性成员变量。这些变量通常存储的是关键帧的 ID 或帧的 ID。</p><ul><li><strong>用于 Tracking 线程</strong>:<ul><li><code>mTrackProjX</code>, <code>mTrackProjY</code>, <code>mTrackProjXR</code>: 存储地图点投影到当前帧的像素坐标（<code>XR</code> 为右目坐标）。</li><li><code>mnTrackScaleLevel</code>: 预测该地图点在当前帧中对应的特征点的金字塔层级。</li><li><code>mTrackViewCos</code>: 地图点的平均观测方向与当前相机到该点方向的夹角的余弦值，用于判断视角是否合适。</li><li><code>mbTrackInView</code>: 标记该地图点在当前帧的追踪过程中是否已经被处理过或是否在视野内。</li><li><code>mnTrackReferenceForFrame</code>: 在 <code>TrackLocalMap</code> 的 <code>UpdateLocalPoints</code> 步骤中，用于防止将同一个地图点重复添加到局部地图点列表 <code>mvpLocalMapPoints</code>。</li><li><code>mnLastFrameSeen</code>: 记录上一次“看到”（即使只是在视野内）该地图点的帧的 ID。</li></ul></li><li><strong>用于 Local Mapping 线程</strong>:<ul><li><code>mnBALocalForKF</code>: 记录该地图点上一次参与局部 BA (Bundle Adjustment) 时对应的关键帧 ID。</li><li><code>mnFuseCandidateForKF</code>: 在地图点融合过程中，标记该地图点是哪个关键帧的融合候选者。</li></ul></li><li><strong>用于 Loop Closing 线程</strong>:<ul><li><code>mnLoopPointForKF</code>: 标记该地图点在闭环检测中是作为哪个“当前关键帧”的闭环候选地图点。</li><li><code>mnCorrectedByKF</code>: 记录上一次通过闭环校正更新该地图点位置时，是基于哪个关键帧的校正。</li><li><code>mnCorrectedReference</code>: 类似 <code>mnCorrectedByKF</code>，用于更细致的校正跟踪。</li><li><code>mPosGBA</code>: 存储在全局 BA (Global Bundle Adjustment) 优化后的地图点位置。</li><li><code>mnBAGlobalForKF</code>: 记录该地图点上一次参与全局 BA 时，触发全局 BA 的关键帧 ID。</li></ul></li></ul><hr /><p><strong>6. 构造函数 (Constructors):</strong></p><p><code>MapPoint</code> 类有两个主要的构造函数：</p><ul><li><strong><code>MapPoint(const cv::Mat &amp;Pos, KeyFrame* pRefKF, Map* pMap)</code></strong>:<ul><li>最常用的构造函数，用于根据一个已知的<strong>三维坐标 <code>Pos</code></strong> 和一个<strong>参考关键帧 <code>pRefKF</code></strong> 来创建一个新的地图点。</li><li>通常在三角化新的地图点时（例如单目初始化、双目/RGB-D 初始化、局部建图线程创建新点）被调用。</li></ul></li><li><strong><code>MapPoint(const cv::Mat &amp;Pos, Map* pMap, Frame* pFrame, const int &amp;idxF)</code></strong>:<ul><li>用于根据一个已知的<strong>三维坐标 <code>Pos</code></strong> 和一个<strong>普通帧 <code>pFrame</code></strong> 以及该点在帧中对应的特征点索引 <code>idxF</code> 来创建地图点。</li><li>这种构造方式通常用于双目或 RGB-D 相机，当可以直接从一帧图像中获取到某些特征点的三维信息时（例如，在 <code>Tracking::UpdateLastFrame()</code> 中为双目/RGB-D 创建临时地图点以增强追踪鲁棒性）。这种方式创建的点，其初始参考关键帧 <code>mpRefKF</code> 会被设为 <code>NULL</code>。</li></ul></li></ul><hr /><p><strong>7. 核心方法 (Key Methods):</strong></p><p>除了上面提到的获取/设置方法和计数器增加方法外，还有一些核心的功能性方法：</p><ul><li><strong><code>UpdateNormalAndDepth()</code></strong>: 更新平均观测方向和观测距离范围，这在之前已经详细讲过。</li><li><strong><code>ComputeDistinctiveDescriptors()</code></strong>: 计算并更新最具代表性的描述子。</li><li><strong><code>SetBadFlag()</code></strong>: 将地图点标记为坏点，并进行清理。</li><li><strong><code>Replace(MapPoint* pMP)</code></strong>: 用另一个地图点 <code>pMP</code> 替换当前地图点，主要发生在地图点融合时。此操作会将被替换点的观测关系等信息转移到替换它的点上，然后将被替换点标记为坏点。</li><li><strong><code>AddObservation(KeyFrame* pKF, size_t idx)</code></strong>: 添加一个关键帧对该地图点的观测。</li><li><strong><code>EraseObservation(KeyFrame* pKF)</code></strong>: 移除一个关键帧对该地图点的观测。</li><li><strong><code>PredictScale(const float &amp;currentDist, KeyFrame* pKF / Frame* pF)</code></strong>: 根据地图点到当前相机光心的距离，以及其参考观测距离范围，预测该地图点在当前帧/关键帧中应该位于图像金字塔的哪个层级。</li></ul><hr /><p><strong>8. 线程安全 (Thread Safety):</strong></p><p>由于 <code>MapPoint</code> 的成员变量可能被多个线程（Tracking, Local Mapping, Loop Closing）同时访问和修改，类中使用了一些互斥锁 (<code>std::mutex</code>) 来保护关键数据的读写，以保证线程安全：</p><ul><li><strong><code>mMutexPos</code></strong>: 保护与位置相关的成员变量，如 <code>mWorldPos</code>, <code>mNormalVector</code>, <code>mfMinDistance</code>, <code>mfMaxDistance</code>。</li><li><strong><code>mMutexFeatures</code></strong>: 保护与特征和观测相关的成员变量，如 <code>mObservations</code>, <code>mDescriptor</code>, <code>mpRefKF</code>, <code>mnVisible</code>, <code>mnFound</code>, <code>mbBad</code>, <code>mpReplaced</code>。</li><li><strong><code>mGlobalMutex</code> (静态成员)</strong>: 一个全局互斥锁，在 <code>SetWorldPos</code> 中被使用，可能用于某些更全局的同步操作，但其具体必要性需要结合上下文分析（在 ORB-SLAM2 中，一些静态全局锁的使用有时是为了简化设计，但也可能引入不必要的串行化）。</li><li><strong><code>mpMap-&gt;mMutexPointCreation</code></strong>: 在构造函数中，当分配新的 <code>mnId</code> 时，会使用所属地图 <code>mpMap</code> 的一个互斥锁 <code>mMutexPointCreation</code>，以确保 ID 分配的原子性。</li></ul><hr /><p><strong>总结:</strong></p><p><code>MapPoint</code> 类是 ORB-SLAM2 中对三维空间点的抽象表示。它不仅仅是一个三维坐标，更是一个包含了丰富几何信息、观测历史、追踪状态和优化标记的复杂对象。理解 <code>MapPoint</code> 的这些属性和方法，对于深入理解 ORB-SLAM2 如何进行地图构建、追踪定位、闭环优化等核心流程至关重要。它就像是连接不同图像观测之间的桥梁，构成了整个 SLAM 系统所依赖的稀疏三维地图的基石。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—现代C++代码命名规范</title>
      <link href="/2025/05/05/c12/"/>
      <url>/2025/05/05/c12/</url>
      
        <content type="html"><![CDATA[<h2 id="命名规范总览"><a class="markdownIt-Anchor" href="#命名规范总览"></a> 命名规范总览</h2><table><thead><tr><th>类别</th><th>命名规则</th><th>示例</th></tr></thead><tbody><tr><td>函数名</td><td>小驼峰式 (camelCase)</td><td><code>calculateTotal()</code>, <code>getUserName()</code></td></tr><tr><td>变量名</td><td>小驼峰式 (camelCase)</td><td><code>userCount</code>, <code>totalAmount</code></td></tr><tr><td>参数名</td><td>小驼峰式 (camelCase)</td><td><code>inputValue</code>, <code>maxSize</code></td></tr><tr><td>成员变量</td><td>尾缀下划线或m_前缀</td><td><code>userName_</code>, <code>m_userName</code></td></tr><tr><td>类名</td><td>大驼峰式 (PascalCase)</td><td><code>UserAccount</code>, <code>DataProcessor</code></td></tr><tr><td>常量</td><td>全大写+下划线</td><td><code>MAX_BUFFER_SIZE</code>, <code>PI_VALUE</code></td></tr><tr><td>宏定义</td><td>全大写+下划线</td><td><code>DEBUG_MODE</code>, <code>SAFE_DELETE</code></td></tr></tbody></table><h2 id="详细规则及示例"><a class="markdownIt-Anchor" href="#详细规则及示例"></a> 详细规则及示例</h2><h3 id="1-函数名-小驼峰式"><a class="markdownIt-Anchor" href="#1-函数名-小驼峰式"></a> 1. 函数名 (小驼峰式)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">calculateTotal</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">std::string <span class="title">getUserName</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isValid</span><span class="params">(<span class="type">int</span> value)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setConfiguration</span><span class="params">(<span class="type">const</span> Config&amp; config)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="2-变量名-小驼峰式"><a class="markdownIt-Anchor" href="#2-变量名-小驼峰式"></a> 2. 变量名 (小驼峰式)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> userCount = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> totalAmount = <span class="number">0.0</span>;</span><br><span class="line">std::string fullName;</span><br><span class="line"><span class="type">bool</span> isActive = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h3 id="3-参数名-小驼峰式"><a class="markdownIt-Anchor" href="#3-参数名-小驼峰式"></a> 3. 参数名 (小驼峰式)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">processData</span><span class="params">(<span class="type">const</span> std::vector&lt;<span class="type">int</span>&gt;&amp; inputData, <span class="type">int</span> maxItems)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setUserInfo</span><span class="params">(<span class="type">const</span> std::string&amp; userName, <span class="type">int</span> userAge, <span class="type">bool</span> isPremium)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="4-成员变量-尾缀下划线或m_前缀"><a class="markdownIt-Anchor" href="#4-成员变量-尾缀下划线或m_前缀"></a> 4. 成员变量 (尾缀下划线或m_前缀)</h3><p>两种常见风格，选择一种并保持一致：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 风格1: 尾缀下划线</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    std::string name_;</span><br><span class="line">    <span class="type">int</span> age_;</span><br><span class="line">    <span class="type">bool</span> isActive_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 风格2: m_前缀</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    std::string m_name;</span><br><span class="line">    <span class="type">int</span> m_age;</span><br><span class="line">    <span class="type">bool</span> m_isActive;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="5-类名-大驼峰式"><a class="markdownIt-Anchor" href="#5-类名-大驼峰式"></a> 5. 类名 (大驼峰式)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">UserAccount</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DataProcessor</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NetworkConnection</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ConfigOptions</span> &#123;&#125;;</span><br></pre></td></tr></table></figure><h3 id="6-常量-全大写下划线"><a class="markdownIt-Anchor" href="#6-常量-全大写下划线"></a> 6. 常量 (全大写+下划线)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> MAX_USERS = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">double</span> PI_VALUE = <span class="number">3.14159265359</span>;</span><br><span class="line"><span class="type">const</span> std::string DEFAULT_CONFIG_PATH = <span class="string">&quot;/etc/app/config&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="7-宏定义-全大写下划线"><a class="markdownIt-Anchor" href="#7-宏定义-全大写下划线"></a> 7. 宏定义 (全大写+下划线)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG_MODE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_DELETE(ptr) <span class="keyword">if</span>(ptr) &#123; delete ptr; ptr = nullptr; &#125;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_ERROR(msg) std::cerr &lt;&lt; <span class="string">&quot;ERROR: &quot;</span> &lt;&lt; msg &lt;&lt; std::endl</span></span><br></pre></td></tr></table></figure><h2 id="完整示例"><a class="markdownIt-Anchor" href="#完整示例"></a> 完整示例</h2><p>下面是一个结合以上规则的完整示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量定义</span></span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">int</span> MAX_USERS = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">double</span> TAX_RATE = <span class="number">0.08</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_DELETE(ptr) <span class="keyword">if</span>(ptr) &#123; delete ptr; ptr = nullptr; &#125;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOG_INFO(msg) std::cout &lt;&lt; <span class="string">&quot;INFO: &quot;</span> &lt;&lt; msg &lt;&lt; std::endl</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类定义</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserAccount</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="built_in">UserAccount</span>(<span class="type">const</span> std::string&amp; userName, <span class="type">int</span> userAge)</span><br><span class="line">        : <span class="built_in">name_</span>(userName), <span class="built_in">age_</span>(userAge), <span class="built_in">isActive_</span>(<span class="literal">false</span>) &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 公共方法</span></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">activateAccount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (age_ &gt;= MIN_AGE) &#123;</span><br><span class="line">            isActive_ = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function">std::string <span class="title">getDisplayName</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name_ + (isActive_ ? <span class="string">&quot; (Active)&quot;</span> : <span class="string">&quot; (Inactive)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">updateLastLoginTime</span><span class="params">(<span class="type">const</span> std::string&amp; loginTime)</span> </span>&#123;</span><br><span class="line">        lastLogin_ = loginTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// 私有成员变量</span></span><br><span class="line">    std::string name_;</span><br><span class="line">    <span class="type">int</span> age_;</span><br><span class="line">    <span class="type">bool</span> isActive_;</span><br><span class="line">    std::string lastLogin_;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 私有常量</span></span><br><span class="line">    <span class="type">static</span> <span class="keyword">constexpr</span> <span class="type">int</span> MIN_AGE = <span class="number">18</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">processUserData</span><span class="params">(<span class="type">const</span> std::vector&lt;UserAccount&gt;&amp; userList, <span class="type">bool</span> includeInactive)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> activeCount = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; user : userList) &#123;</span><br><span class="line">        <span class="keyword">if</span> (includeInactive || user.<span class="built_in">getDisplayName</span>().<span class="built_in">find</span>(<span class="string">&quot;Active&quot;</span>) != std::string::npos) &#123;</span><br><span class="line">            <span class="built_in">LOG_INFO</span>(user.<span class="built_in">getDisplayName</span>());</span><br><span class="line">            activeCount++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Processed &quot;</span> &lt;&lt; activeCount &lt;&lt; <span class="string">&quot; users.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 变量定义</span></span><br><span class="line">    std::vector&lt;UserAccount&gt; users;</span><br><span class="line">    <span class="type">int</span> totalUsers = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建用户</span></span><br><span class="line">    users.<span class="built_in">push_back</span>(<span class="built_in">UserAccount</span>(<span class="string">&quot;Alice Smith&quot;</span>, <span class="number">30</span>));</span><br><span class="line">    users.<span class="built_in">push_back</span>(<span class="built_in">UserAccount</span>(<span class="string">&quot;Bob Johnson&quot;</span>, <span class="number">17</span>));</span><br><span class="line">    users.<span class="built_in">push_back</span>(<span class="built_in">UserAccount</span>(<span class="string">&quot;Carol Williams&quot;</span>, <span class="number">25</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理用户</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; user : users) &#123;</span><br><span class="line">        <span class="keyword">if</span> (user.<span class="built_in">activateAccount</span>()) &#123;</span><br><span class="line">            totalUsers++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示结果</span></span><br><span class="line">    <span class="built_in">processUserData</span>(users, <span class="literal">true</span>);</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Total active users: &quot;</span> &lt;&lt; totalUsers &lt;&lt; std::endl;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="额外建议"><a class="markdownIt-Anchor" href="#额外建议"></a> 额外建议</h2><ol><li><strong>保持一致性</strong>：选择一种风格后，在整个项目中保持一致。</li><li><strong>避免使用匈牙利命名法</strong>：现代C++不推荐使用类型前缀（如<code>iCount</code>、<code>strName</code>）。</li><li><strong>使用有意义的名称</strong>：避免使用单字母变量名（除了临时变量如循环索引）。</li><li><strong>使用现代C++特性</strong>：优先使用<code>constexpr</code>而非宏定义常量，使用<code>nullptr</code>而非<code>NULL</code>。</li><li><strong>注释规范</strong>：为类、函数和复杂逻辑添加适当的注释。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—指针和const</title>
      <link href="/2025/05/05/c11/"/>
      <url>/2025/05/05/c11/</url>
      
        <content type="html"><![CDATA[<h2 id="理解const与指针的规则"><a class="markdownIt-Anchor" href="#理解const与指针的规则"></a> 理解const与指针的规则</h2><p>在C++中理解const与指针的组合，可以遵循两个简单规则：</p><ol><li><strong>星号(<code>*</code>)前的const</strong>：表示指针指向的内容不能修改</li><li><strong>星号(<code>*</code>)后的const</strong>：表示指针本身不能改变指向</li></ol><h2 id="详细分析各种情况"><a class="markdownIt-Anchor" href="#详细分析各种情况"></a> 详细分析各种情况</h2><h3 id="1-指向常量的指针"><a class="markdownIt-Anchor" href="#1-指向常量的指针"></a> 1. 指向常量的指针</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span>* p1 = &amp;value;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span>* p2 = &amp;value;  <span class="comment">// 与上面等价</span></span><br></pre></td></tr></table></figure><p>可以理解为const int 和 int const是同一种类型，创建了一个指针指向了这个类型</p><p>这两种写法完全等价，都表示：</p><ul><li><strong>类型</strong>：指向整型常量的指针</li><li><strong>限制</strong>：不能通过此指针修改所指向的值</li><li><strong>可以</strong>：改变指针指向的地址</li><li><strong>读法</strong>：“p1是一个指针，指向const int”</li></ul><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">5</span>, b = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p = &amp;a;  <span class="comment">// p指向a</span></span><br><span class="line">*p = <span class="number">6</span>;  <span class="comment">// 错误！不能通过p修改a的值</span></span><br><span class="line">p = &amp;b;  <span class="comment">// 正确，p可以改变指向</span></span><br></pre></td></tr></table></figure><h3 id="2-常量指针"><a class="markdownIt-Anchor" href="#2-常量指针"></a> 2. 常量指针</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>* <span class="type">const</span> p3 = &amp;value;</span><br></pre></td></tr></table></figure><ul><li><strong>类型</strong>：指向整型的常量指针</li><li><strong>限制</strong>：指针本身不能改变指向（必须始终指向初始化时的地址）</li><li><strong>可以</strong>：通过此指针修改所指向的值</li><li><strong>读法</strong>：“p3是一个const指针，指向int”</li></ul><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">5</span>, b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p = &amp;a;  <span class="comment">// p指向a</span></span><br><span class="line">*p = <span class="number">6</span>;  <span class="comment">// 正确，可以通过p修改a的值</span></span><br><span class="line">p = &amp;b;  <span class="comment">// 错误！p不能改变指向</span></span><br></pre></td></tr></table></figure><h3 id="3-指向常量的常量指针"><a class="markdownIt-Anchor" href="#3-指向常量的常量指针"></a> 3. 指向常量的常量指针</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p4 = &amp;value;</span><br></pre></td></tr></table></figure><ul><li><strong>类型</strong>：指向整型常量的常量指针</li><li><strong>限制</strong>：既不能通过此指针修改所指向的值，也不能改变指针的指向</li><li><strong>读法</strong>：“p4是一个const指针，指向const int”</li></ul><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">5</span>, b = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p = &amp;a;  <span class="comment">// p指向a</span></span><br><span class="line">*p = <span class="number">6</span>;  <span class="comment">// 错误！不能通过p修改a的值</span></span><br><span class="line">p = &amp;b;  <span class="comment">// 错误！p不能改变指向</span></span><br></pre></td></tr></table></figure><h2 id="简化记忆方法"><a class="markdownIt-Anchor" href="#简化记忆方法"></a> 简化记忆方法</h2><p>一个简单的记忆技巧是从右向左读声明：</p><ol><li><code>const int* p</code> → “p是一个指针，指向const int”</li><li><code>int* const p</code> → “p是一个const指针，指向int”</li><li><code>const int* const p</code> → “p是一个const指针，指向const int”</li></ol><h2 id="图解不同情况"><a class="markdownIt-Anchor" href="#图解不同情况"></a> 图解不同情况</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const int* p;</span><br><span class="line">┌─────┐    ┌─────┐</span><br><span class="line">│  p  │───▶│ 数据 │  // p可以改变指向，但不能通过p修改数据</span><br><span class="line">└─────┘    └─────┘</span><br><span class="line"></span><br><span class="line">int* const p;</span><br><span class="line">┌─────┐    ┌─────┐</span><br><span class="line">│  p  │═══▶│ 数据 │  // p不能改变指向，但可以通过p修改数据</span><br><span class="line">└─────┘    └─────┘</span><br><span class="line"></span><br><span class="line">const int* const p;</span><br><span class="line">┌─────┐    ┌─────┐</span><br><span class="line">│  p  │═══▶│ 数据 │  // p不能改变指向，也不能通过p修改数据</span><br><span class="line">└─────┘    └─────┘</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>───▶</code> 表示可以改变的指向</li><li><code>═══▶</code> 表示不可改变的指向</li><li>数据是否可通过指针修改取决于是否有<code>const int</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>orbslam2</title>
      <link href="/2025/04/30/orbslam2/"/>
      <url>/2025/04/30/orbslam2/</url>
      
        <content type="html"><![CDATA[<h2 id="一-docker-容器创建"><a class="markdownIt-Anchor" href="#一-docker-容器创建"></a> 一、Docker 容器创建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker run -dit \</span><br><span class="line">--gpus all \</span><br><span class="line">-e NVIDIA_DRIVER_CAPABILITIES=all \</span><br><span class="line">--name=orbslam2 \</span><br><span class="line">--privileged  \</span><br><span class="line">-v /dev:/dev \</span><br><span class="line">-v /home/xfy/docker_practice/orbslam2Base20.04:/home/docker \</span><br><span class="line">-v /tmp/.X11-unix:/tmp/.X11-unix  \</span><br><span class="line">-e DISPLAY=unix<span class="variable">$DISPLAY</span> \</span><br><span class="line">-w /home \</span><br><span class="line">--net=host \</span><br><span class="line">ubuntu:20.04</span><br></pre></td></tr></table></figure><h2 id="二-ubuntu-源配置"><a class="markdownIt-Anchor" href="#二-ubuntu-源配置"></a> 二、Ubuntu 源配置</h2><ol><li><p>安装 vim</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install vim</span><br></pre></td></tr></table></figure></li><li><p>备份原始源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure></li><li><p>编辑源文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br><span class="line"><span class="comment"># gg dG 移动到文件第一行并删除所有内容</span></span><br><span class="line"><span class="comment"># i进入编辑模式</span></span><br><span class="line"><span class="comment"># 编辑完esc退出到普通模式，：进入命令行模式输入wq保存并退出</span></span><br></pre></td></tr></table></figure></li><li><p>替换为阿里云源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></li></ol><h2 id="三-安装基础开发工具"><a class="markdownIt-Anchor" href="#三-安装基础开发工具"></a> 三、安装基础开发工具</h2><ol><li><p>安装 build-essential</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install build-essential</span><br></pre></td></tr></table></figure></li><li><p>安装新版本的 git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install -y software-properties-common</span><br><span class="line">add-apt-repository -y ppa:git-core/ppa</span><br><span class="line">apt update</span><br><span class="line">apt install -y git</span><br></pre></td></tr></table></figure></li><li><p>安装新版本的 cmake</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install -y apt-transport-https ca-certificates gnupg wget</span><br><span class="line">wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2&gt;/dev/null | gpg --dearmor - | <span class="built_in">tee</span> /etc/apt/trusted.gpg.d/kitware.gpg &gt;/dev/null</span><br><span class="line">apt-add-repository <span class="string">&quot;deb https://apt.kitware.com/ubuntu/ <span class="subst">$(lsb_release -cs)</span> main&quot;</span></span><br><span class="line">apt update</span><br><span class="line"><span class="comment"># apt install -y cmake  # 这会安装4.*版本的cmake</span></span><br><span class="line">apt install cmake=3.29.6-*</span><br></pre></td></tr></table></figure></li></ol><h2 id="四-安装-orb-slam2-所需第三方库"><a class="markdownIt-Anchor" href="#四-安装-orb-slam2-所需第三方库"></a> 四、安装 ORB-SLAM2 所需第三方库</h2><h3 id="1-安装-pangolin-06"><a class="markdownIt-Anchor" href="#1-安装-pangolin-06"></a> 1. 安装 Pangolin 0.6</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从 https://github.com/stevenlovegrove/Pangolin/releases 下载安装包</span></span><br><span class="line">tar -xzf Pangolin-0.6.tar.gz</span><br><span class="line"><span class="comment"># 安装 Pangolin 依赖</span></span><br><span class="line">apt install libgl1-mesa-dev</span><br><span class="line">apt install libglew-dev</span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="2-安装-eigen-338"><a class="markdownIt-Anchor" href="#2-安装-eigen-338"></a> 2. 安装 Eigen 3.3.8</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf eigen-3.3.8.tar.gz</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make install</span><br><span class="line"><span class="comment"># eigen不需要执行make</span></span><br></pre></td></tr></table></figure><h3 id="3-安装-boost"><a class="markdownIt-Anchor" href="#3-安装-boost"></a> 3. 安装 Boost</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install libboost-all-dev</span><br></pre></td></tr></table></figure><h3 id="4-安装-libssl-dev"><a class="markdownIt-Anchor" href="#4-安装-libssl-dev"></a> 4. 安装 libssl-dev</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install libssl-dev</span><br></pre></td></tr></table></figure><h3 id="5-安装-opencv-46"><a class="markdownIt-Anchor" href="#5-安装-opencv-46"></a> 5. 安装 OpenCV 4.6</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 OpenCV 依赖</span></span><br><span class="line">apt install build-essential libgtk2.0-dev libavcodec-dev libavformat-dev libjpeg-dev libtiff5-dev libswscale-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 OpenCV</span></span><br><span class="line">apt install unzip</span><br><span class="line">unzip opencv-4.6.0.zip  <span class="comment"># 假设压缩包名称</span></span><br><span class="line"><span class="built_in">cd</span> opencv-4.6.0</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make -j6</span><br></pre></td></tr></table></figure><h2 id="五-克隆并编译-orb-slam2"><a class="markdownIt-Anchor" href="#五-克隆并编译-orb-slam2"></a> 五、克隆并编译 ORB-SLAM2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆有详细注释的版本</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/electech6/ORB_SLAM2_detailed_comments.git</span><br><span class="line"><span class="comment"># 把CMakeLists.txt 中的 OpenCV 依赖版本为 4，c++标准改为14</span></span><br></pre></td></tr></table></figure><h3 id="1-编译-dbow2-orb-slam2-自带无需make-install"><a class="markdownIt-Anchor" href="#1-编译-dbow2-orb-slam2-自带无需make-install"></a> 1. 编译 DBoW2 (ORB-SLAM2 自带)无需make install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ORB_SLAM2_detailed_comments/Thirdparty/DBoW2</span><br><span class="line"><span class="comment"># 先修改 CMakeLists.txt 中的 OpenCV 依赖版本为 4</span></span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h3 id="2-编译-g2o-orb-slam2-自带无需make-install"><a class="markdownIt-Anchor" href="#2-编译-g2o-orb-slam2-自带无需make-install"></a> 2. 编译 g2o (ORB-SLAM2 自带)无需make install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ORB_SLAM2_detailed_comments/Thirdparty/g2o</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h2 id="六-常见问题及解决方案"><a class="markdownIt-Anchor" href="#六-常见问题及解决方案"></a> 六、常见问题及解决方案</h2><h3 id="问题1-opencvcvh-头文件缺失"><a class="markdownIt-Anchor" href="#问题1-opencvcvh-头文件缺失"></a> 问题1: opencv/cv.h 头文件缺失</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fatal error: opencv/cv.h: 没有那个文件或目录</span><br></pre></td></tr></table></figure><p><strong>解决方法</strong>: 修改 ORBextractor.h</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将</span></span><br><span class="line"><span class="comment">#include &lt;opencv/cv.h&gt;</span></span><br><span class="line"><span class="comment"># 换成</span></span><br><span class="line"><span class="comment">#include &lt;opencv2/imgproc/imgproc_c.h&gt;</span></span><br><span class="line"><span class="comment">#include &lt;opencv2/highgui/highgui_c.h&gt;</span></span><br></pre></td></tr></table></figure><h3 id="问题2-stdmap-类型错误"><a class="markdownIt-Anchor" href="#问题2-stdmap-类型错误"></a> 问题2: std::map 类型错误</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/include/c++/9/bits/stl_map.h:122:71: error: static assertion failed: std::map must have the same value_type as its allocator</span><br><span class="line">static_assert(is_same&lt;typename _Alloc::value_type, value_type&gt;::value,</span><br></pre></td></tr></table></figure><p><strong>解决方法</strong>: 修改 LoopClosing.h 第49行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将</span></span><br><span class="line">typedef map&lt;KeyFrame*,g2o::Sim3,std::less&lt;KeyFrame*&gt;,</span><br><span class="line">    Eigen::aligned_allocator&lt;std::pair&lt;const KeyFrame*, g2o::Sim3&gt; &gt; &gt; KeyFrameAndPose;</span><br><span class="line"><span class="comment"># 改成</span></span><br><span class="line">typedef map&lt;KeyFrame*,g2o::Sim3,std::less&lt;KeyFrame*&gt;,</span><br><span class="line">    Eigen::aligned_allocator&lt;std::pair&lt;KeyFrame* const, g2o::Sim3&gt; &gt; &gt; KeyFrameAndPose;</span><br></pre></td></tr></table></figure><h3 id="问题3-5-cv_load_image_unchanged-未定义"><a class="markdownIt-Anchor" href="#问题3-5-cv_load_image_unchanged-未定义"></a> 问题3-5: CV_LOAD_IMAGE_UNCHANGED 未定义</h3><p><strong>解决方法</strong>: 在相关文件中替换 OpenCV 常量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将所有 CV_LOAD_IMAGE_UNCHANGED 替换为 cv::IMREAD_UNCHANGED</span></span><br><span class="line"><span class="comment"># 需要修改的文件包括：</span></span><br><span class="line"><span class="comment"># - tum.cc</span></span><br><span class="line"><span class="comment"># - stereo_kitti.cc</span></span><br><span class="line"><span class="comment"># - stereo_euroc.cc</span></span><br><span class="line"><span class="comment"># 以及其他类似文件</span></span><br></pre></td></tr></table></figure><h2 id="七-测试安装结果"><a class="markdownIt-Anchor" href="#七-测试安装结果"></a> 七、测试安装结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压词汇表</span></span><br><span class="line"><span class="built_in">cd</span> ORB_SLAM2_detailed_comments/Vocabulary</span><br><span class="line">tar -xzf ORBvoc.txt.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 TUM 数据集，从官网下载并使用 associate.py 生成 associate.txt 文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行测试</span></span><br><span class="line">/home/orbslam/ORB_SLAM2_detailed_comments/Examples/RGB-D/rgbd_tum \</span><br><span class="line">/home/orbslam/ORB_SLAM2_detailed_comments/Vocabulary/ORBvoc.txt \</span><br><span class="line">/home/orbslam/ORB_SLAM2_detailed_comments/Examples/RGB-D/TUM3.yaml \</span><br><span class="line">/home/docker/rgbd_dataset_freiburg3_sitting_static \</span><br><span class="line">/home/docker/rgbd_dataset_freiburg3_sitting_static/associate.txt</span><br></pre></td></tr></table></figure><p>如果运行成功，说明 ORB-SLAM2 安装配置已完成。</p>]]></content>
      
      
      <categories>
          
          <category> SLAM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker常用命令</title>
      <link href="/2025/04/30/docker2/"/>
      <url>/2025/04/30/docker2/</url>
      
        <content type="html"><![CDATA[<h3 id="镜像管理-image-management"><a class="markdownIt-Anchor" href="#镜像管理-image-management"></a> 镜像管理 (Image Management)</h3><ul><li><code>docker image ls</code> / <code>docker images</code>: 查看镜像</li><li><code>docker search [image]</code>: 检索镜像<ul><li><code>eg. docker search nginx</code></li></ul></li><li><code>docker pull [image]</code>: 拉取镜像</li><li><code>docker push [image]</code>: 上传镜像<ul><li><code>eg. docker push geekhour/hello-docker:latest</code></li></ul></li><li><code>docker save [image] -o FILE</code> / <code>docker save [image] &gt; FILE</code>: 保存镜像<ul><li><code>eg. docker save geekhour/hello-docker:latest &gt; hello-docker.tar</code></li></ul></li><li><code>docker load -i FILE</code>: 导入镜像<ul><li><code>eg. docker load -i hello-docker.tar</code></li></ul></li><li><code>docker history [image]</code>: 查看镜像历史</li><li><code>docker rmi [image]</code> / <code>docker image rm [image]</code>: 删除镜像</li><li><code>docker image prune</code>: 删除不再使用的镜像</li><li><code>docker import [URL/FILE]</code>: 将文件系统导入为镜像</li><li><code>docker commit [container] [image]</code>: 从容器创建镜像</li></ul><h3 id="容器管理-container-management"><a class="markdownIt-Anchor" href="#容器管理-container-management"></a> 容器管理 (Container Management)</h3><ul><li><code>docker create [image]</code>: 创建容器 (仅创建, 不运行)</li><li><code>docker run [image]</code>: 创建并运行容器</li><li><code>docker start [container]</code>: 启动容器</li><li><code>docker stop [container]</code>: 停止容器</li><li><code>docker restart [container]</code>: 重启容器</li><li><code>docker ps</code> / <code>docker container ls</code>: 列出正在运行的容器</li><li><code>docker ps -a</code> / <code>docker container ls -a</code>: 列出所有容器</li><li><code>docker exec -it [container] bash</code> / <code>docker attach [container]</code>: 以交互模式进入容器</li><li><code>docker export [container] -o FILE</code> / <code>docker export [container] &gt; FILE</code>: 导出容器</li><li><code>docker import FILE</code>: 导入容器快照</li><li><code>docker logs [container]</code>: 查看容器日志</li><li><code>docker rm [container]</code> / <code>docker container rm [container]</code>: 删除容器</li><li><code>docker port [container]</code>: 查看容器端口映射</li><li><code>docker top [container]</code>: 显示容器内进程</li><li><code>docker cp [FILE] [container]:[PATH]</code>: 复制本地文件到容器内的指定路径</li><li><code>docker diff [container]</code>: 显示容器内的变化</li><li><code>docker stats [container]</code>: 显示容器资源使用情况</li></ul><h3 id="容器运行-container-run"><a class="markdownIt-Anchor" href="#容器运行-container-run"></a> 容器运行 (Container Run)</h3><ul><li><strong>语法格式</strong>: <code>docker run [options] image [command] [arg...]</code></li><li><code>docker run --name [name] [image]</code>: 创建运行并命名容器</li><li><code>docker run -d [image]</code>: 创建一个容器并后台运行</li><li><code>docker run -p [hostPort]:[containerPort] [image]</code>: 创建一个容器并指定端口映射</li><li><code>docker run -P [image]</code>: 创建一个容器并指定端口映射 (随机分配)</li><li><code>docker run -e [key=value] [image]</code>: 创建一个容器并指定环境变量</li><li><code>docker run -w [PATH] [image]</code>: 创建一个容器并指定工作目录</li><li><code>docker run [image] [command]</code>: 创建一个容器并在容器中执行命令 (交互模式)</li><li><code>docker run -d -p [hostPort]:[containerPort] -e [key=value] -w [PATH] --name [name] [image]</code>: 创建一个容器, 并指定容器名称、后台运行、端口映射、环境变量和工作目录<ul><li><code>eg. docker run -it nginx:latest /bin/bash</code>: 使用镜像 nginx:latest 来启动一个容器, 并在容器内执行交互式 bash shell</li><li><code>eg. docker run -it -p 3316:3306 -v /data:/data -d mysql:latest</code>: 创建一个 mysql 容器, 后台模式启动, 主机 3316 端口映射到容器 3306 端口, 主机 /data 目录映射到容器 /data 目录</li></ul></li></ul><h3 id="网络管理-network-management"><a class="markdownIt-Anchor" href="#网络管理-network-management"></a> 网络管理 (Network Management)</h3><ul><li><code>docker network ls</code>: 列出可用网络</li><li><code>docker network inspect [network]</code>: 查看网络详细信息</li><li><code>docker network create [network]</code>: 创建一个新的网络</li><li><code>docker network rm [network]</code>: 删除一个网络</li><li><code>docker network connect [network] [container]</code>: 将容器连接到网络</li><li><code>docker network disconnect [network] [container]</code>: 将容器从网络断开</li></ul><h3 id="数据卷管理-volume-management"><a class="markdownIt-Anchor" href="#数据卷管理-volume-management"></a> 数据卷管理 (Volume Management)</h3><ul><li><code>docker volume create [volume]</code>: 创建一个数据卷</li><li><code>docker volume ls</code>: 查看数据卷</li><li><code>docker volume inspect [volume]</code>: 查看数据卷详细信息</li><li><code>docker volume rm [volume]</code>: 删除数据卷</li><li><code>docker volume prune</code>: 删除所有未使用的数据卷</li></ul><h3 id="插件管理-plugin-management"><a class="markdownIt-Anchor" href="#插件管理-plugin-management"></a> 插件管理 (Plugin Management)</h3><ul><li><code>docker plugin ls</code>: 列出插件</li><li><code>docker plugin install [plugin]</code>: 安装插件</li><li><code>docker plugin enable [plugin]</code>: 启用插件</li><li><code>docker plugin disable [plugin]</code>: 禁用插件</li><li><code>docker plugin rm [plugin]</code>: 卸载插件</li></ul><h3 id="日常操作-daily-operations"><a class="markdownIt-Anchor" href="#日常操作-daily-operations"></a> 日常操作 (Daily Operations)</h3><ul><li><code>docker info</code>: 查看 docker 系统信息</li><li><code>docker version</code>: 查看 Docker 版本</li><li><code>docker --help</code>: 查看 Docker 帮助文档</li><li><code>docker [command] --help</code>: 查看 Docker 命令帮助</li><li><code>docker login/logout</code>: 登录/退出 DockerHub</li></ul><h3 id="常用-dockerfile-指令-common-dockerfile-instructions"><a class="markdownIt-Anchor" href="#常用-dockerfile-指令-common-dockerfile-instructions"></a> 常用 Dockerfile 指令 (Common Dockerfile Instructions)</h3><ul><li><strong><code>FROM [base_image]</code></strong>: 指定基础镜像, 必须为 Dockerfile 的第一条指令。</li><li><strong><code>ADD</code></strong>: 用于将文件复制到镜像中, 源可以是 URL 或者本地文件, 也可以是一个压缩文件 (自动解压)。</li><li><strong><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] [源路径] [目标路径]</code></strong>: 用于将文件拷贝到镜像中, 源只能是本地文件。</li><li><strong><code>WORKDIR [PATH]</code></strong>: 用于指定工作目录, 可以使用多个 WORKDIR 指令, 如果使用相对路径, 则是相对于上一条 WORKDIR 指令所指定的目录。</li><li><strong><code>ENV &lt;key&gt; &lt;value&gt;</code> / <code>ENV &lt;key1&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt; ...</code></strong>: 用于设置环境变量。</li><li><strong><code>CMD &lt;命令&gt;</code> / <code>CMD [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;...]</code></strong>: 用于指定默认的容器主进程, 每个 Dockerfile 中只能有一条 CMD 指令, 如果有多条, 则只有最后一条会生效。</li><li><strong><code>VOLUME &lt;路径&gt;</code> / <code>VOLUME [&quot;路径1&quot;, &quot;路径2&quot;...]</code></strong>: 用于定义匿名卷 (持久化目录)。</li></ul><pre class="highlight"><code class=""></code></pre>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker</title>
      <link href="/2025/04/29/docker/"/>
      <url>/2025/04/29/docker/</url>
      
        <content type="html"><![CDATA[<h2 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h2><p><strong>1. 拉取镜像 (docker pull)</strong></p><ul><li><strong>作用:</strong> 从镜像仓库 (默认是 Docker Hub) 下载镜像到你的本地机器。</li><li><strong>语法:</strong> <code>docker pull &lt;仓库名&gt;/&lt;镜像名&gt;:&lt;标签&gt;</code><ul><li><code>&lt;仓库名&gt;</code>: 可选，如果是 Docker Hub 上的官方镜像或知名镜像，通常可以省略。如果是个人或其他组织的镜像，需要指定，例如 <code>osrf/ros</code>。</li><li><code>&lt;镜像名&gt;</code>: 必须，例如 <code>ubuntu</code>, <code>ros</code>。</li><li><code>&lt;标签&gt;</code>: 可选，用于指定镜像的版本。如果不指定，默认拉取 <code>latest</code> 标签。<strong>强烈建议总是指定明确的标签</strong>，以保证环境的可复现性。例如 <code>ubuntu:22.04</code>, <code>ros:noetic-ros-base</code>。</li></ul></li><li><strong>示例:</strong><ul><li><p>拉取官方的 Ubuntu 22.04 镜像：你会看到 Docker 开始下载镜像的各个层 (layer)。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:22.04</span><br></pre></td></tr></table></figure></li><li><p>拉取 ROS Noetic 的基础镜像 (来自 Open Source Robotics Foundation)：(这个镜像会大一些，因为它包含了 ROS Noetic 的核心组件)</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ros:noetic-ros-base</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>2. 查看本地镜像 (docker images)</strong></p><ul><li><p><strong>作用:</strong> 列出你本地已经下载的所有镜像。</p></li><li><p><strong>语法:</strong> <code>docker images</code></p></li><li><p><strong>示例:</strong> 你会看到类似以下的输出：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">REPOSITORY          TAG               IMAGE ID       CREATED        SIZE</span><br><span class="line">ubuntu              22.04             xxxxxxxxxxxx   xx weeks ago   77.8MB</span><br><span class="line">ros                 noetic-ros-base   yyyyyyyyyyyy   xx weeks ago   1.07GB</span><br><span class="line">hello-world         latest            zzzzzzzzzzzz   xx months ago  13.3kB</span><br></pre></td></tr></table></figure><ul><li><code>REPOSITORY</code>: 镜像所在的仓库名。</li><li><code>TAG</code>: 镜像的标签 (版本)。</li><li><code>IMAGE ID</code>: 镜像的唯一标识符。</li><li><code>CREATED</code>: 镜像创建的时间。</li><li><code>SIZE</code>: 镜像的大小。</li></ul></li></ul><p><strong>3. 运行容器 (docker run)</strong></p><ul><li><p><strong>作用:</strong> 使用指定的镜像创建一个新的容器并运行它。这是 Docker 最核心的命令之一。</p></li><li><p><strong>语法:</strong> <code>docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</code></p></li><li><p><strong>常用选项 (OPTIONS):</strong></p><p>以下这些选项非常关键：</p><ol><li><p><strong><code>-it</code> (交互式 TTY)</strong></p><ul><li><p><code>-i</code> (<code>--interactive</code>): 保持标准输入（STDIN）打开，即使没有附加连接。简单说，允许你向容器输入命令。</p></li><li><p><code>-t</code> (<code>--tty</code>): 分配一个伪终端（pseudo-TTY）。这会模拟一个真实的终端，让你可以像在普通 Linux Shell 里一样交互，比如使用 Tab 补全、看到命令提示符等。</p></li><li><p><strong>为什么重要？</strong> 你通常需要进入容器的 Shell 环境进行编译、运行节点、调试等操作，<code>-it</code> 几乎是必备组合。</p></li><li><p><strong>示例:</strong> 这个命令会启动一个基于 <code>ubuntu:20.04</code> 镜像的容器，并直接进入容器的 <code>bash</code> Shell。你可以像在普通的 Ubuntu 终端里一样操作。退出 Shell（输入 <code>exit</code> 或按 <code>Ctrl+D</code>）后，容器通常会停止。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it ubuntu:20.04 bash</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong><code>--rm</code> (自动移除)</strong></p><ul><li><p>当容器退出时，自动删除容器文件系统。</p></li><li><p><strong>为什么重要？</strong> 每次 <code>docker run</code> 都会创建一个新的容器。如果你只是临时运行一个命令或者进入 Shell 调试，用完就扔，<code>--rm</code> 可以避免产生大量无用的、停止状态的容器，保持 Docker 环境整洁。对于调试和测试非常方便。</p></li><li><p><strong>示例:</strong> 当你退出这个 <code>bash</code> 后，这个容器会被彻底删除，<code>docker ps -a</code> 也看不到它了。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> ubuntu:20.04 bash</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong><code>-d</code> (<code>--detach</code>) (后台运行)</strong></p><ul><li><p>让容器在后台运行，并打印出容器 ID。</p></li><li><p><strong>为什么重要？</strong> 有时候你希望容器作为一个服务在后台持续运行（比如运行一个 ROS Master 或者一个模拟器），而不是占用你的当前终端。</p></li><li><p><strong>注意:</strong> 如果使用 <code>-d</code>，通常容器需要运行一个长期在前台执行的进程（比如一个 web 服务、一个 <code>sleep infinity</code> 或者 ROS 节点），否则容器一启动执行完默认命令（如果该命令会结束）就会立刻退出。</p></li><li><p><strong>示例:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动一个后台运行的容器，里面无限睡眠 (常用于创建一个长期运行的基础容器)</span></span><br><span class="line">docker run -d --name my_background_ubuntu ubuntu:20.04 <span class="built_in">sleep</span> infinity</span><br><span class="line"><span class="comment"># 你可以使用 docker exec 进入这个后台运行的容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it my_background_ubuntu bash</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong><code>--name &lt;container_name&gt;</code> (指定名称)</strong></p><ul><li><p>给容器指定一个易于记忆的名字。如果不指定，Docker 会随机生成一个（比如 <code>vigilant_mclean</code>）。</p></li><li><p><strong>为什么重要？</strong> 有了名字，你可以方便地通过名字来管理容器，比如 <code>docker stop my_slam_container</code>、<code>docker start my_slam_container</code>、<code>docker exec -it my_slam_container bash</code> 等。</p></li><li><p><strong>示例:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> --name slam_dev_session ubuntu:20.04 bash</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong><code>-v</code> 或 <code>--volume</code> (挂载卷)</strong> / <code>--mount</code> (更推荐的挂载方式)</p><ul><li><p>将宿主机（你的 Ubuntu 22.04）的目录或文件挂载到容器内部。这是<strong>实现代码/数据共享和持久化的关键</strong>。</p></li><li><p><strong>为什么对 SLAM 重要？</strong></p><ul><li><strong>代码开发:</strong> 你可以在宿主机上用你喜欢的 IDE 编辑代码，然后在容器里编译和运行，代码是实时同步的。</li><li><strong>数据集:</strong> SLAM 数据集通常很大，你不需要把它们复制到镜像里，直接挂载宿主机上的数据集目录即可。</li><li><strong>结果保存:</strong> 容器运行产生的结果（地图、轨迹、日志）可以保存到挂载的宿主机目录，容器删除后结果依然存在。</li></ul></li><li><p><strong>语法 (<code>-v</code>)</strong>: <code>-v &lt;host_path&gt;:&lt;container_path&gt;[:options]</code></p></li><li><p><strong>语法 (<code>--mount</code>)</strong>: <code>--mount type=bind,source=&lt;host_path&gt;,target=&lt;container_path&gt;[,readonly]</code> (bind mount 是最常用的类型，效果类似 <code>-v</code>)</p></li><li><p><strong>示例 (使用 <code>-v</code>)</strong>:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将宿主机的 ~/slam_ws 目录挂载到容器内的 /root/slam_ws 目录</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> -v ~/slam_ws:/root/slam_ws ubuntu:20.04 bash</span><br><span class="line"><span class="comment"># 进入容器后，你在 /root/slam_ws 看到的就是宿主机 ~/slam_ws 的内容</span></span><br><span class="line"><span class="comment"># 在容器内修改 /root/slam_ws/some_file.txt，宿主机的 ~/slam_ws/some_file.txt 也会同步改变</span></span><br></pre></td></tr></table></figure></li><li><p><strong>示例 (使用 <code>--mount</code>)</strong>:<code>--mount</code> 语法更清晰，推荐使用。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,<span class="built_in">source</span>=~/slam_ws,target=/root/slam_ws ubuntu:20.04 bash</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong><code>-p</code> 或 <code>--publish</code> (端口映射)</strong></p><ul><li><p>将容器的端口映射到宿主机的端口。格式：<code>-p &lt;host_port&gt;:&lt;container_port&gt;</code>。</p></li><li><p><strong>为什么对 SLAM 重要？</strong> 如果你在容器里运行了需要网络访问的服务（比如 RViz 的 Web 版本、或者某些算法的监控界面），需要将容器端口暴露给宿主机或其他机器。</p></li><li><p><strong>示例:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 假设容器内 8080 端口运行了一个 web 服务</span></span><br><span class="line">docker run -d -p 8888:8080 my_web_service_image</span><br><span class="line"><span class="comment"># 现在你可以通过访问宿主机的 8888 端口 (http://localhost:8888) 来访问容器内的 8080 服务</span></span><br></pre></td></tr></table></figure></li><li><p><strong>对于 ROS:</strong> 很多时候直接使用 <code>--net=host</code> (见下一点) 更方便，避免复杂的端口映射。</p></li></ul></li><li><p><strong><code>--net</code> 或 <code>--network</code> (网络模式)</strong></p><ul><li><p>配置容器的网络连接方式。常用模式：</p><ul><li><code>bridge</code> (默认): 容器有自己独立的网络栈，通过 Docker 网桥连接宿主机。需要端口映射 (<code>p</code>) 才能从外部访问容器服务。</li><li><code>host</code>: 容器共享宿主机的网络栈。容器直接使用宿主机的 IP 地址和端口，无需端口映射。性能最好，但隔离性差。</li><li><code>none</code>: 容器没有网络连接。</li></ul></li><li><p><strong>为什么 <code>host</code> 对 SLAM/ROS 重要？</strong> ROS 节点间通信、RViz 连接 ROS Master、与连接到宿主机的传感器（如网络摄像头）通信等，使用 <code>--net=host</code> 可以极大简化网络配置，让容器内的 ROS 环境像直接在宿主机运行一样方便。</p></li><li><p><strong>示例:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 host 网络模式运行容器</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> --net=host ubuntu:20.04 bash</span><br><span class="line"><span class="comment"># 在容器内运行 ifconfig，你会看到宿主机的网络接口</span></span><br><span class="line"><span class="comment"># 在容器内运行的 ROS 节点可以直接与宿主机或其他局域网内的 ROS 节点通信</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong><code>-e</code> 或 <code>--env</code> (环境变量)</strong></p><ul><li><p>设置容器内的环境变量。格式：<code>-e KEY=VALUE</code>。</p></li><li><p><strong>为什么对 SLAM 重要？</strong></p><ul><li><strong>ROS 配置:</strong> 设置 <code>ROS_MASTER_URI</code>, <code>ROS_IP</code>, <code>ROS_HOSTNAME</code> 等。</li><li><strong>显示转发 (X11 Forwarding):</strong> 让容器内的 GUI 程序（如 RViz, Gazebo, rqt_plot）能显示在宿主机的屏幕上。通常需要设置 <code>DISPLAY</code> 环境变量。</li></ul></li><li><p>**示例 (X11 Forwarding)😗*<em>注意:</em> X11 Forwarding 配置有时比较棘手，可能因系统而异。<code>-net=host</code> 通常能简化这个问题。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在宿主机先执行 xhost +local:docker (允许本地 docker 容器连接 X server)</span></span><br><span class="line">xhost +<span class="built_in">local</span>:docker</span><br><span class="line"><span class="comment"># 运行容器时传递 DISPLAY 环境变量，并挂载 X11 socket</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> \</span><br><span class="line">       -e DISPLAY=<span class="variable">$DISPLAY</span> \</span><br><span class="line">       -v /tmp/.X11-unix:/tmp/.X11-unix \</span><br><span class="line">       --net=host \</span><br><span class="line">       ubuntu:20.04 bash</span><br><span class="line"><span class="comment"># 在容器内安装并运行一个简单的 GUI 程序试试，比如 xeyes (apt update &amp;&amp; apt install -y x11-apps &amp;&amp; xeyes)</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong><code>--device</code> (挂载设备)</strong></p><ul><li><p>将宿主机的设备文件挂载到容器内。</p></li><li><p><strong>为什么对 SLAM 重要？</strong> SLAM 严重依赖传感器！你需要让容器访问连接到宿主机的摄像头、IMU、LiDAR 等设备。</p></li><li><p>**示例:**<em>注意:</em> 确保运行 Docker 的用户在宿主机上对这些设备文件有读写权限（通常需要将用户添加到 <code>video</code>, <code>dialout</code> 等用户组）。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 挂载第一个 USB 摄像头 (/dev/video0)</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> --device=/dev/video0 ubuntu:20.04 bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载串口设备 (例如 IMU)</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> --device=/dev/ttyUSB0 ubuntu:20.04 bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载多个设备</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> --device=/dev/video0 --device=/dev/ttyUSB0 ubuntu:20.04 bash</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong><code>--gpus</code> (GPU 支持)</strong></p><ul><li>允许容器访问宿主机的 NVIDIA GPU。这对需要 CUDA 加速的 SLAM 算法（如基于深度学习的特征提取、GPU 加速的优化）至关重要。</li><li><strong>前提:</strong> 宿主机需要安装 NVIDIA 驱动和 <code>nvidia-docker2</code> (或称为 NVIDIA Container Toolkit)。</li><li><strong>示例:</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 允许容器访问所有可用的 GPU</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> --gpus all nvidia/cuda:11.4.0-base-ubuntu20.04 nvidia-smi</span><br><span class="line"><span class="comment"># 上例使用了 NVIDIA 官方提供的包含 CUDA 的基础镜像，并运行 nvidia-smi 检查 GPU 是否可用</span></span><br><span class="line"><span class="comment"># 你也可以在你自己的 ubuntu:20.04 镜像基础上，在容器内安装 CUDA Toolkit，然后用 --gpus all 启动</span></span><br><span class="line">docker run -it --<span class="built_in">rm</span> --gpus all ubuntu:20.04 bash</span><br><span class="line"><span class="comment"># (进入容器后需要自行安装 CUDA 和相关驱动)</span></span><br></pre></td></tr></table></figure></li></ol></li></ul><p><strong>4. 查看容器 (docker ps)</strong></p><ul><li><strong>作用:</strong> 列出正在运行的容器。</li><li><strong>语法:</strong> <code>docker ps</code></li><li><strong>查看所有容器 (包括已停止的):</strong><ul><li><strong>语法:</strong> <code>docker ps -a</code></li></ul></li></ul><p><strong>5. 进入正在运行的容器 (docker exec)</strong></p><ul><li><strong>作用:</strong> 在一个已经在后台运行的容器内部执行命令。</li><li><strong>语法:</strong> <code>docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</code></li><li><strong>常用选项:</strong><ul><li><code>-i</code>, <code>-t</code>: 与 <code>docker run</code> 中的含义相同，通常一起使用 (<code>-it</code>) 来获取交互式 Shell。</li></ul></li><li><strong>示例:</strong><ul><li><p>进入我们之前后台运行的 <code>my-nginx</code> 容器，并启动一个 bash shell:执行后你将进入 <code>my-nginx</code> 容器的 Shell。输入 <code>exit</code> 退出该 Shell，但容器本身仍在后台运行。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it my-nginx bash</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>6. 管理容器 (停止、启动、删除)</strong></p><ul><li><strong>停止容器:</strong><ul><li><strong>语法:</strong> <code>docker stop &lt;容器ID或名称&gt;</code></li><li><strong>示例:</strong> <code>docker stop my-nginx</code></li></ul></li><li><strong>启动已停止的容器:</strong><ul><li><strong>语法:</strong> <code>docker start &lt;容器ID或名称&gt;</code></li><li><strong>示例:</strong> <code>docker start my-nginx</code> (容器会继续在后台运行)</li></ul></li><li><strong>删除容器:</strong><ul><li><strong>注意:</strong> 只能删除已停止的容器。</li><li><strong>语法:</strong> <code>docker rm &lt;容器ID或名称&gt;</code></li><li><strong>示例:</strong> (先停止) <code>docker stop my-nginx</code> (再删除) <code>docker rm my-nginx</code></li><li><strong>强制删除运行中的容器 (不推荐，除非你知道后果):</strong> <code>docker rm -f &lt;容器ID或名称&gt;</code></li></ul></li><li><strong>清理所有已停止的容器:</strong><ul><li><strong>语法:</strong> <code>docker container prune</code> (会提示确认)</li></ul></li></ul><p><strong>7. 删除镜像 (docker rmi)</strong></p><ul><li><strong>作用:</strong> 删除本地的一个或多个镜像。</li><li><strong>注意:</strong> 如果有容器 (即使是已停止的) 正在使用该镜像，需要先删除这些容器才能删除镜像。</li><li><strong>语法:</strong> <code>docker rmi &lt;镜像ID或仓库名:标签&gt;</code></li><li><strong>示例:</strong><ul><li>删除 <code>hello-world</code> 镜像: <code>docker rmi hello-world:latest</code></li><li>删除 <code>ubuntu:22.04</code> 镜像 (如果之前没有基于它创建并保留的容器): <code>docker rmi ubuntu:22.04</code></li></ul></li><li><strong>清理悬空镜像 (dangling images):</strong> 这些是没有标签且没有被任何容器使用的镜像层，通常是构建过程中产生的中间层或旧版本。<ul><li><strong>语法:</strong> <code>docker image prune</code></li></ul></li></ul><h2 id="我自己的实例"><a class="markdownIt-Anchor" href="#我自己的实例"></a> 我自己的实例</h2><h3 id="1-需要用gpu的话先配置gpu"><a class="markdownIt-Anchor" href="#1-需要用gpu的话先配置gpu"></a> 1. 需要用gpu的话先配置gpu</h3><p><a href="https://blog.csdn.net/GritYearner/article/details/133679403">https://blog.csdn.net/GritYearner/article/details/133679403</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | <span class="built_in">sudo</span> gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \</span><br><span class="line">  &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \</span><br><span class="line">    sed <span class="string">&#x27;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g&#x27;</span> | \</span><br><span class="line">    <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/nvidia-container-toolkit.list \</span><br><span class="line">  &amp;&amp; \</span><br><span class="line">    <span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install -y nvidia-docker2</span><br><span class="line"><span class="built_in">sudo</span> nvidia-ctk runtime configure --runtime=docker</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br><span class="line">测试</span><br><span class="line"><span class="built_in">sudo</span> docker run --<span class="built_in">rm</span> --gpus all nvidia/cuda:11.0.3-base-ubuntu20.04 nvidia-smi</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-利用鱼香ros的镜像启动一个容器"><a class="markdownIt-Anchor" href="#2-利用鱼香ros的镜像启动一个容器"></a> 2. 利用鱼香ros的镜像启动一个容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker run -dit \</span><br><span class="line">--gpus all \</span><br><span class="line">-e NVIDIA_DRIVER_CAPABILITIES=all \</span><br><span class="line">--name=[your_container_name] \</span><br><span class="line">--privileged  \</span><br><span class="line">-v /dev:/dev \</span><br><span class="line">-v /home/[your_username]:/home/[your_username] \</span><br><span class="line">-v /tmp/.X11-unix:/tmp/.X11-unix  \</span><br><span class="line">-e DISPLAY=unix<span class="variable">$DISPLAY</span> \</span><br><span class="line">-w /home/[your_username] \</span><br><span class="line">--net=host \</span><br><span class="line">fishros2/ros:noetic-desktop-full </span><br></pre></td></tr></table></figure><p>这里注意不要直接使用鱼香的容器，他的默认的启动跟这个不太一样。启动时候的这些指令一旦运行，就不能再改了，最好是删除容器重新从镜像用正确指令生成一个容器，实在不想放弃这个容器的话就通过将这个容器生成为新的镜像，再从新镜像用正确指令生成容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit 容器名 新镜像名:标签</span><br></pre></td></tr></table></figure><p>要使用图形界面需要在外面终端运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是鱼香ros默认运行的</span></span><br><span class="line">xhost +<span class="built_in">local</span>: &gt;&gt; /dev/null</span><br><span class="line"><span class="comment"># 这是gpt推荐的</span></span><br><span class="line">xhost +<span class="built_in">local</span>:docker</span><br></pre></td></tr></table></figure><h3 id="3-已经装好了orb-slam3和ros的镜像"><a class="markdownIt-Anchor" href="#3-已经装好了orb-slam3和ros的镜像"></a> 3. 已经装好了ORB-SLAM3和ROS的镜像</h3><p>我通过之前的鱼香镜像生成容器配置好orbslam3自己做了一个镜像上传到了dockerhub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br><span class="line">docker pull 用户名/仓库名:标签</span><br><span class="line"><span class="built_in">sudo</span> docker run -dit \</span><br><span class="line">--gpus all \</span><br><span class="line">-e NVIDIA_DRIVER_CAPABILITIES=all \</span><br><span class="line">--name=rosslam \</span><br><span class="line">--privileged  \</span><br><span class="line">-v /dev:/dev \</span><br><span class="line">-v /home/xfy/docker-ros:/home/rosslam/workspace \ //记得改这个挂载目录</span><br><span class="line">-v /tmp/.X11-unix:/tmp/.X11-unix  \</span><br><span class="line">-e DISPLAY=unix<span class="variable">$DISPLAY</span> \</span><br><span class="line">-w /home/rosslam \</span><br><span class="line">--net=host \</span><br><span class="line">xuefeiyang/fyslam:slam3WithRos</span><br></pre></td></tr></table></figure><ol><li><p><strong><code>sudo docker run</code></strong>:</p><ul><li><code>sudo</code>: 以超级用户（root）权限执行后面的命令。运行 Docker 命令，特别是涉及硬件访问（如 GPU、设备挂载 <code>/dev</code>）或修改网络设置（<code>--net=host</code>）时，通常需要 <code>sudo</code> 权限。</li><li><code>docker run</code>: 这是 Docker 的核心命令，用于根据指定的镜像创建一个新的容器并运行它。</li></ul></li><li><p><strong><code>-dit</code></strong>: 这是三个选项的缩写合并：</p><ul><li><code>-d</code> (<code>--detach</code>): 让容器在后台运行（Detached mode）。执行此命令后，你会立即返回到宿主机的终端提示符，而不是直接进入容器的 Shell。容器会在后台保持运行状态。这对于运行需要长时间提供服务的容器（如 ROS Master、模拟器）很有用。</li><li><code>-i</code> (<code>--interactive</code>): 保持标准输入（STDIN）对容器开放，即使没有连接到容器。这通常与 <code>-t</code> 一起使用，以便后续可以通过 <code>docker attach</code> 或 <code>docker exec</code> 进行交互。</li><li><code>-t</code> (<code>--tty</code>): 为容器分配一个伪终端（pseudo-TTY）。这使得你后续通过 <code>docker exec</code> 进入容器时，能获得一个类似真实终端的交互体验（例如，有命令提示符、支持 Tab 补全等）。</li><li><strong>组合效果</strong>: <code>-dit</code> 启动一个后台运行的容器，但保持其交互接口可用，方便你之后使用 <code>docker exec -it rosslam bash</code> 等命令进入容器内部进行操作。</li></ul></li><li><p><strong><code>--gpus all</code></strong>:</p><ul><li>允许这个容器访问宿主机上所有可用的 NVIDIA GPU。</li><li><strong>前提</strong>: 你的宿主机需要正确安装 NVIDIA 显卡驱动，并且安装了 NVIDIA Container Toolkit (nvidia-docker2)。</li><li><strong>用途</strong>: 对于需要 CUDA 进行加速的 SLAM 算法（例如，基于深度学习的特征提取、GPU 加速的后端优化、仿真渲染等）至关重要。</li></ul></li><li><p><strong><code>-e NVIDIA_DRIVER_CAPABILITIES=all</code></strong>:</p><ul><li><code>-e</code> (<code>--env</code>): 设置容器内部的环境变量。</li><li><code>NVIDIA_DRIVER_CAPABILITIES=all</code>: 这个特定的环境变量告诉 NVIDIA 驱动程序，允许容器使用驱动程序的所有功能（如图形、计算、工具、视频编解码等）。通常与 <code>--gpus</code> 选项配合使用，以确保容器内应用能充分利用 GPU 能力。</li></ul></li><li><p><strong><code>--name=rosslam</code></strong>:</p><ul><li>给这个新创建的容器指定一个名字，叫做 “rosslam”。</li><li><strong>好处</strong>: 你可以使用这个名字来方便地管理容器，例如 <code>docker stop rosslam</code>、<code>docker start rosslam</code>、<code>docker logs rosslam</code>、<code>docker exec -it rosslam bash</code> 等，而不需要记住 Docker 自动生成的长 ID。</li></ul></li><li><p><strong><code>--privileged</code></strong>:</p><ul><li>赋予这个容器扩展的权限。这基本上禁用了容器和宿主机之间的大部分安全隔离机制。</li><li><strong>效果</strong>: 容器几乎拥有与宿主机上 root 用户相同的权限，可以访问宿主机的所有设备（<code>/dev</code> 下的所有内容），修改内核参数等。</li><li><strong>使用场景</strong>: 通常是为了确保容器能够无障碍地访问各种硬件设备（摄像头、IMU、LiDAR 等），尤其是在 <code>-v /dev:/dev</code> 挂载了整个设备目录的情况下，确保权限足够。</li><li><strong>注意</strong>: 这是一个强大的选项，但<strong>有安全风险</strong>。如果可能，优先考虑使用更精细的 <code>--device</code> 选项来只挂载必要的设备，而不是使用 <code>--privileged</code>。但有时为了方便或解决特定权限问题会使用它。</li></ul></li><li><p><strong><code>-v /dev:/dev</code></strong>:</p><ul><li><code>-v</code> (<code>--volume</code>): 将宿主机的目录或文件挂载到容器内部。这里是挂载宿主机的 <code>/dev</code> 目录到容器的 <code>/dev</code> 目录。</li><li><strong>目的</strong>: 让容器可以直接访问宿主机上的所有硬件设备文件。这对于 SLAM 来说非常方便，因为你可以直接在容器内像在宿主机上一样使用 <code>/dev/video0</code>（摄像头）、<code>/dev/ttyUSB0</code>（串口设备如 IMU 或 LiDAR）等设备。</li><li><strong>与 <code>--privileged</code> 的关系</strong>: 这个挂载让容器 <em>看到</em> 设备文件，而 <code>--privileged</code> 通常用来确保容器 <em>有权限</em> 去操作这些设备文件。</li></ul></li><li><p><strong><code>-v /home/xfy/docker-ros:/home/rosslam/workspace</code></strong>:</p><ul><li>这是另一个卷挂载。</li><li><code>宿主机路径</code>: <code>/home/xfy/docker-ros</code> （<strong>这是你宿主机上的一个具体目录，其他人使用时需要修改成他们自己的路径！</strong>）</li><li><code>容器内路径</code>: <code>/home/rosslam/workspace</code></li><li><strong>目的</strong>: 这是实现代码和数据共享的关键。你在宿主机的 <code>/home/xfy/docker-ros</code> 目录下修改代码、存放数据，这些内容会实时同步到容器内的 <code>/home/rosslam/workspace</code> 目录，反之亦然。这样你可以在宿主机使用你喜欢的编辑器，而在容器内编译和运行。容器删除后，这个目录下的工作成果依然保存在宿主机上。</li></ul></li><li><p><strong><code>-v /tmp/.X11-unix:/tmp/.X11-unix</code></strong>:</p><ul><li>挂载宿主机的 X11 Unix Domain Socket 目录到容器内部对应的位置。</li><li><strong>目的</strong>: 这是实现 X11 转发（让容器内的 GUI 程序显示在宿主机屏幕上）的关键步骤之一。GUI 程序通过这个 Socket 与宿主机的 X Server 通信。</li></ul></li><li><p><strong><code>-e DISPLAY=unix$DISPLAY</code></strong>:</p><ul><li>设置容器内的 <code>DISPLAY</code> 环境变量。</li><li><code>$DISPLAY</code>: 这会取用你<strong>当前宿主机</strong>的 <code>DISPLAY</code> 环境变量的值（通常是 <code>:0</code> 或 <code>:1</code> 等）。</li><li><code>unix</code>: 有时会加上这个前缀，但很多时候直接 <code>-e DISPLAY=$DISPLAY</code> 也能工作。</li><li><strong>目的</strong>: 告诉容器内的 GUI 应用程序应该将图形界面发送到哪个显示服务器（即你的宿主机屏幕）。需要与上一步的 X11 Socket 挂载配合使用。</li><li><strong>前提</strong>: 在运行这个 <code>docker run</code> 命令之前，你可能需要在宿主机上执行 <code>xhost +local:docker</code> （或者更安全的特定容器授权命令）来允许来自 Docker 容器的 X11 连接。</li></ul></li><li><p><strong><code>-w /home/rosslam</code></strong>:</p><ul><li><code>-w</code> (<code>--workdir</code>): 指定容器启动后的默认工作目录。</li><li><strong>效果</strong>: 当你使用 <code>docker exec -it rosslam bash</code> 进入容器时，你的 Shell 会话将直接从容器内的 <code>/home/rosslam</code> 目录开始，而不是默认的根目录 <code>/</code>。这通常是为了方便，让你直接进入项目相关的主目录。</li></ul></li><li><p><strong><code>--net=host</code></strong>:</p><ul><li>让容器共享宿主机的网络命名空间（Network Namespace）。</li><li><strong>效果</strong>: 容器不会获得自己独立的 IP 地址，而是直接使用宿主机的网络接口和 IP 地址。容器内监听的端口会直接暴露在宿主机的对应端口上，无需使用 <code>-p</code> 进行端口映射。</li><li><strong>对 ROS/SLAM 的好处</strong>: 极大地简化了网络配置。容器内的 ROS 节点可以像在宿主机上运行一样，轻松地被局域网内（包括宿主机）的其他 ROS 节点发现和通信（例如 RViz 连接容器内的 ROS Master）。也方便访问连接到宿主机的网络摄像头等设备。</li><li><strong>缺点</strong>: 降低了网络隔离性。</li></ul></li><li><p><strong><code>xuefeiyang/fyslam:slam3WithRos</code></strong>:</p><ul><li>这是用来创建容器的<strong>镜像</strong>（Image）。</li><li><code>xuefeiyang/fyslam</code>: 镜像的仓库名/用户名和镜像名，这看起来是一个用户（xuefeiyang）构建并可能分享在 Docker Hub 或私有仓库的自定义镜像。</li><li><code>slam3WithRos</code>: 镜像的标签（Tag），通常表示镜像的版本或者配置。这个名字暗示了这个镜像里面很可能已经预装了 ROS (Robot Operating System) 和一些 SLAM 相关的库或工具。</li></ul></li></ol><p><strong>总结</strong></p><p>这个命令启动了一个名为 <code>rosslam</code> 的后台容器，该容器基于 <code>xuefeiyang/fyslam:slam3WithRos</code> 镜像。它被赋予了很高的权限 (<code>--privileged</code>)，可以直接访问宿主机的所有 GPU (<code>--gpus all</code>) 和所有设备 (<code>-v /dev:/dev</code>)，并且共享宿主机的网络 (<code>--net=host</code>)。它还设置了 GUI 转发 (<code>-v /tmp/.X11-unix</code>, <code>-e DISPLAY</code>)，并将宿主机的 <code>/home/xfy/docker-ros</code> 目录映射到容器的 <code>/home/rosslam/workspace</code> 以共享工作文件。容器启动后的默认工作目录是 <code>/home/rosslam</code>。</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—g2o库—ICP</title>
      <link href="/2025/04/29/c10/"/>
      <url>/2025/04/29/c10/</url>
      
        <content type="html"><![CDATA[<p>这个例子解决的是一个常见的 3D 重建或配准问题：我们有两组对应的三维点云（或者说，已知点之间的匹配关系），并且已经有了一个初始的、可能不太精确的相对位姿估计（旋转 R 和平移 t），我们希望通过优化来获得一个更精确的相对位姿。</p><p><strong>与 Bundle Adjustment 的关键区别：</strong></p><ul><li>BA 通常处理的是 3D 点到 2D 图像点的投影关系。</li><li>这个例子处理的是 <strong>3D 点到 3D 点</strong> 的直接变换关系。</li><li>这个特定的例子<strong>只优化位姿</strong>，而<strong>不优化三维点的坐标</strong> (尽管也可以扩展为同时优化点坐标)。</li></ul><h3 id="1-问题描述"><a class="markdownIt-Anchor" href="#1-问题描述"></a> 1. 问题描述</h3><p>假设我们有两组三维点：</p><ul><li><code>pts1</code>: 第一组三维点的坐标（在坐标系 1 中）。</li><li><code>pts2</code>: 第二组三维点的坐标（在坐标系 2 中）。</li></ul><p>我们知道 <code>pts1[i]</code> 和 <code>pts2[i]</code> 是<strong>对应</strong>的点。我们还有一个从坐标系 2 变换到坐标系 1 的初始位姿估计 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn><mo>=</mo><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T\_{12} = (R, t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>。</p><p>目标是：<strong>优化位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn></mrow><annotation encoding="application/x-tex">T\_{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span></span></strong>，使得将 <code>pts2</code> 中的每个点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 通过优化后的位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn></mrow><annotation encoding="application/x-tex">T\_{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span></span> 变换到坐标系 1 后，得到的结果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">T\_{12} \mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 与其对应的点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{1,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 之间的<strong>距离（误差）</strong> 的总和最小。</p><p>误差项可以定义为： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">e</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>=</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo>−</mo><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{e}\_i = \mathbf{p}\_{1,i} - T\_{12} \mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">e</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span></p><p>我们要最小化 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∑</mo><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold">e</mi><mi mathvariant="normal">_</mi><mi>i</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sum_i ||\mathbf{e}\_i||^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1241079999999999em;vertical-align:-0.31em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16195399999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord mathbf">e</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。</p><h3 id="2-思考过程如何用图优化解决"><a class="markdownIt-Anchor" href="#2-思考过程如何用图优化解决"></a> 2. 思考过程：如何用图优化解决？</h3><ul><li><p><strong>顶点 (Vertex) 代表什么？</strong></p><ul><li>未知变量是待优化的相对位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn></mrow><annotation encoding="application/x-tex">T\_{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span></span>。</li><li><strong>因此，我们将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn></mrow><annotation encoding="application/x-tex">T\_{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span></span> 定义为一个 <code>g2o::VertexSE3Expmap</code> 顶点。</strong> 只需要一个顶点。</li></ul></li><li><p><strong>边 (Edge) 代表什么？</strong></p><ul><li>约束来自于每一对匹配点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo separator="true">,</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbf{p}\_{1,i}, \mathbf{p}\_{2,i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mclose">)</span></span></span></span>。</li><li>每一对点都要求：变换后的点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">T\_{12} \mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 应该接近目标点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{1,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span>。</li><li><strong>因此，每一对匹配点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo separator="true">,</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbf{p}\_{1,i}, \mathbf{p}\_{2,i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mclose">)</span></span></span></span> 都对应图中的一条边。</strong> 这条边衡量了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{1,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mn>12</mn></msub><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">T_{12} \mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 之间的三维向量误差。</li></ul></li><li><p><strong>顶点和边如何连接？</strong></p><ul><li>计算第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 对点的误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">e</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>=</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo>−</mo><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{e}\_i = \mathbf{p}\_{1,i} - T\_{12} \mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">e</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 时，我们只用到<strong>一个</strong>待优化的变量——位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn></mrow><annotation encoding="application/x-tex">T\_{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span></span>。点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{1,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 的坐标在这个例子中是<strong>固定</strong>的。</li><li><strong>因此，每条边只连接到那个唯一的位姿顶点上，是 一元边 (Unary Edge)。</strong></li></ul></li><li><p><strong>点坐标如何处理？</strong></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{1,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span>：可以看作是这条边的 <strong>测量值 (Measurement)</strong>，即我们期望变换后的点应该到达的目标位置。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span>：它是计算误差时需要用到的<strong>固定数据</strong>，它不是测量值，也不是待优化变量。它需要与边实例关联起来。</li></ul></li></ul><p><strong>总结思路：</strong> 创建一个图，包含：</p><ul><li>1 个 <code>VertexSE3Expmap</code> 顶点 (表示待优化的位姿 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn></mrow><annotation encoding="application/x-tex">T\_{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span></span></span></span>)。</li><li>N 条 <strong>自定义的一元边</strong> (每条边对应一对匹配点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo separator="true">,</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mathbf{p}\_{1,i}, \mathbf{p}\_{2,i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mclose">)</span></span></span></span>)。<ul><li>每条边存储 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 作为固定数据。</li><li>每条边以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{1,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 作为测量值。</li><li>每条边计算误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">e</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>=</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo>−</mo><mi>T</mi><mi mathvariant="normal">_</mi><mn>12</mn><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{e}\_i = \mathbf{p}\_{1,i} - T\_{12} \mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">e</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mord">2</span></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span>。<br />让 g2o 优化这个图，调整位姿顶点的值，使得所有边的误差平方和（考虑信息矩阵）最小。</li></ul></li></ul><h3 id="3-g2o-实现步骤"><a class="markdownIt-Anchor" href="#3-g2o-实现步骤"></a> 3. g2o 实现步骤</h3><p><strong>3.1 自定义边的类型 (<code>EdgeProjectXYZRGBDPoseOnly</code>)</strong></p><ul><li><strong>原因:</strong> g2o 没有预定义完全符合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">e</mi><mi mathvariant="normal">_</mi><mi>i</mi><mo>=</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow><mo>−</mo><mi>T</mi><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{e}\_i = \mathbf{p}\_{1,i} - T \mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">e</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 这种形式误差的一元边。我们需要自己创建一个。</li><li><strong>实现:</strong><ul><li><strong>继承:</strong> <code>g2o::BaseUnaryEdge&lt;D, E, VertexType&gt;</code>。<ul><li><code>D</code> (误差维度): 误差是 3D 向量差，<code>D = 3</code>。</li><li><code>E</code> (测量值类型): 测量值是目标点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{1,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span>，类型为 <code>Eigen::Vector3d</code>。</li><li><code>VertexType</code>: 连接的顶点是位姿，类型为 <code>g2o::VertexSE3Expmap</code>。</li><li>所以继承 <code>g2o::BaseUnaryEdge&lt;3, Eigen::Vector3d, g2o::VertexSE3Expmap&gt;</code>。</li></ul></li><li><strong>构造函数:</strong> 需要传入并存储固定的点坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span>。代码中将其命名为 <code>_point</code>。<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">EdgeProjectXYZRGBDPoseOnly</span>(<span class="type">const</span> Eigen::Vector3d&amp; point) : _point(point) &#123;&#125;</span><br></pre></td></tr></table></figure></li><li><strong>重写 <code>computeError()</code>:</strong><ol><li>获取位姿顶点 <code>pose = _vertices[0]</code>。</li><li>获取当前位姿估计 <code>T = pose-&gt;estimate()</code>。</li><li>使用当前位姿 T 变换存储的固定点 <code>_point</code> (即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>2</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{2,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span>): <code>transformed_point = T.map(_point)</code>。</li><li>计算误差：<code>_error = _measurement - transformed_point</code>。其中 <code>_measurement</code> 存储的是目标点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mrow><mn>1</mn><mo separator="true">,</mo><mi>i</mi></mrow></mrow><annotation encoding="application/x-tex">\mathbf{p}\_{1,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span></span></span></span></span>。</li></ol></li><li><strong>重写 <code>linearizeOplus()</code> (计算雅可比):</strong><ol><li>获取当前位姿 <code>T</code> 和变换后的点 <code>xyz_trans = T.map(_point)</code>。</li><li>计算误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">e</mi><mo>=</mo><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mn>1</mn><mo>−</mo><mi>T</mi><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">\mathbf{e} = \mathbf{p}\_1 - T \mathbf{p}\_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">e</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.95444em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord">2</span></span></span></span> 对位姿顶点（在 se(3) 李代数上的 6D 扰动 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mi mathvariant="bold-italic">ξ</mi><mo>=</mo><mo stretchy="false">(</mo><mi>δ</mi><mi>ω</mi><mi mathvariant="normal">_</mi><mi>x</mi><mo separator="true">,</mo><mi>δ</mi><mi>ω</mi><mi mathvariant="normal">_</mi><mi>y</mi><mo separator="true">,</mo><mi>δ</mi><mi>ω</mi><mi mathvariant="normal">_</mi><mi>z</mi><mo separator="true">,</mo><mi>δ</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>x</mi><mo separator="true">,</mo><mi>δ</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>y</mi><mo separator="true">,</mo><mi>δ</mi><mi>t</mi><mi mathvariant="normal">_</mi><mi>z</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\delta \boldsymbol{\xi} = (\delta \omega\_x, \delta \omega\_y, \delta \omega\_z, \delta t\_x, \delta t\_y, \delta t\_z)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03021em;">ξ</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1513309999999999em;vertical-align:-0.31em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord mathnormal">t</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>）的雅可比矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi mathvariant="bold">e</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>δ</mi><mi mathvariant="bold-italic">ξ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\partial \mathbf{e}}{\partial \delta \boldsymbol{\xi}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3612159999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight" style="margin-right:0.03021em;">ξ</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathbf mtight">e</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</li><li>根据链式法则和 SE(3) 的性质，可以推导出（假设扰动是左乘的）：<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi mathvariant="bold">e</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>δ</mi><mi mathvariant="bold-italic">ξ</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mo stretchy="false">(</mo><mi>T</mi><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>δ</mi><mi mathvariant="bold-italic">ξ</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mo stretchy="false">[</mo><msup><mi mathvariant="bold">p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">]</mo><mi mathvariant="normal">_</mi><mo>×</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="bold">I</mi></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">[</mo><msup><mi mathvariant="bold">p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">]</mo><mi mathvariant="normal">_</mi><mo>×</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi mathvariant="bold">I</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\frac{\partial \mathbf{e}}{\partial \delta \boldsymbol{\xi}} = - \frac{\partial (T \mathbf{p}\_2)}{\partial \delta \boldsymbol{\xi}} = - \begin{pmatrix} -[\mathbf{p}&#x27;]\_\times &amp; \mathbf{I} \end{pmatrix} = \begin{pmatrix} [\mathbf{p}&#x27;]\_\times &amp; -\mathbf{I} \end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03021em;">ξ</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathbf">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3304400000000003em;vertical-align:-0.8804400000000001em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03021em;">ξ</span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6999999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord">2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathbf">p</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord">×</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathbf">p</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord">×</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathbf">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="bold">p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>T</mi><mi mathvariant="bold">p</mi><mi mathvariant="normal">_</mi><mn>2</mn><mo>=</mo><mtext>xyz_trans</mtext></mrow><annotation encoding="application/x-tex">\mathbf{p}&#x27; = T \mathbf{p}\_2 = \text{xyz\_trans}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">p</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathbf">p</span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9250799999999999em;vertical-align:-0.31em;"></span><span class="mord text"><span class="mord">xyz_trans</span></span></span></span></span>。</li><li>将这个 3x6 的雅可比矩阵赋值给 <code>_jacobianOplusXi</code> (因为是一元边，只有 Xi)。代码中直接给出了展开形式。</li></ol></li><li><code>read</code>/<code>write</code> 函数在此例中留空。</li></ul></li></ul><p><strong>3.2 顶点类型</strong></p><ul><li>使用 g2o 预定义的 <code>g2o::VertexSE3Expmap</code> 来表示待优化的位姿。</li></ul><p><strong>3.3 配置优化器</strong></p><ul><li>与 BA 示例类似，配置 <code>BlockSolver</code> (这里用了 <code>BlockSolverTraits&lt;6, 3&gt;</code>)、<code>LinearSolverCSparse</code> 和 <code>OptimizationAlgorithmLevenberg</code>。</li><li>创建 <code>SparseOptimizer</code> 并设置算法和 <code>verbose</code>。</li></ul><p><strong>3.4 构建图</strong></p><ul><li><strong>添加顶点:</strong><ol><li>创建 <code>VertexSE3Expmap</code> 对象。</li><li>设置 ID (0)。</li><li>设置<strong>初始位姿估计</strong> (<code>setEstimate</code>)。注意：代码中给了单位阵和零向量作为初始值，但在实际应用中，应该传入通过其他方法（如 RANSAC+SVD 或 粗略 ICP）得到的初始 R 和 t。</li><li>添加到优化器。</li></ol></li><li><strong>添加边:</strong><ol><li>遍历所有匹配点对 (<code>pts1[i]</code>, <code>pts2[i]</code>)。</li><li>创建自定义的 <code>EdgeProjectXYZRGBDPoseOnly</code> 对象，<strong>将 <code>pts2[i]</code> (转换成 <code>Eigen::Vector3d</code>) 传入构造函数</strong>。</li><li>设置边的唯一 ID (从 1 开始)。</li><li><strong>连接到顶点:</strong> <code>edge-&gt;setVertex(0, pose)</code>，连接到唯一的位姿顶点。</li><li><strong>设置测量值:</strong> <code>edge-&gt;setMeasurement(...)</code>，传入目标点 <code>pts1[i]</code> (转换成 <code>Eigen::Vector3d</code>)。</li><li><strong>设置信息矩阵:</strong> <code>edge-&gt;setInformation(Eigen::Matrix3d::Identity() * 1e4)</code>。这里使用了单位矩阵乘以一个较大的数 <code>1e4</code>。这意味着我们对所有的点对匹配给予了<strong>很高的信任度（权重）</strong>，假设它们的误差都应该很小。在实际应用中，可以根据匹配质量或点的不确定性来设置不同的信息矩阵。</li><li>添加到优化器。</li></ol></li></ul><p><strong>3.5 执行优化</strong></p><ul><li>调用 <code>optimizer.initializeOptimization()</code>。</li><li>调用 <code>optimizer.optimize(num_iterations)</code> (代码中是 10 次)。</li></ul><p><strong>3.6 获取结果</strong></p><ul><li>从位姿顶点 <code>pose</code> 获取优化后的估计值 <code>pose-&gt;estimate()</code>。</li><li>将其转换为 <code>Eigen::Isometry3d</code> 并输出变换矩阵。</li></ul><h3 id="4-准备工作"><a class="markdownIt-Anchor" href="#4-准备工作"></a> 4. 准备工作</h3><ul><li><strong>包含头文件:</strong> g2o 核心库、求解器、算法、<code>VertexSE3Expmap</code>、<code>BaseUnaryEdge</code>、Eigen 等。</li><li><strong>准备输入数据:</strong><ul><li><code>std::vector&lt;cv::Point3f&gt; pts1</code>: 目标点云坐标。</li><li><code>std::vector&lt;cv::Point3f&gt; pts2</code>: 源点云坐标（待变换的点）。<strong>注意 <code>pts1</code> 和 <code>pts2</code> 必须是严格对应的</strong>。</li><li><code>cv::Mat R</code>, <code>cv::Mat t</code>: 初始的位姿估计（尽管代码中 <code>bundleAdjustment</code> 函数内部没有使用传入的 R, t 来设置初始值，而是用了单位阵，但在实际调用时应该用它们来设置 <code>pose-&gt;setEstimate</code>）。</li></ul></li><li><strong>数据类型转换:</strong> 将 <code>cv::Point3f</code> 转换为 <code>Eigen::Vector3d</code>。</li></ul><h3 id="5-关键代码片段-带注释"><a class="markdownIt-Anchor" href="#5-关键代码片段-带注释"></a> 5. 关键代码片段 (带注释)</h3><pre class="highlight"><code class="c++"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span><span class="comment">// Eigen 核心库</span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Eigen/Core&gt;</span></span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Eigen/Geometry&gt;</span></span><span class="comment">// g2o 核心库</span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/sparse_optimizer.h&gt;</span></span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/block_solver.h&gt;</span></span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/optimization_algorithm_levenberg.h&gt;</span></span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/base_vertex.h&gt;</span></span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/base_unary_edge.h&gt;</span> <span class="comment">// 一元边基类</span></span><span class="comment">// g2o 线性求解器</span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/solvers/csparse/linear_solver_csparse.h&gt;</span></span><span class="comment">// g2o 类型定义</span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/types/slam3d/vertex_se3_expmap.h&gt;</span> <span class="comment">// VertexSE3Expmap</span></span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/types/slam3d/se3quat.h&gt;</span>          <span class="comment">// SE3Quat</span></span><span class="comment">// OpenCV (仅用于数据结构 Point3f, Mat)</span><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/core/core.hpp&gt;</span></span><span class="keyword">using</span> <span class="keyword">namespace</span> std;<span class="keyword">using</span> <span class="keyword">namespace</span> g2o;<span class="comment">// --- 1. 自定义边：用于 3D-3D 点对的位姿优化 ---</span><span class="comment">// 模板参数：误差维度 D=3, 测量值类型 E=Eigen::Vector3d, 连接顶点类型 VertexSE3Expmap</span><span class="keyword">class</span> <span class="title class_">EdgeProjectXYZRGBDPoseOnly</span> : <span class="keyword">public</span> BaseUnaryEdge&lt;<span class="number">3</span>, Eigen::Vector3d, VertexSE3Expmap&gt; &#123;<span class="keyword">public</span>:    EIGEN_MAKE_ALIGNED_OPERATOR_NEW;    <span class="comment">// 构造函数：传入需要被变换的点 p2 的坐标</span>    <span class="built_in">EdgeProjectXYZRGBDPoseOnly</span>(<span class="type">const</span> Eigen::Vector3d &amp;point) : _point(point) &#123;&#125;    <span class="comment">// 读写函数 (本例忽略)</span>    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">read</span><span class="params">(istream &amp;in)</span> <span class="keyword">override</span> </span>&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">write</span><span class="params">(ostream &amp;out)</span> <span class="type">const</span> <span class="keyword">override</span> </span>&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;    <span class="comment">// 计算误差函数： error = p1 - T * p2</span>    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">computeError</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;        <span class="comment">// 获取连接的位姿顶点</span>        <span class="type">const</span> VertexSE3Expmap *pose = <span class="built_in">static_cast</span>&lt;<span class="type">const</span> VertexSE3Expmap *&gt;(_vertices[<span class="number">0</span>]);        <span class="comment">// 计算变换后的点 T * p2 (其中 p2 是存储在 _point 中的)</span>        Eigen::Vector3d transformed_point = pose-&gt;<span class="built_in">estimate</span>().<span class="built_in">map</span>(_point);        <span class="comment">// 计算误差 error = measurement - transformed_point (measurement 是 p1)</span>        _error = _measurement - transformed_point;    &#125;    <span class="comment">// 计算雅可比矩阵： d(error) / d(delta_xi) = [p&#x27;]_x, -I</span>    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">linearizeOplus</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;        VertexSE3Expmap *pose = <span class="built_in">static_cast</span>&lt;VertexSE3Expmap *&gt;(_vertices[<span class="number">0</span>]);        <span class="function">SE3Quat <span class="title">T</span><span class="params">(pose-&gt;estimate())</span></span>;        <span class="comment">// 计算变换后的点 p&#x27; = T * p2</span>        Eigen::Vector3d xyz_trans = T.<span class="built_in">map</span>(_point);        <span class="type">double</span> x = xyz_trans[<span class="number">0</span>];        <span class="type">double</span> y = xyz_trans[<span class="number">1</span>];        <span class="type">double</span> z = xyz_trans[<span class="number">2</span>];        <span class="comment">// 雅可比矩阵 _jacobianOplusXi (3x6)</span>        <span class="comment">// 对应扰动 delta_xi = (omega_x, omega_y, omega_z, v_x, v_y, v_z)</span>        <span class="comment">// J = [ [p&#x27;]_x   -I ]</span>        _jacobianOplusXi(<span class="number">0</span>, <span class="number">0</span>) = <span class="number">0</span>;    <span class="comment">// d(error_x)/d(omega_x)</span>        _jacobianOplusXi(<span class="number">0</span>, <span class="number">1</span>) = -z;   <span class="comment">// d(error_x)/d(omega_y)</span>        _jacobianOplusXi(<span class="number">0</span>, <span class="number">2</span>) = y;    <span class="comment">// d(error_x)/d(omega_z)</span>        _jacobianOplusXi(<span class="number">0</span>, <span class="number">3</span>) = <span class="number">-1</span>;   <span class="comment">// d(error_x)/d(v_x)</span>        _jacobianOplusXi(<span class="number">0</span>, <span class="number">4</span>) = <span class="number">0</span>;    <span class="comment">// d(error_x)/d(v_y)</span>        _jacobianOplusXi(<span class="number">0</span>, <span class="number">5</span>) = <span class="number">0</span>;    <span class="comment">// d(error_x)/d(v_z)</span>        _jacobianOplusXi(<span class="number">1</span>, <span class="number">0</span>) = z;    <span class="comment">// d(error_y)/d(omega_x)</span>        _jacobianOplusXi(<span class="number">1</span>, <span class="number">1</span>) = <span class="number">0</span>;    <span class="comment">// d(error_y)/d(omega_y)</span>        _jacobianOplusXi(<span class="number">1</span>, <span class="number">2</span>) = -x;   <span class="comment">// d(error_y)/d(omega_z)</span>        _jacobianOplusXi(<span class="number">1</span>, <span class="number">3</span>) = <span class="number">0</span>;    <span class="comment">// d(error_y)/d(v_x)</span>        _jacobianOplusXi(<span class="number">1</span>, <span class="number">4</span>) = <span class="number">-1</span>;   <span class="comment">// d(error_y)/d(v_y)</span>        _jacobianOplusXi(<span class="number">1</span>, <span class="number">5</span>) = <span class="number">0</span>;    <span class="comment">// d(error_y)/d(v_z)</span>        _jacobianOplusXi(<span class="number">2</span>, <span class="number">0</span>) = -y;   <span class="comment">// d(error_z)/d(omega_x)</span>        _jacobianOplusXi(<span class="number">2</span>, <span class="number">1</span>) = x;    <span class="comment">// d(error_z)/d(omega_y)</span>        _jacobianOplusXi(<span class="number">2</span>, <span class="number">2</span>) = <span class="number">0</span>;    <span class="comment">// d(error_z)/d(omega_z)</span>        _jacobianOplusXi(<span class="number">2</span>, <span class="number">3</span>) = <span class="number">0</span>;    <span class="comment">// d(error_z)/d(v_x)</span>        _jacobianOplusXi(<span class="number">2</span>, <span class="number">4</span>) = <span class="number">0</span>;    <span class="comment">// d(error_z)/d(v_y)</span>        _jacobianOplusXi(<span class="number">2</span>, <span class="number">5</span>) = <span class="number">-1</span>;   <span class="comment">// d(error_z)/d(v_z)</span>    &#125;<span class="keyword">protected</span>:    Eigen::Vector3d _point; <span class="comment">// 存储需要被变换的点 p2 的坐标</span>&#125;;<span class="comment">// --- 2. BA 函数主体 (ICP 位姿精化) ---</span><span class="function"><span class="type">void</span> <span class="title">bundleAdjustment</span><span class="params">(    <span class="type">const</span> std::vector&lt;cv::Point3f&gt; &amp;pts1, <span class="comment">// 目标点云 (坐标系 1)</span>    <span class="type">const</span> std::vector&lt;cv::Point3f&gt; &amp;pts2, <span class="comment">// 源点云 (坐标系 2)</span>    cv::Mat &amp;R, cv::Mat &amp;t)</span> </span>&#123;             <span class="comment">// 初始/优化后的位姿 (R, t 从系统 2 到系统 1)</span>    <span class="comment">// --- 配置 g2o 优化器 (与之前类似) ---</span>    <span class="keyword">typedef</span> BlockSolver&lt;BlockSolverTraits&lt;<span class="number">6</span>, <span class="number">3</span>&gt;&gt; BlockSolverType;    <span class="keyword">typedef</span> LinearSolverCSparse&lt;BlockSolverType::PoseMatrixType&gt; LinearSolverType;    <span class="keyword">auto</span> linearSolver = std::<span class="built_in">make_unique</span>&lt;LinearSolverType&gt;();    <span class="keyword">auto</span> blockSolver = std::<span class="built_in">make_unique</span>&lt;BlockSolverType&gt;(std::<span class="built_in">move</span>(linearSolver));    OptimizationAlgorithmLevenberg *algorithm = <span class="keyword">new</span> <span class="built_in">OptimizationAlgorithmLevenberg</span>(std::<span class="built_in">move</span>(blockSolver));    SparseOptimizer optimizer;    optimizer.<span class="built_in">setAlgorithm</span>(algorithm);    optimizer.<span class="built_in">setVerbose</span>(<span class="literal">true</span>);    <span class="comment">// --- 添加顶点 (只有一个位姿顶点) ---</span>    VertexSE3Expmap *pose = <span class="keyword">new</span> <span class="built_in">VertexSE3Expmap</span>();    pose-&gt;<span class="built_in">setId</span>(<span class="number">0</span>);    <span class="comment">// **注意:** 这里设置了单位阵初始值，实际应用中应使用传入的 R, t</span>    <span class="comment">// Eigen::Matrix3d R_mat; // ... 从 cv::Mat R 转换 ...</span>    <span class="comment">// Eigen::Vector3d t_vec; // ... 从 cv::Mat t 转换 ...</span>    <span class="comment">// pose-&gt;setEstimate(SE3Quat(R_mat, t_vec));</span>    pose-&gt;<span class="built_in">setEstimate</span>(<span class="built_in">SE3Quat</span>(Eigen::Matrix3d::<span class="built_in">Identity</span>(), Eigen::<span class="built_in">Vector3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))); <span class="comment">// 示例中使用单位阵</span>    optimizer.<span class="built_in">addVertex</span>(pose);    <span class="comment">// --- 添加边 (每个点对一条边) ---</span>    <span class="type">int</span> index = <span class="number">1</span>; <span class="comment">// 边 ID 从 1 开始</span>    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; pts<span class="number">1.</span><span class="built_in">size</span>(); i++) &#123;        <span class="comment">// 创建自定义边，传入需要变换的点 pts2[i]</span>        EdgeProjectXYZRGBDPoseOnly *edge = <span class="keyword">new</span> <span class="built_in">EdgeProjectXYZRGBDPoseOnly</span>(            Eigen::<span class="built_in">Vector3d</span>(pts2[i].x, pts2[i].y, pts2[i].z));        edge-&gt;<span class="built_in">setId</span>(index);        <span class="comment">// 连接到唯一的位姿顶点 (ID=0)</span>        edge-&gt;<span class="built_in">setVertex</span>(<span class="number">0</span>, pose); <span class="comment">// dynamic_cast 在这里可能更安全，但如果确定类型可以省略</span>        <span class="comment">// 设置测量值 (目标点 pts1[i])</span>        edge-&gt;<span class="built_in">setMeasurement</span>(Eigen::<span class="built_in">Vector3d</span>(pts1[i].x, pts1[i].y, pts1[i].z));        <span class="comment">// 设置信息矩阵 (权重)</span>        <span class="comment">// 使用单位阵乘以较大的系数，表示对匹配点对的信任度高</span>        edge-&gt;<span class="built_in">setInformation</span>(Eigen::Matrix3d::<span class="built_in">Identity</span>() * <span class="number">1e4</span>);        optimizer.<span class="built_in">addEdge</span>(edge);        index++;    &#125;    <span class="comment">// --- 执行优化 ---</span>    cout &lt;&lt; <span class="string">&quot;Starting optimization...&quot;</span> &lt;&lt; endl;    optimizer.<span class="built_in">initializeOptimization</span>();    optimizer.<span class="built_in">optimize</span>(<span class="number">10</span>); <span class="comment">// 执行 10 次迭代</span>    <span class="comment">// --- 输出结果 ---</span>    cout &lt;&lt; <span class="string">&quot;Optimization finished.&quot;</span> &lt;&lt; endl;    SE3Quat optimized_pose = pose-&gt;<span class="built_in">estimate</span>();    cout &lt;&lt; <span class="string">&quot;Optimized Transformation Matrix (T_1_2): &quot;</span> &lt;&lt; endl &lt;&lt; Eigen::<span class="built_in">Isometry3d</span>(optimized_pose).<span class="built_in">matrix</span>() &lt;&lt; endl;    <span class="comment">// (可选) 将优化后的 pose 更新回输入的 R, t</span>&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—g2o库—BA</title>
      <link href="/2025/04/28/c9/"/>
      <url>/2025/04/28/c9/</url>
      
        <content type="html"><![CDATA[<h3 id="1-问题描述"><a class="markdownIt-Anchor" href="#1-问题描述"></a> 1. 问题描述</h3><p>我们有一个相机，它在某个未知的位置和姿态（合称<strong>位姿</strong>）下拍摄了一张照片。我们知道：</p><ol><li>一些三维空间点的坐标 (<code>points_3d</code>)。</li><li>这些三维点在相机拍摄的照片上对应的二维像素坐标 (<code>points_2d</code>)。</li><li>相机的内部参数（焦距、主点），通常表示为一个<strong>内参矩阵 K</strong>。</li><li>相机位姿的一个<strong>初始估计值</strong>（旋转矩阵 <code>R</code> 和平移向量 <code>t</code>）。</li></ol><p>由于三维点坐标的测量、二维点观测以及初始位姿估计都可能存在误差，直接将三维点通过初始位姿和内参投影到图像平面，得到的二维坐标通常不会精确地等于观测到的二维坐标。</p><p><strong>目标：</strong> 同时<strong>优化调整</strong>相机的<strong>位姿 (R, t)</strong> 和 <strong>三维点的空间坐标 (<code>points_3d</code>)</strong>，使得所有三维点在优化后的位姿下，根据相机内参投影到图像平面上的<strong>重投影坐标</strong>与<strong>观测到的二维坐标 (<code>points_2d</code>)</strong> 之间的<strong>误差（重投影误差）</strong> 的总和最小。</p><p>这本质上是一个大规模的非线性最小二乘优化问题。</p><h3 id="2-思考过程如何用图优化解决"><a class="markdownIt-Anchor" href="#2-思考过程如何用图优化解决"></a> 2. 思考过程：如何用图优化解决？</h3><p>我们将 BA 问题转化为 g2o 的图模型：</p><ul><li><p><strong>顶点 (Vertex) 代表什么？</strong></p><ul><li>顶点代表需要优化的未知变量。</li><li>在这个问题中，未知变量有两类：<ol><li><strong>相机的位姿 (Pose):</strong> 它有 6 个自由度（3 个旋转，3 个平移）。我们将用一个顶点来表示它。</li><li><strong>每个三维空间点的坐标 (3D Point):</strong> 每个点有 3 个自由度（x, y, z）。我们将为<strong>每一个</strong>三维点创建一个对应的顶点。</li></ol></li><li><strong>因此，图中将包含 1 个位姿顶点和 N 个三维点顶点 (N 是点的数量)。</strong></li></ul></li><li><p><strong>边 (Edge) 代表什么？</strong></p><ul><li>边代表变量之间的约束或测量误差。</li><li>我们的约束来自于观测：每个三维点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 在图像上被观测为一个二维点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。这个观测关系同时关联了三维点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的坐标和相机的位姿。</li><li><strong>因此，每一个观测 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(P_i, p_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 都对应图中的一条边。</strong> 这条边表达的是：根据当前估计的相机位姿和当前估计的三维点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">P\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span> 坐标，计算出的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">P\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span> 的重投影坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">p&#x27;\_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061892em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">i</span></span></span></span></span>，与实际观测到的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi mathvariant="normal">_</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">p\_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9695199999999999em;vertical-align:-0.31em;"></span><span class="mord mathnormal">p</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">i</span></span></span></span> 之间的误差 <span class='katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;\=&#039; in math mode at position 6: e\_i \̲=̲ p\_i - p&#039;\_{i}'>e\_i \= p\_i - p&#039;\_{i}</span>。</li></ul></li><li><p><strong>顶点和边如何连接？</strong></p><ul><li>计算第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个观测的重投影误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">e_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 时，我们需要用到：<ol><li>相机的位姿（位姿顶点）。</li><li>第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个三维点的坐标（第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个点顶点）。</li><li>相机的内参 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>（这个不是变量，而是已知参数）。</li></ol></li><li>这意味着每条边都需要连接<strong>一个位姿顶点</strong>和<strong>一个对应的三维点顶点</strong>。</li><li><strong>因此，这些边都是二元边 (Binary Edge)。</strong></li></ul></li><li><p><strong>相机内参 K 如何处理？</strong></p><ul><li>在这个例子中，相机内参 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 是<strong>已知且固定</strong>的，我们<strong>不优化它</strong>。</li><li>但是，在计算重投影误差（边的工作）时又必须用到它。</li><li>g2o 提供了一种<strong>参数 (Parameter)</strong> 机制来处理这种情况。我们可以将相机内参封装成一个 <code>g2o::CameraParameters</code> 对象，并将其添加到优化器中。边在计算误差时可以访问这些参数。</li></ul></li></ul><p><strong>总结思路：</strong> 我们将创建一个图，包含：</p><ul><li>1 个 <code>VertexSE3Expmap</code> 类型的顶点（表示相机位姿）。</li><li>N 个 <code>VertexPointXYZ</code> 类型的顶点（表示 N 个三维点）。</li><li>1 个 <code>CameraParameters</code> 类型的参数（存储相机内参 K）。</li><li>N 条 <code>EdgeProjectXYZ2UV</code> 类型的二元边（每条边连接位姿顶点和一个点顶点，代表一个重投影误差约束，并关联相机参数）。<br />然后，让 g2o 优化这个图，调整所有顶点的值（位姿和点坐标），使得所有边的重投影误差平方和（考虑信息矩阵）最小。</li></ul><h3 id="3-g2o-实现步骤"><a class="markdownIt-Anchor" href="#3-g2o-实现步骤"></a> 3. g2o 实现步骤</h3><p>根据 BA 的图优化思路，代码中执行了以下操作：</p><p><strong>3.1 定义/选择顶点类型</strong></p><ul><li><strong>相机位姿顶点:</strong><ul><li>g2o 提供了预定义的 <code>g2o::VertexSE3Expmap</code>。</li><li>它内部使用 <code>SE3Quat</code> (包含 Eigen 的四元数和平移向量) 存储位姿估计值。</li><li>关键在于它的 <code>oplusImpl</code> 使用 <strong>李代数 se(3)</strong> 进行增量更新（通过指数映射），这对于表示旋转非常自然且避免了万向锁等问题。维度是 6。</li></ul></li><li><strong>三维点顶点:</strong><ul><li>g2o 提供了预定义的 <code>g2o::VertexPointXYZ</code>。</li><li>它内部使用 <code>Eigen::Vector3d</code> 存储点的 (x, y, z) 坐标。维度是 3。</li><li>它的 <code>oplusImpl</code> 是简单的向量加法。</li></ul></li></ul><p><strong>3.2 定义/选择边类型</strong></p><ul><li><strong>重投影误差边:</strong><ul><li>g2o 提供了预定义的 <code>g2o::EdgeProjectXYZ2UV</code>。</li><li>它是一个二元边，模板参数为 <code>&lt;2, Eigen::Vector2d, g2o::VertexPointXYZ, g2o::VertexSE3Expmap&gt;</code>，表示：<ul><li>误差维度 <code>D=2</code> (误差是二维像素向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>u</mi><mrow><mi>e</mi><mi>r</mi><mi>r</mi></mrow></msub><mo separator="true">,</mo><msub><mi>v</mi><mrow><mi>e</mi><mi>r</mi><mi>r</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u_{err}, v_{err})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>)。</li><li>测量值类型 <code>E=Eigen::Vector2d</code> (存储观测到的像素坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span>)。</li><li>连接的第一个顶点类型是 <code>VertexPointXYZ</code> (索引 0)。</li><li>连接的第二个顶点类型是 <code>VertexSE3Expmap</code> (索引 1)。</li></ul></li><li><strong>这个类内部已经实现了 <code>computeError()</code> 和 <code>linearizeOplus()</code>：</strong><ul><li><code>computeError()</code>: 获取位姿和点的当前估计值，获取相机参数，执行&quot;世界坐标 -&gt; 相机坐标 -&gt; 像素坐标&quot;的投影变换，计算预测像素坐标，然后用 <code>_measurement</code> (观测像素坐标) 减去预测坐标，得到 <code>_error</code>。</li><li><code>linearizeOplus()</code>: 计算 <code>_error</code> (2维) 相对于 <code>VertexPointXYZ</code> (3维) 的雅可比矩阵 (2x3) 和相对于 <code>VertexSE3Expmap</code> (6维李代数) 的雅可比矩阵 (2x6)。这是 BA 的核心数学推导，g2o 已经帮你做好了。</li></ul></li></ul></li></ul><p><strong>3.3 定义参数</strong></p><ul><li><strong>相机内参:</strong><ul><li>使用 <code>g2o::CameraParameters</code> 类。</li><li>需要用相机的焦距 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">f_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>y</mi></msub><mo>=</mo><msub><mi>f</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">f_y=f_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>) 和主点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>c</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>y</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(c_x, c_y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 来构造它。</li><li>它需要设置一个 ID，并使用 <code>optimizer.addParameter()</code> 添加到优化器中。</li></ul></li></ul><p><strong>3.4 配置优化器</strong></p><ul><li><strong>目的:</strong> 设置求解策略。</li><li><strong>实现:</strong><ul><li><strong>块求解器:</strong> <code>BlockSolver&lt; BlockSolverTraits&lt;6, 3&gt; &gt;</code>。这里的 <code>&lt;6, 3&gt;</code> 通常与 BA 中涉及的主要变量维度（位姿 6D，点 3D）相关，尤其是在使用 Schur 消元时。</li><li><strong>线性求解器:</strong> <code>LinearSolverCSparse</code>。BA 问题通常规模较大但具有稀疏性（一个点只会被少数几个位姿看到），稀疏求解器是必要的。</li><li><strong>优化算法:</strong> <code>OptimizationAlgorithmLevenberg</code> (LM 算法) 是 BA 的常用选择，因为它结合了高斯牛顿法和梯度下降法的优点，比较鲁棒。</li><li><strong>创建 <code>SparseOptimizer</code></strong> 并设置算法和 <code>verbose</code> 模式。</li></ul></li></ul><p><strong>3.5 构建图</strong></p><ul><li><strong>目的:</strong> 将具体的顶点、边和参数加入优化器。</li><li><strong>实现:</strong><ul><li><strong>添加位姿顶点:</strong><ol><li>创建 <code>VertexSE3Expmap</code> 对象。</li><li>从输入的初始 <code>R</code> 和 <code>t</code> 创建 <code>g2o::SE3Quat</code> 对象，并用 <code>setEstimate()</code> 设置初始位姿。</li><li>设置 ID (例如 0)。</li><li>添加到优化器 <code>optimizer.addVertex()</code>。</li></ol></li><li><strong>添加三维点顶点:</strong><ol><li>遍历输入的 <code>points_3d</code>。</li><li>为每个点创建一个 <code>VertexPointXYZ</code> 对象。</li><li>用 <code>setEstimate()</code> 设置其初始坐标。</li><li>设置<strong>唯一</strong>的 ID (例如从 1 开始递增)。</li><li><strong><code>point-&gt;setMarginalized(true);</code></strong>: <strong>非常重要！</strong> 这告诉 g2o 在求解线性方程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>x</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Hx = -b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal">b</span></span></span></span> 时，可以将这些点顶点对应的变量<strong>边缘化 (Marginalize Out)</strong>。这利用了 BA 问题的特殊结构（点只与少数位姿相关），通过 <strong>Schur 消元 (Schur Complement)</strong> 技巧，可以大大减小求解的线性系统的规模（只需求解与位姿相关的部分），从而显著提高效率。</li><li>添加到优化器 <code>optimizer.addVertex()</code>。</li></ol></li><li><strong>添加相机参数:</strong><ol><li>从内参矩阵 <code>K</code> 提取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>c</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">f_x, c_x, c_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>创建 <code>CameraParameters</code> 对象。</li><li>设置 ID (例如 0)。</li><li>添加到优化器 <code>optimizer.addParameter()</code>。</li></ol></li><li><strong>添加边:</strong><ol><li>遍历输入的 <code>points_2d</code> (需要与 <code>points_3d</code> 一一对应)。</li><li>为每个观测创建一个 <code>EdgeProjectXYZ2UV</code> 对象。</li><li>设置<strong>唯一</strong>的 ID (例如从 1 开始递增，与点 ID 对应)。</li><li><strong>连接顶点:</strong><ul><li><code>edge-&gt;setVertex(0, ...)</code> 连接到对应的<strong>点顶点</strong>。注意代码中使用了 <code>optimizer.vertex(index)</code> 通过 ID 获取顶点指针，并用 <code>dynamic_cast</code> 转换类型。</li><li><code>edge-&gt;setVertex(1, pose)</code> 连接到<strong>位姿顶点</strong>。</li></ul></li><li><strong>设置测量值:</strong> <code>edge-&gt;setMeasurement(Eigen::Vector2d(p.x, p.y))</code>，传入观测到的像素坐标。</li><li><strong>关联参数:</strong> <code>edge-&gt;setParameterId(0, 0)</code>。第一个 0 表示这是第 0 个参数集（CameraParameters），第二个 0 是该参数在优化器中的 ID。</li><li><strong>设置信息矩阵:</strong> <code>edge-&gt;setInformation(Eigen::Matrix2d::Identity())</code>。这里简单地使用了单位矩阵，表示假设所有像素观测的噪声是各向同性的，且方差为 1。在实际应用中，可以根据像素噪声的估计来设置更精确的信息矩阵（例如，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><msup><mi>σ</mi><mn>2</mn></msup></mfrac><mi mathvariant="bold">I</mi></mrow><annotation encoding="application/x-tex">\frac{1}{\sigma^2} \mathbf{I}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathbf">I</span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> 是像素噪声标准差）。</li><li>添加到优化器 <code>optimizer.addEdge()</code>。</li></ol></li></ul></li></ul><p><strong>3.6 执行优化</strong></p><ul><li>调用 <code>optimizer.initializeOptimization()</code>。</li><li>调用 <code>optimizer.optimize(num_iterations)</code>。</li></ul><p><strong>3.7 获取结果</strong></p><ul><li>优化完成后，位姿顶点 <code>pose</code> 内部的 <code>_estimate</code> 已经被更新。</li><li>通过 <code>pose-&gt;estimate()</code> 获取优化后的 <code>g2o::SE3Quat</code>，可以将其转换回旋转矩阵 <code>R</code> 和平移向量 <code>t</code> (代码中直接输出了 <code>Isometry3d</code> 形式的变换矩阵)。</li><li>如果需要，也可以遍历所有点顶点，获取优化后的三维点坐标。</li></ul><h3 id="4-准备工作"><a class="markdownIt-Anchor" href="#4-准备工作"></a> 4. 准备工作</h3><ul><li><strong>包含头文件:</strong> g2o 核心库、顶点类型 (<code>VertexSE3Expmap</code>, <code>VertexPointXYZ</code>)、边类型 (<code>EdgeProjectXYZ2UV</code>)、参数类型 (<code>CameraParameters</code>)、求解器、算法、Eigen 等。</li><li><strong>准备输入数据:</strong><ul><li><code>std::vector&lt;cv::Point3f&gt; points_3d</code>: 三维点坐标。</li><li><code>std::vector&lt;cv::Point2f&gt; points_2d</code>: 对应的二维观测点坐标。</li><li><code>cv::Mat K</code>: 相机内参矩阵。</li><li><code>cv::Mat R</code>, <code>cv::Mat t</code>: 相机位姿的初始估计。</li></ul></li><li><strong>数据类型转换:</strong> 需要将 OpenCV 的 <code>cv::Mat</code> (R, t) 和 <code>cv::Point</code> 转换为 g2o/Eigen 使用的 <code>Eigen::Matrix3d</code>, <code>Eigen::Vector3d</code>, <code>Eigen::Vector2d</code> 等。</li></ul><h3 id="5-完整示例代码-带注释"><a class="markdownIt-Anchor" href="#5-完整示例代码-带注释"></a> 5. 完整示例代码 (带注释)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Eigen 核心库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Eigen/Core&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Eigen/Geometry&gt;</span> <span class="comment">// 用于 Isometry3d 等</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// g2o 核心库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/sparse_optimizer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/block_solver.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/optimization_algorithm_levenberg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/base_vertex.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/base_binary_edge.h&gt;</span> <span class="comment">// 二元边基类</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// g2o 线性求解器</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/solvers/csparse/linear_solver_csparse.h&gt;</span> <span class="comment">// CSparse 稀疏求解器</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// g2o 类型定义 (常用的顶点和边)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/types/sba/types_sba.h&gt;</span> <span class="comment">// 包含 VertexSE3Expmap, VertexPointXYZ, EdgeProjectXYZ2UV, CameraParameters 等</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/types/slam3d/se3quat.h&gt;</span> <span class="comment">// SE3Quat 定义</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// OpenCV (用于数据结构 Point3f, Point2f, Mat)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/core/core.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> g2o;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 使用 g2o 进行 Bundle Adjustment (优化单个相机位姿和多个 3D 点)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param points_3d 输入的三维点坐标 (世界坐标系)</span></span><br><span class="line"><span class="comment"> * @param points_2d 对应的二维像素观测坐标</span></span><br><span class="line"><span class="comment"> * @param K         相机内参矩阵 (3x3)</span></span><br><span class="line"><span class="comment"> * @param R         相机旋转矩阵的初始估计 (3x3)</span></span><br><span class="line"><span class="comment"> * @param t         相机平移向量的初始估计 (3x1)</span></span><br><span class="line"><span class="comment"> * @note            函数会直接修改输入的 R 和 t 为优化后的结果 (虽然本示例代码没有显式传回，而是打印)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bundleAdjustment</span><span class="params">(<span class="type">const</span> std::vector&lt;cv::Point3f&gt; points_3d,</span></span></span><br><span class="line"><span class="params"><span class="function">                      <span class="type">const</span> std::vector&lt;cv::Point2f&gt; points_2d,</span></span></span><br><span class="line"><span class="params"><span class="function">                      <span class="type">const</span> cv::Mat &amp;K, cv::Mat &amp;R, cv::Mat &amp;t)</span> </span>&#123; <span class="comment">// R, t 是引用，理论上可以修改后传出</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 1. 配置 g2o 优化器 ---</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Configuring g2o...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 定义块求解器类型: BlockSolver&lt; BlockSolverTraits&lt;PoseDim, LandmarkDim&gt; &gt;</span></span><br><span class="line">    <span class="comment">// PoseDim=6 (SE3), LandmarkDim=3 (XYZ)</span></span><br><span class="line">    <span class="keyword">typedef</span> BlockSolver&lt;BlockSolverTraits&lt;<span class="number">6</span>, <span class="number">3</span>&gt;&gt; BlockSolverType;</span><br><span class="line">    <span class="comment">// 定义线性求解器类型: 使用 CSparse 处理稀疏矩阵</span></span><br><span class="line">    <span class="keyword">typedef</span> LinearSolverCSparse&lt;BlockSolverType::PoseMatrixType&gt; LinearSolverType;</span><br><span class="line">    <span class="comment">// 创建线性求解器</span></span><br><span class="line">    <span class="keyword">auto</span> linearSolver = std::<span class="built_in">make_unique</span>&lt;LinearSolverType&gt;();</span><br><span class="line">    <span class="comment">// 创建块求解器</span></span><br><span class="line">    <span class="keyword">auto</span> blockSolver = std::<span class="built_in">make_unique</span>&lt;BlockSolverType&gt;(std::<span class="built_in">move</span>(linearSolver));</span><br><span class="line">    <span class="comment">// 创建优化算法: Levenberg-Marquardt</span></span><br><span class="line">    OptimizationAlgorithmLevenberg *algorithm = <span class="keyword">new</span> <span class="built_in">OptimizationAlgorithmLevenberg</span>(std::<span class="built_in">move</span>(blockSolver));</span><br><span class="line">    <span class="comment">// 创建稀疏优化器 (图模型)</span></span><br><span class="line">    SparseOptimizer optimizer;</span><br><span class="line">    <span class="comment">// 设置优化算法</span></span><br><span class="line">    optimizer.<span class="built_in">setAlgorithm</span>(algorithm);</span><br><span class="line">    <span class="comment">// 启用详细输出</span></span><br><span class="line">    optimizer.<span class="built_in">setVerbose</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 2. 添加顶点 ---</span></span><br><span class="line">    <span class="comment">// a. 添加相机位姿顶点 (VertexSE3Expmap)</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Adding pose vertex...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    VertexSE3Expmap *pose_vertex = <span class="keyword">new</span> <span class="built_in">VertexSE3Expmap</span>();</span><br><span class="line">    pose_vertex-&gt;<span class="built_in">setId</span>(<span class="number">0</span>); <span class="comment">// 顶点 ID 设为 0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将输入的 R, t (cv::Mat) 转换为 g2o::SE3Quat 用于设置初始估计</span></span><br><span class="line">    Eigen::Matrix3d R_mat;</span><br><span class="line">    R_mat &lt;&lt; R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">0</span>), R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">1</span>), R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">2</span>),</span><br><span class="line">             R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">0</span>), R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">1</span>), R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">2</span>),</span><br><span class="line">             R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>, <span class="number">0</span>), R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>, <span class="number">1</span>), R.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="function">Eigen::Vector3d <span class="title">t_vec</span><span class="params">(t.at&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">0</span>), t.at&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">0</span>), t.at&lt;<span class="type">double</span>&gt;(<span class="number">2</span>, <span class="number">0</span>))</span></span>;</span><br><span class="line">    pose_vertex-&gt;<span class="built_in">setEstimate</span>(<span class="built_in">SE3Quat</span>(R_mat, t_vec)); <span class="comment">// 设置初始位姿估计</span></span><br><span class="line">    optimizer.<span class="built_in">addVertex</span>(pose_vertex); <span class="comment">// 添加到优化器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// b. 添加三维点顶点 (VertexPointXYZ)</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Adding &quot;</span> &lt;&lt; points_3d.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; point vertices...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> point_index = <span class="number">1</span>; <span class="comment">// 点顶点的 ID 从 1 开始</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> cv::Point3f p : points_3d) &#123;</span><br><span class="line">        VertexPointXYZ *point_vertex = <span class="keyword">new</span> <span class="built_in">VertexPointXYZ</span>();</span><br><span class="line">        point_vertex-&gt;<span class="built_in">setId</span>(point_index++); <span class="comment">// 设置唯一 ID</span></span><br><span class="line">        point_vertex-&gt;<span class="built_in">setEstimate</span>(Eigen::<span class="built_in">Vector3d</span>(p.x, p.y, p.z)); <span class="comment">// 设置初始坐标估计</span></span><br><span class="line">        <span class="comment">// **关键：边缘化点**。告诉优化器在求解时使用 Schur 消元，提高效率</span></span><br><span class="line">        point_vertex-&gt;<span class="built_in">setMarginalized</span>(<span class="literal">true</span>);</span><br><span class="line">        optimizer.<span class="built_in">addVertex</span>(point_vertex); <span class="comment">// 添加到优化器</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 3. 添加相机参数 ---</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Adding camera parameters...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 从内参矩阵 K 提取焦距 fx 和主点 cx, cy</span></span><br><span class="line">    <span class="type">double</span> fx = K.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="type">double</span> cx = K.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="type">double</span> cy = K.<span class="built_in">at</span>&lt;<span class="type">double</span>&gt;(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 创建 CameraParameters 对象 (假设 fy=fx, baseline=0)</span></span><br><span class="line">    CameraParameters *camera = <span class="keyword">new</span> <span class="built_in">CameraParameters</span>(fx, Eigen::<span class="built_in">Vector2d</span>(cx, cy), <span class="number">0</span>);</span><br><span class="line">    camera-&gt;<span class="built_in">setId</span>(<span class="number">0</span>); <span class="comment">// 参数 ID 设为 0</span></span><br><span class="line">    optimizer.<span class="built_in">addParameter</span>(camera); <span class="comment">// 添加到优化器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 4. 添加边 (重投影误差) ---</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Adding &quot;</span> &lt;&lt; points_2d.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; edges...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="type">int</span> edge_index = <span class="number">1</span>; <span class="comment">// 边的 ID 也从 1 开始 (可以与点 ID 对应)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">const</span> cv::Point2f p : points_2d) &#123;</span><br><span class="line">        EdgeProjectXYZ2UV *edge = <span class="keyword">new</span> <span class="built_in">EdgeProjectXYZ2UV</span>();</span><br><span class="line">        edge-&gt;<span class="built_in">setId</span>(edge_index); <span class="comment">// 设置唯一 ID</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// **连接顶点:**</span></span><br><span class="line">        <span class="comment">// 边需要连接两个顶点：点顶点 (索引 0) 和位姿顶点 (索引 1)</span></span><br><span class="line">        <span class="comment">// 通过 ID 在优化器中查找对应的点顶点指针</span></span><br><span class="line">        Vertex *point_v = optimizer.<span class="built_in">vertex</span>(edge_index); <span class="comment">// 假设边的 ID 与其对应的点顶点 ID 相同</span></span><br><span class="line">        <span class="keyword">if</span> (!point_v) &#123;</span><br><span class="line">             cerr &lt;&lt; <span class="string">&quot;Error: Point vertex with ID &quot;</span> &lt;&lt; edge_index &lt;&lt; <span class="string">&quot; not found!&quot;</span> &lt;&lt; endl;</span><br><span class="line">             <span class="keyword">continue</span>; <span class="comment">// 或者进行错误处理</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使用 dynamic_cast 进行类型安全的转换</span></span><br><span class="line">        edge-&gt;<span class="built_in">setVertex</span>(<span class="number">0</span>, <span class="built_in">dynamic_cast</span>&lt;VertexPointXYZ *&gt;(point_v));</span><br><span class="line">        edge-&gt;<span class="built_in">setVertex</span>(<span class="number">1</span>, pose_vertex); <span class="comment">// 连接到位姿顶点</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// **设置测量值:** 观测到的像素坐标 (u, v)</span></span><br><span class="line">        edge-&gt;<span class="built_in">setMeasurement</span>(Eigen::<span class="built_in">Vector2d</span>(p.x, p.y));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// **关联相机参数:**</span></span><br><span class="line">        <span class="comment">// 第一个 0: 表示这是第 0 组参数 (CameraParameters)</span></span><br><span class="line">        <span class="comment">// 第二个 0: 表示这组参数在优化器中的 ID 是 0</span></span><br><span class="line">        edge-&gt;<span class="built_in">setParameterId</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// **设置信息矩阵:** 协方差矩阵的逆，表示测量的不确定性</span></span><br><span class="line">        <span class="comment">// 这里用单位矩阵，表示假设像素噪声是各向同性且方差为 1</span></span><br><span class="line">        edge-&gt;<span class="built_in">setInformation</span>(Eigen::Matrix2d::<span class="built_in">Identity</span>());</span><br><span class="line"></span><br><span class="line">        optimizer.<span class="built_in">addEdge</span>(edge); <span class="comment">// 添加到优化器</span></span><br><span class="line">        edge_index++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 5. 执行优化 ---</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Starting optimization...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    optimizer.<span class="built_in">initializeOptimization</span>(); <span class="comment">// 初始化</span></span><br><span class="line">    optimizer.<span class="built_in">optimize</span>(<span class="number">10</span>);            <span class="comment">// 执行优化，这里只迭代 10 次作为示例</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 6. 获取/输出结果 ---</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Optimization finished.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 从位姿顶点获取优化后的估计值 (SE3Quat 类型)</span></span><br><span class="line">    SE3Quat optimized_pose = pose_vertex-&gt;<span class="built_in">estimate</span>();</span><br><span class="line">    <span class="comment">// 将优化后的位姿转换为 Eigen::Isometry3d (方便表示为 4x4 变换矩阵)</span></span><br><span class="line">    <span class="function">Eigen::Isometry3d <span class="title">optimized_T</span><span class="params">(optimized_pose)</span></span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Optimized Transformation Matrix (T_world_camera): &quot;</span> &lt;&lt; endl &lt;&lt; optimized_T.<span class="built_in">matrix</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果需要，可以将 optimized_T 分解回 R 和 t 并更新输入的 cv::Mat</span></span><br><span class="line">    <span class="comment">// Eigen::Matrix3d optimized_R = optimized_T.rotation();</span></span><br><span class="line">    <span class="comment">// Eigen::Vector3d optimized_t = optimized_T.translation();</span></span><br><span class="line">    <span class="comment">// ... (代码将 Eigen 矩阵/向量写回 cv::Mat R, t) ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注意：本示例没有显式清理 new 出来的顶点、边、参数和算法对象。</span></span><br><span class="line">    <span class="comment">// 在实际应用中，如果优化器析构时没有自动管理这些资源，可能需要手动 delete。</span></span><br><span class="line">    <span class="comment">// 但通常 g2o 的 SparseOptimizer 会接管所有权。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// --- 示例调用 (需要补充完整) ---</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int main() &#123;</span></span><br><span class="line"><span class="comment">    // 1. 准备 points_3d, points_2d, K, R_initial, t_initial 数据</span></span><br><span class="line"><span class="comment">    std::vector&lt;cv::Point3f&gt; points_3d = &#123; ... &#125;;</span></span><br><span class="line"><span class="comment">    std::vector&lt;cv::Point2f&gt; points_2d = &#123; ... &#125;;</span></span><br><span class="line"><span class="comment">    cv::Mat K = (cv::Mat_&lt;double&gt;(3, 3) &lt;&lt; fx, 0, cx, 0, fy, cy, 0, 0, 1);</span></span><br><span class="line"><span class="comment">    cv::Mat R_initial = ...; // 初始旋转</span></span><br><span class="line"><span class="comment">    cv::Mat t_initial = ...; // 初始平移</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    // 2. 调用 BA 函数</span></span><br><span class="line"><span class="comment">    bundleAdjustment(points_3d, points_2d, K, R_initial, t_initial);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    // 3. (可选) 使用优化后的 R_initial, t_initial</span></span><br><span class="line"><span class="comment">    // 注意：上面的函数示例仅打印结果，未修改 R_initial, t_initial</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—g2o库—曲线拟合</title>
      <link href="/2025/04/28/c8/"/>
      <url>/2025/04/28/c8/</url>
      
        <content type="html"><![CDATA[<h3 id="1-问题描述"><a class="markdownIt-Anchor" href="#1-问题描述"></a> 1. 问题描述</h3><p>我们有一系列二维数据点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，我们相信这些数据点是由一个指数模型生成的，具体形式为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = \exp(ax^2 + bx + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p><p>然而，我们的观测值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 包含噪声。我们的目标是：根据这些带有噪声的观测数据 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<strong>估计出最可能生成这些数据的模型参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 的值</strong>。</p><p>这本质上是一个优化问题：寻找一组参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>，使得模型预测值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>+</mo><mi>b</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\exp(ax_i^2 + bx_i + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 与实际观测值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 之间的总误差最小（通常是最小化误差的平方和）。</p><h3 id="2-思考如何用图优化解决"><a class="markdownIt-Anchor" href="#2-思考如何用图优化解决"></a> 2. 思考：如何用图优化解决？</h3><p>我们要将这个问题&quot;翻译&quot;成 g2o 的语言——图。一个图由 <strong>顶点 (Vertices)</strong> 和 <strong>边 (Edges)</strong> 组成。</p><ul><li><p><strong>顶点 (Vertex) 代表什么？</strong></p><ul><li>顶点代表了我们要优化的 <strong>未知变量</strong>。</li><li>在这个问题中，未知变量就是曲线的参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>。这三个参数需要一起被估计，它们共同构成了一个状态。</li><li><strong>因此，我们将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 定义为一个 g2o 顶点。</strong></li></ul></li><li><p><strong>边 (Edge) 代表什么？</strong></p><ul><li>边代表了变量之间的 <strong>约束</strong> 或者 <strong>测量带来的误差项</strong>。</li><li>我们拥有的信息是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span> 个数据点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。每一个数据点都提供了一个约束：对于给定的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，由当前估计的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 计算出的预测值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>+</mo><mi>b</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\exp(ax_i^2 + bx_i + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 应该接近观测值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li><strong>因此，每一个数据点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 都对应图中的一条边。</strong> 这条边衡量了模型预测值与实际测量值之间的误差（残差）。</li></ul></li><li><p><strong>顶点和边如何连接？</strong></p><ul><li>计算第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 个数据点的误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>+</mo><mi>b</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e_i = y_i - \exp(ax_i^2 + bx_i + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 时，我们只需要用到参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> （也就是那个唯一的顶点）和对应的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 值。</li><li>这意味着每条边 <strong>只连接到我们定义的那个参数顶点上</strong>。</li><li><strong>因此，这些边都是一元边 (Unary Edge)。</strong></li></ul></li></ul><p><strong>总结思路：</strong> 我们将创建一个包含 <strong>一个顶点</strong> (代表参数 a, b, c) 和 <strong>N 条一元边</strong> (每条边代表一个数据点 (x, y) 带来的约束/误差) 的图。然后，让 g2o 优化这个图，调整顶点的值 (a, b, c)，使得所有边的误差平方和（考虑信息矩阵加权）最小。</p><h3 id="3-g2o-实现步骤"><a class="markdownIt-Anchor" href="#3-g2o-实现步骤"></a> 3. g2o 实现步骤</h3><p>根据上面的思考，我们需要在 g2o 中完成以下步骤：</p><p><strong>3.1 定义顶点 (<code>CurveFittingVertex</code>)</strong></p><ul><li><strong>目的:</strong> 表示待优化的参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>。</li><li><strong>实现:</strong><ul><li>继承 <code>g2o::BaseVertex&lt;D, T&gt;</code>。</li><li><code>D</code> (维度): 参数有 a, b, c 三个，所以维度是 <strong>3</strong>。</li><li><code>T</code> (类型): 用 Eigen 的三维向量 <code>Eigen::Vector3d</code> 来存储 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>。</li><li>所以继承 <code>g2o::BaseVertex&lt;3, Eigen::Vector3d&gt;</code>。</li><li><strong>重写 <code>setToOriginImpl()</code>:</strong> 设置顶点的初始估计值。通常设为 (0, 0, 0)。</li><li><strong>重写 <code>oplusImpl()</code>:</strong> 定义如何将优化算法计算出的增量 <code>update</code> (一个包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>a</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>b</mi><mo separator="true">,</mo><mi mathvariant="normal">Δ</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">\Delta a, \Delta b, \Delta c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">Δ</span><span class="mord mathnormal">c</span></span></span></span> 的 3 维向量) 应用到当前估计值 <code>_estimate</code> 上。对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 这种简单的向量空间变量，直接做向量加法 <code>_estimate += update</code> 即可。</li><li><code>read</code>/<code>write</code> 函数在此例中可以留空。</li></ul></li></ul><p><strong>3.2 定义边 (<code>CurveFittingEdge</code>)</strong></p><ul><li><strong>目的:</strong> 表示每个数据点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 带来的约束，并计算其误差。</li><li><strong>实现:</strong><ul><li>继承 <code>g2o::BaseUnaryEdge&lt;D, E, VertexType&gt;</code> (因为只连接一个顶点)。</li><li><code>D</code> (误差维度): 误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>…</mo><mtext> </mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e_i = y_i - \exp(\dots)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span></span></span></span> 是一个标量，所以维度是 <strong>1</strong>。</li><li><code>E</code> (测量值类型): 测量值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是一个 <code>double</code> 类型。</li><li><code>VertexType</code>: 这条边连接的顶点类型是 <code>CurveFittingVertex</code>。</li><li>所以继承 <code>g2o::BaseUnaryEdge&lt;1, double, CurveFittingVertex&gt;</code>。</li><li><strong>构造函数:</strong> 计算误差时需要用到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，但 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 不是待优化变量，也不是全局参数。它只与这条特定的边（这个特定的数据点）相关。因此，在创建边对象时，需要将对应的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 传入并存储在边对象的成员变量 (如 <code>_x</code>) 中。</li><li><strong>重写 <code>computeError()</code>:</strong> 这是 <strong>边的核心</strong>。在此函数中：<ol><li>获取所连接的顶点 (<code>_vertices[0]</code>)。</li><li>获取顶点当前的估计值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>vertex</mtext><mo>−</mo><mo>&gt;</mo><mtext>estimate</mtext><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c) = \text{vertex}-&gt;\text{estimate}()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">vertex</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">estimate</span></span><span class="mopen">(</span><span class="mclose">)</span></span></span></span>。</li><li>使用存储的 <code>_x</code> 和当前的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 计算预测值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msup><mtext mathvariant="italic">x</mtext><mn>2</mn></msup><mo>+</mo><mi>b</mi><mtext mathvariant="italic">x</mtext><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_{pred} = \exp(a\textit{x}^2 + b\textit{x} + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord text"><span class="mord textit">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mord text"><span class="mord textit">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>。</li><li>计算误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>=</mo><mtext>_measurement</mtext><mo>−</mo><msub><mi>y</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">e = \text{\_measurement} - y_{pred}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9250799999999999em;vertical-align:-0.31em;"></span><span class="mord text"><span class="mord">_measurement</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，并将结果赋给 <code>_error(0,0)</code>。（<code>_measurement</code> 存储的是观测值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，通过 <code>setMeasurement()</code> 设置）。</li></ol></li><li><strong><code>linearizeOplus()</code> (雅可比计算):</strong> 这个例子中 <strong>没有重写</strong> 这个函数。这意味着 g2o 会默认使用 <strong>自动求导</strong> 来计算误差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span></span></span></span> 对参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">a, b, c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span> 的偏导数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>e</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>e</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>e</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>c</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\frac{\partial e}{\partial a}, \frac{\partial e}{\partial b}, \frac{\partial e}{\partial c})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>。对于简单问题，自动求导很方便；对于性能要求高的复杂问题，通常需要手动计算并重写此函数。</li><li><code>read</code>/<code>write</code> 函数在此例中可以留空。</li></ul></li></ul><p><strong>3.3 配置优化器</strong></p><ul><li><strong>目的:</strong> 告诉 g2o 如何求解这个优化问题。</li><li><strong>实现:</strong><ul><li><strong>选择求解器类型:</strong><ul><li><code>BlockSolver</code>: 定义了优化变量（顶点）和误差（边）的维度。这里是 <code>BlockSolverTraits&lt;3, 1&gt;</code> (顶点维度 3, 边维度 1)。</li><li><code>LinearSolver</code>: 定义了如何求解线性方程组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mi>x</mi><mo>=</mo><mo>−</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">Hx = -b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal">b</span></span></span></span>。对于规模不大的问题，可以用 <code>LinearSolverDense</code>；对于规模较大、稀疏性较好的问题（如 SLAM），常用 <code>LinearSolverCSparse</code> 或 <code>LinearSolverCholmod</code>。本例用了 <code>LinearSolverCSparse</code>。</li></ul></li><li><strong>选择优化算法:</strong><ul><li>常用的有 <code>OptimizationAlgorithmLevenberg</code> (LM 算法，鲁棒性好)、<code>OptimizationAlgorithmGaussNewton</code> (高斯牛顿法)、<code>OptimizationAlgorithmDogleg</code>。本例用了 LM 算法。</li></ul></li><li><strong>创建 <code>SparseOptimizer</code> 对象:</strong> 这是整个图优化的管理器。</li><li><strong>设置:</strong> 将选择的优化算法设置给 <code>SparseOptimizer</code>，可以设置 <code>setVerbose(true)</code> 来打印优化过程信息。</li></ul></li></ul><p><strong>3.4 构建图</strong></p><ul><li><strong>目的:</strong> 将具体的顶点和边添加到优化器中。</li><li><strong>实现:</strong><ul><li><strong>添加顶点:</strong><ol><li>创建 <code>CurveFittingVertex</code> 对象。</li><li>设置其初始估计值 (<code>setEstimate</code>)，例如 <code>(0, 0, 0)</code>。</li><li>设置其唯一 ID (<code>setId</code>)。</li><li>调用 <code>optimizer.addVertex()</code> 将其添加到图中。</li></ol></li><li><strong>添加边:</strong><ol><li>遍历所有数据点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li><li>为每个数据点创建一个 <code>CurveFittingEdge</code> 对象，传入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li><li>设置其唯一 ID (<code>setId</code>)。</li><li><strong>连接到顶点:</strong> 调用 <code>edge-&gt;setVertex(0, vertex_pointer)</code>，将边的第 0 个接口连接到之前创建的顶点。</li><li><strong>设置测量值:</strong> 调用 <code>edge-&gt;setMeasurement(y_i)</code>。</li><li><strong>设置信息矩阵:</strong> 调用 <code>edge-&gt;setInformation(...)</code>。信息矩阵是测量噪声协方差矩阵的逆，代表了这条边的权重。如果假设噪声是高斯分布，标准差为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>，那么对于一维误差，信息矩阵就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1/\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。这告诉优化器：噪声越小（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> 越小，信息矩阵越大），这个测量值就越可信，优化时应该更努力地满足这个约束。</li><li>调用 <code>optimizer.addEdge()</code> 将边添加到图中。</li></ol></li></ul></li></ul><p><strong>3.5 执行优化</strong></p><ul><li><strong>目的:</strong> 启动 g2o 的优化过程。</li><li><strong>实现:</strong><ul><li>调用 <code>optimizer.initializeOptimization()</code> 进行初始化。</li><li>调用 <code>optimizer.optimize(max_iterations)</code> 开始迭代优化，指定最大迭代次数。</li></ul></li></ul><p><strong>3.6 获取结果</strong></p><ul><li><strong>目的:</strong> 从优化后的图中提取最终的参数估计值。</li><li><strong>实现:</strong><ul><li>优化完成后，顶点对象内部的 <code>_estimate</code> 成员变量已经被更新为最优值。</li><li>直接调用 <code>vertex-&gt;estimate()</code> 即可获取优化后的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>。</li></ul></li></ul><h3 id="4-准备工作"><a class="markdownIt-Anchor" href="#4-准备工作"></a> 4. 准备工作</h3><p>在编写 g2o 代码之前，需要：</p><ul><li><strong>包含头文件:</strong> 包含 g2o 核心库、求解器、算法以及 Eigen 库等必要的头文件。</li><li><strong>准备数据:</strong> 生成或加载用于拟合的数据点 <code>x_data</code> 和 <code>y_data</code>。例子中是程序内部生成的带高斯噪声的数据。</li><li><strong>定义参数:</strong> 确定噪声标准差 <code>w_sigma</code> (用于生成数据和设置信息矩阵)，数据点数量 <code>N</code> 等。</li></ul><h3 id="5-完整示例代码"><a class="markdownIt-Anchor" href="#5-完整示例代码"></a> 5. 完整示例代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Eigen 核心部分</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Eigen/Core&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// g2o 核心库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/base_vertex.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/base_unary_edge.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/block_solver.h&gt;</span> <span class="comment">// 块求解器</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/sparse_optimizer.h&gt;</span> <span class="comment">// 优化器主类</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// g2o 优化算法</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/optimization_algorithm_levenberg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/optimization_algorithm_gauss_newton.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/core/optimization_algorithm_dogleg.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// g2o 线性求解器</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/solvers/dense/linear_solver_dense.h&gt;</span> <span class="comment">// 稠密求解器</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;g2o/solvers/csparse/linear_solver_csparse.h&gt;</span> <span class="comment">// CSparse 稀疏求解器</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// OpenCV (仅用于随机数生成)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/core/core.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> g2o;</span><br><span class="line"></span><br><span class="line"><span class="comment">// --- 1. 定义顶点：表示待优化参数 (a, b, c) ---</span></span><br><span class="line"><span class="comment">// 模板参数：优化变量维度 D=3, 数据类型 T=Eigen::Vector3d</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CurveFittingVertex</span> : <span class="keyword">public</span> BaseVertex&lt;<span class="number">3</span>, Eigen::Vector3d&gt; &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    EIGEN_MAKE_ALIGNED_OPERATOR_NEW <span class="comment">// Eigen 内存对齐</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">CurveFittingVertex</span>() &#123;&#125; <span class="comment">// 构造函数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重置函数：设置初始估计值</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">setToOriginImpl</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">        _estimate &lt;&lt; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>; <span class="comment">// 初始猜测 a=0, b=0, c=0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增量更新函数：如何应用优化增量</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">oplusImpl</span><span class="params">(<span class="type">const</span> <span class="type">double</span> *update)</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">        _estimate += Eigen::<span class="built_in">Vector3d</span>(update); <span class="comment">// 直接向量加法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读写函数 (本例中可以忽略)</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">read</span><span class="params">(istream &amp;in)</span> <span class="keyword">override</span> </span>&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">write</span><span class="params">(ostream &amp;out)</span> <span class="type">const</span> <span class="keyword">override</span> </span>&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// --- 2. 定义边：表示每个数据点的约束和误差 ---</span></span><br><span class="line"><span class="comment">// 模板参数：误差维度 D=1, 测量值类型 E=double, 连接的顶点类型 CurveFittingVertex</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CurveFittingEdge</span> : <span class="keyword">public</span> BaseUnaryEdge&lt;<span class="number">1</span>, <span class="type">double</span>, CurveFittingVertex&gt; &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    EIGEN_MAKE_ALIGNED_OPERATOR_NEW</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数：传入该数据点对应的 x 值</span></span><br><span class="line">    <span class="built_in">CurveFittingEdge</span>(<span class="type">double</span> x) : <span class="built_in">BaseUnaryEdge</span>(), _x(x) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算误差函数：核心部分</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">computeError</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取连接的顶点 (强制类型转换)</span></span><br><span class="line">        <span class="type">const</span> CurveFittingVertex *v = <span class="built_in">static_cast</span>&lt;<span class="type">const</span> CurveFittingVertex *&gt;(_vertices[<span class="number">0</span>]);</span><br><span class="line">        <span class="comment">// 获取顶点当前的估计值 (a, b, c)</span></span><br><span class="line">        <span class="type">const</span> Eigen::Vector3d abc = v-&gt;<span class="built_in">estimate</span>();</span><br><span class="line">        <span class="comment">// 计算模型预测值 y_pred = exp(a*x^2 + b*x + c)</span></span><br><span class="line">        <span class="type">const</span> <span class="type">double</span> prediction = std::<span class="built_in">exp</span>(<span class="built_in">abc</span>(<span class="number">0</span>, <span class="number">0</span>) * _x * _x + <span class="built_in">abc</span>(<span class="number">1</span>, <span class="number">0</span>) * _x + <span class="built_in">abc</span>(<span class="number">2</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="comment">// 计算误差 error = measurement - prediction</span></span><br><span class="line">        <span class="comment">// _measurement 是基类成员，存储观测值 y_i</span></span><br><span class="line">        <span class="comment">// _error 是基类成员 (1x1 矩阵)，存储计算结果</span></span><br><span class="line">        _error(<span class="number">0</span>, <span class="number">0</span>) = _measurement - prediction;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 线性化函数 (雅可比计算)</span></span><br><span class="line">    <span class="comment">// 本例中未实现，g2o 将使用自动求导</span></span><br><span class="line">    <span class="comment">// virtual void linearizeOplus() override &#123; ... &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读写函数 (本例中可以忽略)</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">read</span><span class="params">(istream &amp;in)</span> <span class="keyword">override</span> </span>&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">write</span><span class="params">(ostream &amp;out)</span> <span class="type">const</span> <span class="keyword">override</span> </span>&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">double</span> _x; <span class="comment">// 存储该边对应的数据点的 x 值</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// --- 数据准备 ---</span></span><br><span class="line">    <span class="type">double</span> real_a = <span class="number">1.0</span>, real_b = <span class="number">2.0</span>, real_c = <span class="number">1.0</span>; <span class="comment">// 真实参数</span></span><br><span class="line">    <span class="type">int</span> N = <span class="number">100</span>;                                     <span class="comment">// 数据点数量</span></span><br><span class="line">    <span class="type">double</span> w_sigma = <span class="number">1.0</span>;                            <span class="comment">// 噪声标准差</span></span><br><span class="line">    cv::RNG rng;                                     <span class="comment">// OpenCV 随机数生成器</span></span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">double</span>&gt; x_data, y_data; <span class="comment">// 存储数据</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Generating data...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="type">double</span> x = i / <span class="number">100.0</span>;</span><br><span class="line">        x_data.<span class="built_in">push_back</span>(x);</span><br><span class="line">        y_data.<span class="built_in">push_back</span>(<span class="built_in">exp</span>(real_a * x * x + real_b * x + real_c) + rng.<span class="built_in">gaussian</span>(w_sigma));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- g2o 配置 ---</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Configuring g2o...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="comment">// 1. 定义块求解器类型 BlockSolver&lt; BlockSolverTraits&lt;顶点维度, 边维度&gt; &gt;</span></span><br><span class="line">    <span class="keyword">typedef</span> BlockSolver&lt;BlockSolverTraits&lt;<span class="number">3</span>, <span class="number">1</span>&gt;&gt; BlockSolverType;</span><br><span class="line">    <span class="comment">// 2. 定义线性求解器类型</span></span><br><span class="line">    <span class="keyword">typedef</span> LinearSolverCSparse&lt;BlockSolverType::PoseMatrixType&gt; LinearSolverType;</span><br><span class="line">    <span class="comment">// 3. 创建线性求解器 (使用智能指针管理)</span></span><br><span class="line">    <span class="keyword">auto</span> linearSolver = std::<span class="built_in">make_unique</span>&lt;LinearSolverType&gt;();</span><br><span class="line">    <span class="comment">// 4. 创建块求解器 (使用智能指针管理)</span></span><br><span class="line">    <span class="keyword">auto</span> blockSolver = std::<span class="built_in">make_unique</span>&lt;BlockSolverType&gt;(std::<span class="built_in">move</span>(linearSolver));</span><br><span class="line">    <span class="comment">// 5. 创建优化算法 (Levenberg-Marquardt)</span></span><br><span class="line">    OptimizationAlgorithmLevenberg *algorithm = <span class="keyword">new</span> <span class="built_in">OptimizationAlgorithmLevenberg</span>(std::<span class="built_in">move</span>(blockSolver));</span><br><span class="line">    <span class="comment">// 6. 创建稀疏优化器 (图模型)</span></span><br><span class="line">    SparseOptimizer optimizer;</span><br><span class="line">    <span class="comment">// 7. 设置优化算法</span></span><br><span class="line">    optimizer.<span class="built_in">setAlgorithm</span>(algorithm);</span><br><span class="line">    <span class="comment">// 8. 启用详细输出</span></span><br><span class="line">    optimizer.<span class="built_in">setVerbose</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 构建图 ---</span></span><br><span class="line">    <span class="comment">// 1. 添加顶点</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Adding vertex...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    CurveFittingVertex *vertex = <span class="keyword">new</span> <span class="built_in">CurveFittingVertex</span>();</span><br><span class="line">    vertex-&gt;<span class="built_in">setEstimate</span>(Eigen::<span class="built_in">Vector3d</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)); <span class="comment">// 设置初始值</span></span><br><span class="line">    vertex-&gt;<span class="built_in">setId</span>(<span class="number">0</span>);                             <span class="comment">// 设置 ID</span></span><br><span class="line">    optimizer.<span class="built_in">addVertex</span>(vertex);                  <span class="comment">// 添加到图中</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 添加边</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Adding &quot;</span> &lt;&lt; N &lt;&lt; <span class="string">&quot; edges...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        CurveFittingEdge *edge = <span class="keyword">new</span> <span class="built_in">CurveFittingEdge</span>(x_data[i]); <span class="comment">// 创建边，传入 x_i</span></span><br><span class="line">        edge-&gt;<span class="built_in">setId</span>(i);                                          <span class="comment">// 设置 ID</span></span><br><span class="line">        edge-&gt;<span class="built_in">setVertex</span>(<span class="number">0</span>, vertex);                              <span class="comment">// 连接到顶点</span></span><br><span class="line">        edge-&gt;<span class="built_in">setMeasurement</span>(y_data[i]);                         <span class="comment">// 设置测量值 y_i</span></span><br><span class="line">        <span class="comment">// 设置信息矩阵 (1x1)，值为 1 / sigma^2</span></span><br><span class="line">        edge-&gt;<span class="built_in">setInformation</span>(Eigen::Matrix&lt;<span class="type">double</span>, <span class="number">1</span>, <span class="number">1</span>&gt;::<span class="built_in">Identity</span>() * <span class="number">1</span> / (w_sigma * w_sigma));</span><br><span class="line">        optimizer.<span class="built_in">addEdge</span>(edge);                                 <span class="comment">// 添加到图中</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 执行优化 ---</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Starting optimization...&quot;</span> &lt;&lt; endl;</span><br><span class="line">    optimizer.<span class="built_in">initializeOptimization</span>(); <span class="comment">// 初始化</span></span><br><span class="line">    optimizer.<span class="built_in">optimize</span>(<span class="number">100</span>);            <span class="comment">// 执行优化，最多 100 次迭代</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 输出结果 ---</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Optimization finished.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    Eigen::Vector3d estimated_abc = vertex-&gt;<span class="built_in">estimate</span>(); <span class="comment">// 获取优化后的顶点估计值</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Estimated model parameters (a, b, c): &quot;</span> &lt;&lt; estimated_abc.<span class="built_in">transpose</span>() &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Real model parameters (a, b, c):      &quot;</span> &lt;&lt; real_a &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; real_b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; real_c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清理 (OptimizationAlgorithmLevenberg* algorithm 是 new 出来的，理论上应 delete，</span></span><br><span class="line">    <span class="comment">// 但 setAlgorithm 后 optimizer 会接管，通常不需要手动 delete)</span></span><br><span class="line">    <span class="comment">// delete algorithm; // 可能导致重复释放</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—Ceres库</title>
      <link href="/2025/04/27/c7/"/>
      <url>/2025/04/27/c7/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安装"><a class="markdownIt-Anchor" href="#1-安装"></a> 1. 安装</h2><p>略</p><h2 id="2-问题定义"><a class="markdownIt-Anchor" href="#2-问题定义"></a> 2. 问题定义</h2><p>以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mrow><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mrow><mi>b</mi><mi>x</mi></mrow><mo>+</mo><mi>c</mi></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">y = \exp \left( {a{x}^{2} + {bx} + c}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">c</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span> 为例</p><p>我们现在拥有一系列的观测值</p><table><thead><tr><th style="text-align:center">x</th><th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th><th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th><th style="text-align:center">…</th><th style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th></tr></thead><tbody><tr><td style="text-align:center">y</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">y_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:center">…</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">y_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td></tr></tbody></table><p>目标是用函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = \exp(ax^2 + bx + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 拟合这些数据点，确定参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span> 的最佳值</p><p>在迭代的某一步，假设我们有参数的当前估计值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">a_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>b</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">b_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">c_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>对于每个数据点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，我们可以计算模型预测值 ：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\hat{y}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mi>k</mi></msub><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>+</mo><msub><mi>b</mi><mi>k</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{y}_i = \exp(a_k x_i^2 + b_k x_i + c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>那么<strong>残差</strong>就是实际观测值与预测值的差</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mi>k</mi></msub><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>+</mo><msub><mi>b</mi><mi>k</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><msub><mi>c</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_i = y_i - \hat{y}_i = y_i - \exp(a_k x_i^2 + b_k x_i + c_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>我们不希望正负残差相互抵消，所以计算残差的平方，然后求和得到<strong>代价函数</strong>：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>r</mi><mi>i</mi><mn>2</mn></msubsup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">[</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>+</mo><mi>b</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(a, b, c) = \sum_{i=1}^{n} r_i^2 = \sum_{i=1}^{n} [y_i - \exp(a x_i^2 + b x_i + c)]^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.113818em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>最小二乘法的目标是找到参数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span> 的值，使得代价函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(a, b, c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span> 最小。即：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow></msub><mi>J</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi></mrow></msub><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">[</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>+</mo><mi>b</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\min_{a, b, c} J(a, b, c) = \min_{a, b, c} \sum_{i=1}^{n} [y_i - \exp(a x_i^2 + b x_i + c)]^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><h2 id="3-三种求解方式"><a class="markdownIt-Anchor" href="#3-三种求解方式"></a> 3. 三种求解方式</h2><h3 id="31-方法一解析求导"><a class="markdownIt-Anchor" href="#31-方法一解析求导"></a> 3.1 方法一：解析求导</h3><p>这种方法需要我们手动计算雅可比矩阵，并将其提供给 Ceres。</p><h3 id="311-计算雅可比矩阵"><a class="markdownIt-Anchor" href="#311-计算雅可比矩阵"></a> 3.1.1 计算雅可比矩阵</h3><p>我们有残差 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mi>y</mi><mo>−</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(a, b, c) = y - \exp(ax^2 + bx + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span><br />令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E = \exp(ax^2 + bx + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span><br />使用链式法则求偏导：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>r</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>E</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>E</mi><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>E</mi><mo>⋅</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\frac{\partial r}{\partial a} = - \frac{\partial E}{\partial a} = - E \cdot \frac{\partial (ax^2 + bx + c)}{\partial a} = - E \cdot x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.4539199999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">a</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">c</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>r</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>E</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>E</mi><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>E</mi><mo>⋅</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\frac{\partial r}{\partial b} = - \frac{\partial E}{\partial b} = - E \cdot \frac{\partial (ax^2 + bx + c)}{\partial b} = - E \cdot x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.4539199999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">a</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">c</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>r</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>c</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>E</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>c</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>E</mi><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>c</mi></mrow></mfrac><mo>=</mo><mo>−</mo><mi>E</mi><mo>⋅</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\frac{\partial r}{\partial c} = - \frac{\partial E}{\partial c} = - E \cdot \frac{\partial (ax^2 + bx + c)}{\partial c} = - E \cdot 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.4539199999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">c</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">a</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">c</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li></ul><h3 id="312-实现-ceres-cost-function"><a class="markdownIt-Anchor" href="#312-实现-ceres-cost-function"></a> 3.1.2 实现 Ceres Cost Function</h3><p>在Ceres Solver中实现解析求导，我们需要继承的是<code>ceres::SizedCostFunction</code>类。</p><p><code>SizedCostFunction</code>是一个模板类，参数格式如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceres::SizedCostFunction&lt;残差数量, 参数块<span class="number">1</span>大小, 参数块<span class="number">2</span>大小, ...&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对于这个问题（拟合模型 y = exp(ax² + bx + c)）：</p><ul><li><strong>残差数量</strong> = 1（每个观测点产生1个残差值）</li><li><strong>参数块大小</strong> = 3（我们优化的参数是a, b, c）</li></ul><p>所以我们需要继承的类是：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceres::SizedCostFunction&lt;<span class="number">1</span>, <span class="number">3</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>定义我们的CostFunction类</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解析求导的Cost Function</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ExponentialResidualAnalytic</span> : <span class="keyword">public</span> ceres::SizedCostFunction&lt;<span class="number">1</span>, <span class="number">3</span>&gt; &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="built_in">ExponentialResidualAnalytic</span>(<span class="type">double</span> x, <span class="type">double</span> y)</span><br><span class="line">        : <span class="built_in">x_</span>(x), <span class="built_in">y_</span>(y) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 必须重写的Evaluate函数</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">bool</span> <span class="title">Evaluate</span><span class="params">(<span class="type">double</span> <span class="type">const</span>* <span class="type">const</span>* parameters,</span></span></span><br><span class="line"><span class="params"><span class="function">                          <span class="type">double</span>* residuals,</span></span></span><br><span class="line"><span class="params"><span class="function">                          <span class="type">double</span>** jacobians)</span> <span class="type">const</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// 存储数据点的成员变量</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> x_;  <span class="comment">// x坐标</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> y_;  <span class="comment">// y坐标</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实现Evaluate函数</p><p>这是最重要的一步，它包含两部分：</p><ol><li>计算残差值（必须）</li><li>计算雅可比矩阵（可选，但解析求导的关键）</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">ExponentialResidualAnalytic::Evaluate</span><span class="params">(<span class="type">double</span> <span class="type">const</span>* <span class="type">const</span>* parameters,</span></span></span><br><span class="line"><span class="params"><span class="function">                                          <span class="type">double</span>* residuals,</span></span></span><br><span class="line"><span class="params"><span class="function">                                          <span class="type">double</span>** jacobians)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 获取参数值</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> a = parameters[<span class="number">0</span>][<span class="number">0</span>];  <span class="comment">// 第一个参数块的第一个元素</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> b = parameters[<span class="number">0</span>][<span class="number">1</span>];  <span class="comment">// 第一个参数块的第二个元素</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> c = parameters[<span class="number">0</span>][<span class="number">2</span>];  <span class="comment">// 第一个参数块的第三个元素</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 计算残差 r = y - exp(ax² + bx + c)</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> exponent = a * x_ * x_ + b * x_ + c;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> prediction = std::<span class="built_in">exp</span>(exponent);</span><br><span class="line">    residuals[<span class="number">0</span>] = y_ - prediction;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 如果需要计算雅可比矩阵（这是一种优化策略，有时候迭代过程中不需要计算就会传入null）</span></span><br><span class="line">    <span class="keyword">if</span> (jacobians != <span class="literal">nullptr</span> &amp;&amp; jacobians[<span class="number">0</span>] != <span class="literal">nullptr</span>) &#123;</span><br><span class="line">        <span class="comment">// 我们要计算残差对参数a, b, c的偏导数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 预先计算的exp项（提高效率）</span></span><br><span class="line">        <span class="type">const</span> <span class="type">double</span> exp_term = std::<span class="built_in">exp</span>(exponent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// dr/da = -exp(ax² + bx + c) * x²</span></span><br><span class="line">        jacobians[<span class="number">0</span>][<span class="number">0</span>] = -exp_term * x_ * x_;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// dr/db = -exp(ax² + bx + c) * x</span></span><br><span class="line">        jacobians[<span class="number">0</span>][<span class="number">1</span>] = -exp_term * x_;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// dr/dc = -exp(ax² + bx + c)</span></span><br><span class="line">        jacobians[<span class="number">0</span>][<span class="number">2</span>] = -exp_term;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回计算成功</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="313-evaluate函数参数详解"><a class="markdownIt-Anchor" href="#313-evaluate函数参数详解"></a> 3.1.3 Evaluate函数参数详解</h3><p><strong>1. <code>double const* const* parameters</code></strong></p><ul><li>这是一个指向指针数组的指针</li><li><code>parameters[i]</code>访问第i个参数块（我们只有一个参数块，所以使用<code>parameters[0]</code>）</li><li><code>parameters[0][j]</code>访问第一个参数块的第j个元素</li></ul><p><strong>2. <code>double* residuals</code></strong></p><ul><li>用于存储计算的残差值</li><li><code>residuals[i]</code>写入第i个残差值（我们只有一个残差，所以使用<code>residuals[0]</code>）</li></ul><p><strong>3. <code>double** jacobians</code></strong></p><ul><li>用于存储计算的雅可比矩阵</li><li>如果为<code>nullptr</code>，表示优化器不需要计算雅可比矩阵</li><li><code>jacobians[i]</code>指向与第i个参数块相关的雅可比矩阵</li><li><code>jacobians[0][j]</code>存储残差对第一个参数块中第j个参数的偏导数</li></ul><h3 id="32-方法二自动求导-automatic-differentiation"><a class="markdownIt-Anchor" href="#32-方法二自动求导-automatic-differentiation"></a> 3.2 方法二：自动求导 (Automatic Differentiation)</h3><p>这是 Ceres 推荐的方法之一，因为它结合了易用性和效率。我们只需要定义一个计算残差的模板化 “Functor”，Ceres 会自动计算导数。</p><h3 id="321-functor-结构基本形式"><a class="markdownIt-Anchor" href="#321-functor-结构基本形式"></a> 3.2.1 Functor 结构基本形式</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ExponentialResidualAutoDiff</span> &#123;</span><br><span class="line">    <span class="comment">// 构造函数：保存每个残差项所需的输入数据</span></span><br><span class="line">    <span class="built_in">ExponentialResidualAutoDiff</span>(<span class="type">double</span> x, <span class="type">double</span> y) : <span class="built_in">x_</span>(x), <span class="built_in">y_</span>(y) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模板化的 operator()：这是自动求导的关键</span></span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> T* <span class="type">const</span> parameters, T* residual)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 从参数数组中提取参数</span></span><br><span class="line">        <span class="comment">// 执行计算</span></span><br><span class="line">        <span class="comment">// 设置残差</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// 存储每个数据点的信息</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> x_;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> y_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="322-关键点详解"><a class="markdownIt-Anchor" href="#322-关键点详解"></a> 3.2.2 关键点详解</h3><h3 id="模板化-operator"><a class="markdownIt-Anchor" href="#模板化-operator"></a> 模板化 operator()</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> T* <span class="type">const</span> parameters, T* residual)</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p>这是自动求导的核心。这里的类型 <code>T</code> 是关键，Ceres 会：</p><ul><li>使用 <code>T = double</code> 调用此函数来计算残差值</li><li>使用 <code>T = ceres::Jet&lt;double, N&gt;</code> 调用此函数来计算导数</li></ul><p><code>ceres::Jet</code> 类型是 Ceres 的特殊类型，它存储了值和对应的导数信息。当函数使用 <code>Jet</code> 类型执行计算时，它自动跟踪导数。</p><h3 id="参数和返回值"><a class="markdownIt-Anchor" href="#参数和返回值"></a> 参数和返回值</h3><ul><li><code>const T* const parameters</code>：包含优化参数的数组</li><li><code>T* residual</code>：输出残差的数组</li><li>返回 <code>bool</code>：表示计算是否成功</li></ul><h3 id="323-详细示例分步解析"><a class="markdownIt-Anchor" href="#323-详细示例分步解析"></a> 3.2.3 详细示例：分步解析</h3><p>对于模型 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mi>x</mi><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = \exp(ax^2 + bx + c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>，以下是详细的自动求导 Functor 实现：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ExponentialResidualAutoDiff</span> &#123;</span><br><span class="line">    <span class="comment">// 构造函数：存储每个数据点的 x 和 y 值</span></span><br><span class="line">    <span class="built_in">ExponentialResidualAutoDiff</span>(<span class="type">double</span> x, <span class="type">double</span> y) : <span class="built_in">x_</span>(x), <span class="built_in">y_</span>(y) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> T* <span class="type">const</span> parameters, T* residual)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 步骤 1: 从参数数组中提取 a, b, c</span></span><br><span class="line">        <span class="type">const</span> T a = parameters[<span class="number">0</span>];</span><br><span class="line">        <span class="type">const</span> T b = parameters[<span class="number">1</span>];</span><br><span class="line">        <span class="type">const</span> T c = parameters[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 步骤 2: 将常量 x_ 和 y_ 转换为类型 T</span></span><br><span class="line">        <span class="comment">// 这是必要的，因为所有计算都需要在 T 类型的环境中进行</span></span><br><span class="line">        <span class="type">const</span> T x = <span class="built_in">T</span>(x_);</span><br><span class="line">        <span class="type">const</span> T y = <span class="built_in">T</span>(y_);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 步骤 3: 计算模型预测值</span></span><br><span class="line">        <span class="comment">// 注意：所有数学运算都使用 T 类型的变量</span></span><br><span class="line">        T exponent = a * x * x + b * x + c;</span><br><span class="line">        T prediction = <span class="built_in">exp</span>(exponent);  <span class="comment">// 使用与 T 兼容的 exp 函数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 步骤 4: 计算残差 (observed - predicted)</span></span><br><span class="line">        residual[<span class="number">0</span>] = y - prediction;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算成功</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="comment">// 数据点的 x 和 y 值</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> x_;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> y_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="33-方法三数值求导-numeric-differentiation"><a class="markdownIt-Anchor" href="#33-方法三数值求导-numeric-differentiation"></a> 3.3 方法三：数值求导 (Numeric Differentiation)</h3><p>这种方法最容易实现，因为我们只需要提供计算残差的函数。Ceres 会通过微小地改变参数值并观察残差的变化来近似计算雅可比矩阵。但它通常比自动或解析求导慢，并且可能不太精确。</p><h3 id="331-实现-functor-与自动求导类似但非模板化"><a class="markdownIt-Anchor" href="#331-实现-functor-与自动求导类似但非模板化"></a> 3.3.1 实现 Functor (与自动求导类似，但非模板化)</h3><p>创建一个结构体（或类），重载 <code>operator()</code>，但这次只使用 <code>double</code> 类型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数值求导的 Functor</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ExponentialResidualNumeric</span> &#123;</span><br><span class="line">    <span class="built_in">ExponentialResidualNumeric</span>(<span class="type">double</span> x, <span class="type">double</span> y) : <span class="built_in">x_</span>(x), <span class="built_in">y_</span>(y) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注意：这里 operator() 不是模板化的</span></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">operator</span><span class="params">()</span><span class="params">(<span class="type">const</span> <span class="type">double</span>* <span class="type">const</span> parameters, <span class="type">double</span>* residual)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">double</span> a = parameters[<span class="number">0</span>];</span><br><span class="line">        <span class="type">const</span> <span class="type">double</span> b = parameters[<span class="number">1</span>];</span><br><span class="line">        <span class="type">const</span> <span class="type">double</span> c = parameters[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="type">const</span> <span class="type">double</span> x = x_;</span><br><span class="line">        <span class="type">const</span> <span class="type">double</span> y = y_;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算预测值 prediction = exp(ax^2 + bx + c)</span></span><br><span class="line">        <span class="type">double</span> exponent_term = a * x * x + b * x + c;</span><br><span class="line">        <span class="type">double</span> prediction = std::<span class="built_in">exp</span>(exponent_term);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算残差 residual = y - prediction</span></span><br><span class="line">        residual[<span class="number">0</span>] = y - prediction;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> x_; <span class="comment">// 观测数据 x</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> y_; <span class="comment">// 观测数据 y</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-后续步骤"><a class="markdownIt-Anchor" href="#4-后续步骤"></a> 4. 后续步骤</h2><p>流程：</p><ol><li><p><strong>定义残差函数</strong>：使用解析求导、自动求导或数值求导</p></li><li><p><strong>创建和配置 Problem</strong>：</p><p>在 Ceres 中，<code>Problem</code> 是整个优化问题的容器，它包含了所有残差块和参数块。</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceres::Problem problem;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面这行代码创建了一个空的 Problem 对象。接下来，我们需要向它添加残差块（即我们前面定义的成本函数）。</p><ul><li>添加残差块</li></ul><p>对于每个数据点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，我们需要添加一个残差块。这是通过 <code>AddResidualBlock</code> 方法完成的：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; x_data.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">    ceres::CostFunction* cost_function =</span><br><span class="line">        <span class="keyword">new</span> ceres::<span class="built_in">AutoDiffCostFunction</span>&lt;ExponentialResidualAutoDiff, <span class="number">1</span>, <span class="number">3</span>&gt;(</span><br><span class="line">            <span class="keyword">new</span> <span class="built_in">ExponentialResidualAutoDiff</span>(x_data[i], y_data[i])</span><br><span class="line">        );</span><br><span class="line">    problem.<span class="built_in">AddResidualBlock</span>(cost_function,</span><br><span class="line">                             <span class="literal">nullptr</span>, <span class="comment">// 使用默认的平方损失函数</span></span><br><span class="line">                             parameters);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这段代码的详细解释：</p><ol><li><strong>创建成本函数</strong>：<ul><li>对于自动求导，我们使用 <code>AutoDiffCostFunction&lt;&gt;</code> 类</li><li>模板参数 <code>ExponentialResidualAutoDiff</code> 是我们的函数对象类型</li><li><code>1</code> 表示残差的维度（每个观测产生一个标量残差）</li><li><code>3</code> 表示参数块的大小（我们的参数是 a, b, c 三个值）</li><li>构造函数参数是我们的函数对象实例，它保存了特定的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 值</li></ul></li><li><strong>添加残差块</strong>：<ul><li><p><code>AddResidualBlock</code> 将成本函数添加到问题中</p></li><li><p>第一个参数是成本函数指针</p></li><li><p>第二个参数是损失函数指针（<code>nullptr</code> 表示使用默认的平方损失函数）</p><p>损失函数用于减轻离群点（outliers）的影响。当为 <code>nullptr</code> 时，Ceres 使用默认的平方损失函数，即直接对残差平方求和。</p><p>如果需要使用鲁棒损失函数，比如 Huber 损失，可以这样写：</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceres::LossFunction* loss_function = <span class="keyword">new</span> ceres::<span class="built_in">HuberLoss</span>(<span class="number">1.0</span>);</span><br><span class="line">problem.<span class="built_in">AddResidualBlock</span>(cost_function, loss_function, parameters);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>第三个参数是指向我们要优化的参数数组的指针</p></li></ul></li></ol><ul><li><p>设置参数约束（如有需要）</p><p>除了添加残差块外，还可以对参数设置一些约束：</p><ol><li><p><strong>固定某些参数</strong>（使它们在优化过程中不变）：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">problem.<span class="built_in">SetParameterBlockConstant</span>(parameters + <span class="number">2</span>); <span class="comment">// 固定第三个参数 c</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>设置参数的上下界</strong>：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">problem.<span class="built_in">SetParameterLowerBound</span>(parameters, <span class="number">0</span>, <span class="number">0.0</span>); <span class="comment">// 设置 a &gt;= 0</span></span><br><span class="line">problem.<span class="built_in">SetParameterUpperBound</span>(parameters, <span class="number">1</span>, <span class="number">0.0</span>); <span class="comment">// 设置 b &lt;= 0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li></ul></li><li><p><strong>配置求解器选项</strong></p><p>求解器负责实际运行优化算法。我们通过 <code>Solver::Options</code> 对象来配置求解器：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ceres::Solver::Options options;</span><br><span class="line">options.linear_solver_type = ceres::DENSE_QR;</span><br><span class="line">options.minimizer_progress_to_stdout = <span class="literal">true</span>;</span><br><span class="line">options.max_num_iterations = <span class="number">50</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>详细解释：</p><ol><li><strong><code>linear_solver_type</code></strong>：<ul><li>在每次迭代中，非线性最小二乘问题会被线性化，产生一个线性子问题</li><li>这个选项决定如何求解这个线性子问题</li><li><code>DENSE_QR</code> 适合小规模问题（参数和残差数量都不太多）</li><li>对于大规模问题，可以考虑 <code>SPARSE_NORMAL_CHOLESKY</code> 或 <code>ITERATIVE_SCHUR</code> 等</li></ul></li><li><strong><code>minimizer_progress_to_stdout</code></strong>：<ul><li>设为 <code>true</code> 时会在优化过程中打印进度信息</li><li>非常有用，可以看到成本函数的下降情况和收敛过程</li></ul></li><li><strong><code>max_num_iterations</code></strong>：<ul><li>最大迭代次数</li><li>防止算法在难以收敛的情况下无限循环</li></ul></li></ol><p>其他常用选项包括：</p><ul><li><strong><code>function_tolerance</code></strong>：当成本函数相对变化小于此值时停止</li><li><strong><code>gradient_tolerance</code></strong>：当梯度范数小于此值时停止</li><li><strong><code>parameter_tolerance</code></strong>：当参数相对变化小于此值时停止</li><li><strong><code>num_threads</code></strong>：使用的线程数量（并行化）</li></ul></li><li><p><strong>运行求解器</strong></p><p>设置好 Problem 和 Options 后，调用 <code>Solve</code> 函数执行优化：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceres::Solver::Summary summary;</span><br><span class="line">ceres::Solve(options, &amp;problem, &amp;summary);</span><br></pre></td></tr></table></figure><p>这会执行优化算法并将结果存储在 <code>summary</code> 对象中。优化过程完成后，最优参数值会被直接写入到我们提供给 Problem 的 <code>parameters</code> 数组中。</p></li><li><p><strong>分析结果</strong></p><p>优化完成后，通常需要：</p><ol><li><p><strong>检查优化状态</strong>：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; summary.<span class="built_in">BriefReport</span>() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><p>这会打印一个简短报告，包括终止状态、迭代次数、求解时间等</p></li><li><p><strong>查看最终参数值</strong>：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">std::cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; parameters[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; (True: &quot;</span> &lt;&lt; a_true &lt;&lt; <span class="string">&quot;)\n&quot;</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; parameters[<span class="number">1</span>] &lt;&lt; <span class="string">&quot; (True: &quot;</span> &lt;&lt; b_true &lt;&lt; <span class="string">&quot;)\n&quot;</span>;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; parameters[<span class="number">2</span>] &lt;&lt; <span class="string">&quot; (True: &quot;</span> &lt;&lt; c_true &lt;&lt; <span class="string">&quot;)\n&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>计算最终代价</strong>：</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> final_cost = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; x_data.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">    <span class="type">double</span> residual = y_data[i] - std::<span class="built_in">exp</span>(parameters[<span class="number">0</span>] * x_data[i] * x_data[i] +</span><br><span class="line">                                        parameters[<span class="number">1</span>] * x_data[i] + parameters[<span class="number">2</span>]);</span><br><span class="line">    final_cost += residual * residual;</span><br><span class="line">&#125;</span><br><span class="line">std::cout &lt;&lt; <span class="string">&quot;Final Total Cost: &quot;</span> &lt;&lt; final_cost &lt;&lt; std::endl;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="5-完整代码实现"><a class="markdownIt-Anchor" href="#5-完整代码实现"></a> 5. 完整代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用于生成模拟数据的真实参数</span></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> a_true = <span class="number">1.0</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> b_true = <span class="number">2.0</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> c_true = <span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成带噪声的数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">generate_data</span><span class="params">(std::vector&lt;<span class="type">double</span>&gt;&amp; x_data, std::vector&lt;<span class="type">double</span>&gt;&amp; y_data, <span class="type">int</span> num_points = <span class="number">100</span>, <span class="type">double</span> noise_stddev = <span class="number">0.1</span>)</span> </span>&#123;</span><br><span class="line">    x_data.<span class="built_in">resize</span>(num_points);</span><br><span class="line">    y_data.<span class="built_in">resize</span>(num_points);</span><br><span class="line">    <span class="function">std::default_random_engine <span class="title">generator</span><span class="params">(<span class="number">123</span>)</span></span>; <span class="comment">// Use a fixed seed for reproducibility</span></span><br><span class="line">    <span class="function">std::normal_distribution&lt;<span class="type">double</span>&gt; <span class="title">distribution</span><span class="params">(<span class="number">0.0</span>, noise_stddev)</span></span>; <span class="comment">// 高斯噪声</span></span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Generated Data:&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num_points; ++i) &#123;</span><br><span class="line">        <span class="type">double</span> x = <span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(i) / (num_points / <span class="number">10.0</span>); <span class="comment">// x 从 0 到 9.9 or similar range</span></span><br><span class="line">        x_data[i] = x;</span><br><span class="line">        <span class="type">double</span> y_clean = std::<span class="built_in">exp</span>(a_true * x * x + b_true * x + c_true);</span><br><span class="line">        <span class="type">double</span> noise = <span class="built_in">distribution</span>(generator);</span><br><span class="line">        y_data[i] = y_clean + noise;</span><br><span class="line">        <span class="comment">// Optional: Print generated data to verify</span></span><br><span class="line">        <span class="comment">// std::cout &lt;&lt; &quot;x: &quot; &lt;&lt; x &lt;&lt; &quot;, y_clean: &quot; &lt;&lt; y_clean &lt;&lt; &quot;, y_observed: &quot; &lt;&lt; y_data[i] &lt;&lt; std::endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">     std::cout &lt;&lt; <span class="string">&quot;Data generation complete. &quot;</span> &lt;&lt; num_points &lt;&lt; <span class="string">&quot; points generated.&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> </span>&#123;</span><br><span class="line">    google::<span class="built_in">InitGoogleLogging</span>(argv[<span class="number">0</span>]); <span class="comment">// 初始化 glog</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 生成数据</span></span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; x_data;</span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; y_data;</span><br><span class="line">    <span class="built_in">generate_data</span>(x_data, y_data, <span class="number">100</span>, <span class="number">0.2</span>); <span class="comment">// 使用 100 个点，噪声标准差 0.2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 设置初始参数估计值</span></span><br><span class="line">    <span class="type">double</span> initial_a = <span class="number">0.9</span>;</span><br><span class="line">    <span class="type">double</span> initial_b = <span class="number">1.1</span>;</span><br><span class="line">    <span class="type">double</span> initial_c = <span class="number">0.9</span>;</span><br><span class="line">    <span class="type">double</span> parameters[<span class="number">3</span>] = &#123;initial_a, initial_b, initial_c&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 构建 Ceres 问题 (Problem)</span></span><br><span class="line">    ceres::Problem problem;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 选择一种求导方法并将残差块添加到 Problem ---</span></span><br><span class="line">    <span class="comment">// --- 一次只能取消注释一个方法块来测试 ---</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法一：使用解析求导</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    std::cout &lt;&lt; &quot;\nUsing Analytic Differentiation:\n&quot;;</span></span><br><span class="line"><span class="comment">    for (size_t i = 0; i &lt; x_data.size(); ++i) &#123;</span></span><br><span class="line"><span class="comment">        ceres::CostFunction* cost_function =</span></span><br><span class="line"><span class="comment">            new ExponentialResidualAnalytic(x_data[i], y_data[i]);</span></span><br><span class="line"><span class="comment">        problem.AddResidualBlock(cost_function,</span></span><br><span class="line"><span class="comment">                                 nullptr, // 使用默认的平方损失函数</span></span><br><span class="line"><span class="comment">                                 parameters);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法二：使用自动求导</span></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;\nUsing Automatic Differentiation:\n&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; x_data.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">        ceres::CostFunction* cost_function =</span><br><span class="line">            <span class="keyword">new</span> ceres::<span class="built_in">AutoDiffCostFunction</span>&lt;ExponentialResidualAutoDiff, <span class="number">1</span>, <span class="number">3</span>&gt;(</span><br><span class="line">                <span class="keyword">new</span> <span class="built_in">ExponentialResidualAutoDiff</span>(x_data[i], y_data[i])</span><br><span class="line">            );</span><br><span class="line">        problem.<span class="built_in">AddResidualBlock</span>(cost_function,</span><br><span class="line">                                 <span class="literal">nullptr</span>, <span class="comment">// 使用默认的平方损失函数</span></span><br><span class="line">                                 parameters);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法三：使用数值求导</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    std::cout &lt;&lt; &quot;\nUsing Numeric Differentiation:\n&quot;;</span></span><br><span class="line"><span class="comment">    for (size_t i = 0; i &lt; x_data.size(); ++i) &#123;</span></span><br><span class="line"><span class="comment">        ceres::CostFunction* cost_function =</span></span><br><span class="line"><span class="comment">            new ceres::NumericDiffCostFunction&lt;ExponentialResidualNumeric, ceres::CENTRAL, 1, 3&gt;(</span></span><br><span class="line"><span class="comment">                new ExponentialResidualNumeric(x_data[i], y_data[i])</span></span><br><span class="line"><span class="comment">            );</span></span><br><span class="line"><span class="comment">        problem.AddResidualBlock(cost_function,</span></span><br><span class="line"><span class="comment">                                 nullptr, // 使用默认的平方损失函数</span></span><br><span class="line"><span class="comment">                                 parameters);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 配置求解器 (Solver)</span></span><br><span class="line">    ceres::Solver::Options options;</span><br><span class="line">    options.linear_solver_type = ceres::DENSE_QR; <span class="comment">// 对于小型问题，DENSE_QR 通常足够</span></span><br><span class="line">    options.minimizer_progress_to_stdout = <span class="literal">true</span>;  <span class="comment">// 将优化过程输出到控制台</span></span><br><span class="line">    options.max_num_iterations = <span class="number">50</span>;             <span class="comment">// 最大迭代次数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5. 运行求解器</span></span><br><span class="line">    ceres::Solver::Summary summary;</span><br><span class="line">    ceres::<span class="built_in">Solve</span>(options, &amp;problem, &amp;summary);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6. 输出结果</span></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;\nSolver Summary:\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; summary.<span class="built_in">BriefReport</span>() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="comment">// std::cout &lt;&lt; summary.FullReport() &lt;&lt; &quot;\n&quot;; // 更详细的报告</span></span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;\nEstimated parameters:\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; parameters[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; (True: &quot;</span> &lt;&lt; a_true &lt;&lt; <span class="string">&quot;)\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; parameters[<span class="number">1</span>] &lt;&lt; <span class="string">&quot; (True: &quot;</span> &lt;&lt; b_true &lt;&lt; <span class="string">&quot;)\n&quot;</span>;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; parameters[<span class="number">2</span>] &lt;&lt; <span class="string">&quot; (True: &quot;</span> &lt;&lt; c_true &lt;&lt; <span class="string">&quot;)\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算最终的总代价 (Sum of Squared Errors)</span></span><br><span class="line">    <span class="type">double</span> final_cost = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; x_data.<span class="built_in">size</span>(); ++i) &#123;</span><br><span class="line">         <span class="type">double</span> residual = y_data[i] - std::<span class="built_in">exp</span>(parameters[<span class="number">0</span>] * x_data[i] * x_data[i] + parameters[<span class="number">1</span>] * x_data[i] + parameters[<span class="number">2</span>]);</span><br><span class="line">         final_cost += residual * residual;</span><br><span class="line">     &#125;</span><br><span class="line">     std::cout &lt;&lt; <span class="string">&quot;Final Total Cost (Sum of Squared Errors): &quot;</span> &lt;&lt; final_cost &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-如何选择求导方法"><a class="markdownIt-Anchor" href="#6-如何选择求导方法"></a> 6. 如何选择求导方法</h2><ul><li><strong>自动求导 (AutoDiff):</strong> 通常是<strong>首选</strong>。它易于实现（只需写 Functor），准确（不像数值求导有近似误差），并且通常比数值求导快。Ceres 对其进行了高度优化。</li><li><strong>解析求导 (Analytic):</strong> 如果你能正确无误地推导出雅可比矩阵并实现它，这通常是<strong>最快</strong>的方法。但是，手动求导和实现很容易出错，尤其对于复杂的模型。调试起来也比较困难。</li><li><strong>数值求导 (Numeric):</strong> <strong>最容易实现</strong>，因为你只需要提供计算残差的函数。但它通常是<strong>最慢</strong>的，并且其精度受限于步长选择（Ceres 会尝试选择合适的步长），可能在某些情况下导致收敛性问题。适合快速原型设计或当解析/自动求导难以实现时。</li></ul><hr />]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—cmake的新旧方法</title>
      <link href="/2025/04/24/c5/"/>
      <url>/2025/04/24/c5/</url>
      
        <content type="html"><![CDATA[<h1 id="cmake新旧方法对比详解"><a class="markdownIt-Anchor" href="#cmake新旧方法对比详解"></a> CMake新旧方法对比详解</h1><h2 id="一-include_directories-vs-target_include_directories"><a class="markdownIt-Anchor" href="#一-include_directories-vs-target_include_directories"></a> 一、include_directories() vs target_include_directories()</h2><p>这两者的核心区别在于<strong>作用域(Scope)</strong>：</p><h3 id="1-include_directoriesafterbefore-system-dir1-dir2"><a class="markdownIt-Anchor" href="#1-include_directoriesafterbefore-system-dir1-dir2"></a> 1. include_directories([AFTER|BEFORE] [SYSTEM] dir1 [dir2 …])</h3><p><strong>作用域：目录级别</strong></p><ul><li><strong>作用:</strong> 将指定的目录添加到<strong>当前<code>CMakeLists.txt</code>文件以及所有在它之后处理的子目录</strong>的头文件搜索路径中</li><li><strong>影响:</strong> 在调用后定义的<strong>所有目标</strong>都会将这些目录添加到它们的include路径中</li><li><strong>特点:</strong> 类似于&quot;全局&quot;设置（在当前目录及子目录范围内）</li><li><strong>问题:</strong> 不够精确，可能导致目标获得不必要的包含路径</li></ul><h3 id="2-target_include_directoriestarget-system-afterbefore-interfacepublicprivate-items1-interfacepublicprivate-items2"><a class="markdownIt-Anchor" href="#2-target_include_directoriestarget-system-afterbefore-interfacepublicprivate-items1-interfacepublicprivate-items2"></a> 2. target_include_directories(&lt;target&gt; [SYSTEM] [AFTER|BEFORE] &lt;INTERFACE|PUBLIC|PRIVATE&gt; [items1…] [&lt;INTERFACE|PUBLIC|PRIVATE&gt; [items2…] …])</h3><p><strong>作用域：目标级别</strong></p><ul><li><strong>作用:</strong> 将指定的目录添加到**特定目标<code>&lt;target&gt;</code>**的头文件搜索路径中</li><li><strong>影响:</strong> 只有指定的<code>&lt;target&gt;</code>会使用这些include路径</li><li><strong>关键修饰符:</strong><ul><li><code>PRIVATE</code>: 目录只用于编译<code>&lt;target&gt;</code>自身，不会传递给依赖者</li><li><code>PUBLIC</code>: 目录既用于编译<code>&lt;target&gt;</code>自身，也会传递给依赖<code>&lt;target&gt;</code>的其他目标</li><li><code>INTERFACE</code>: 目录不用于编译<code>&lt;target&gt;</code>自身，但会传递给依赖<code>&lt;target&gt;</code>的其他目标</li></ul></li><li><strong>优点:</strong> 非常精确和清晰，为每个目标精确指定所需的头文件路径</li></ul><h3 id="对比总结"><a class="markdownIt-Anchor" href="#对比总结"></a> 对比总结</h3><table><thead><tr><th>特性</th><th><code>include_directories()</code></th><th><code>target_include_directories()</code></th></tr></thead><tbody><tr><td><strong>作用域</strong></td><td>目录级别 (影响当前及子目录所有后续目标)</td><td>目标级别 (只影响指定目标)</td></tr><tr><td><strong>精确性</strong></td><td>低</td><td>高</td></tr><tr><td><strong>封装性</strong></td><td>差 (设置是&quot;全局&quot;的)</td><td>好 (设置附加到具体目标)</td></tr><tr><td><strong>现代推荐</strong></td><td><strong>否</strong> (除非有特定全局需求)</td><td><strong>是</strong> (现代CMake的核心用法)</td></tr><tr><td><strong>依赖传递</strong></td><td>不直接处理</td><td>通过<code>PUBLIC</code>/<code>INTERFACE</code>关键字明确控制</td></tr></tbody></table><h2 id="二-cmake旧方式-vs-新方式现代cmake"><a class="markdownIt-Anchor" href="#二-cmake旧方式-vs-新方式现代cmake"></a> 二、CMake旧方式 vs 新方式(现代CMake)</h2><p>核心区别在于从<strong>基于变量和全局/目录设置</strong>转向<strong>基于目标及其属性</strong>。</p><h3 id="1-旧方式-variable-centric-directory-scoped-cmake-2x时代"><a class="markdownIt-Anchor" href="#1-旧方式-variable-centric-directory-scoped-cmake-2x时代"></a> 1. 旧方式 (Variable-Centric, Directory-Scoped - CMake 2.x时代)</h3><p><strong>核心思想:</strong> <code>find_package</code>等命令设置全局变量，手动使用这些变量配置目标</p><h4 id="典型流程"><a class="markdownIt-Anchor" href="#典型流程"></a> 典型流程:</h4><ol><li><p><strong>查找和配置库</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(SomeLib REQUIRED)</span><br><span class="line"><span class="comment"># 执行FindSomeLib.cmake或旧式SomeLibConfig.cmake</span></span><br><span class="line"><span class="comment"># 设置变量：SomeLib_FOUND, SomeLib_INCLUDE_DIRS, SomeLib_LIBRARIES等</span></span><br></pre></td></tr></table></figure></li><li><p><strong>手动应用这些变量</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局设置，影响后续所有目标</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;SomeLib_INCLUDE_DIRS&#125;</span>) </span><br><span class="line"><span class="keyword">add_definitions</span>(<span class="variable">$&#123;SomeLib_DEFINITIONS&#125;</span>)     </span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(my_app main.cpp)</span><br><span class="line"><span class="comment"># 手动链接库</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(my_app <span class="variable">$&#123;SomeLib_LIBRARIES&#125;</span>)</span><br></pre></td></tr></table></figure></li></ol><h4 id="特点与问题"><a class="markdownIt-Anchor" href="#特点与问题"></a> 特点与问题:</h4><ul><li><strong>全局状态:</strong> 变量和设置通常影响整个目录或项目，容易冲突</li><li><strong>手动管理:</strong> 需了解每个库设置的变量，手动应用到目标的各属性</li><li><strong>传递依赖困难:</strong> 如<code>my_app</code>依赖<code>my_lib</code>，而<code>my_lib</code>依赖<code>SomeLib</code>，则<code>my_app</code>的配置文件可能也需了解<code>SomeLib</code>，破坏封装性</li><li><strong>不够清晰:</strong> 链接指令通常只是变量引用，不明确表达依赖关系</li></ul><h3 id="2-新方式-modern-cmake-target-centric-cmake-30时代"><a class="markdownIt-Anchor" href="#2-新方式-modern-cmake-target-centric-cmake-30时代"></a> 2. 新方式 (Modern CMake / Target-Centric - CMake 3.0+时代)</h3><p><strong>核心思想:</strong> 将构建所需的所有信息附加到目标上，使用导入目标(Imported Targets)</p><h4 id="典型流程-2"><a class="markdownIt-Anchor" href="#典型流程-2"></a> 典型流程:</h4><ol><li><p><strong>查找和配置库</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(SomeLib REQUIRED)</span><br><span class="line"><span class="comment"># 执行现代SomeLibConfig.cmake</span></span><br><span class="line"><span class="comment"># 定义导入目标，如SomeLib::Core</span></span><br></pre></td></tr></table></figure></li><li><p><strong>直接链接导入目标</strong></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_executable</span>(my_app main.cpp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只需链接目标，CMake自动处理其他所有事情</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(my_app PRIVATE SomeLib::Core)</span><br></pre></td></tr></table></figure></li></ol><h4 id="特点与优势"><a class="markdownIt-Anchor" href="#特点与优势"></a> 特点与优势:</h4><ul><li><strong>目标即一切:</strong> 所有配置围绕目标进行，使用<code>target_*</code>系列命令</li><li><strong>封装性:</strong> 库的使用细节被封装在导入目标中，配置文件只需知道目标名称</li><li><strong>自动传递依赖:</strong> 链接导入目标时，该目标的公共依赖自动传递</li><li><strong>清晰明确:</strong> 链接指令直接表明依赖关系</li><li><strong>精确控制:</strong> 使用<code>PRIVATE</code>/<code>PUBLIC</code>/<code>INTERFACE</code>关键字精确控制依赖传递</li></ul><h3 id="对比总结-2"><a class="markdownIt-Anchor" href="#对比总结-2"></a> 对比总结</h3><table><thead><tr><th>方面</th><th>旧方式 (Variable-Centric)</th><th>新方式 (Target-Centric)</th></tr></thead><tbody><tr><td><strong>核心</strong></td><td>全局/目录变量 (<code>_DIRS</code>, <code>_LIBS</code>)</td><td>目标及其属性 (<code>target_*</code>命令, 导入目标)</td></tr><tr><td><strong><code>find_package</code></strong></td><td>主要设置变量</td><td>主要定义导入目标 (<code>Namespace::Target</code>)</td></tr><tr><td><strong>配置方式</strong></td><td>手动应用变量到目标</td><td>链接导入目标，CMake自动处理细节</td></tr><tr><td><strong>包含路径</strong></td><td><code>include_directories()</code> (全局)</td><td><code>target_include_directories()</code> (目标级)</td></tr><tr><td><strong>链接</strong></td><td><code>target_link_libraries(... $&#123;..._LIBS&#125;)</code></td><td><code>target_link_libraries(... Namespace::Target)</code></td></tr><tr><td><strong>依赖传递</strong></td><td>手动处理，易出错</td><td>自动处理 (通过<code>PUBLIC</code>/<code>INTERFACE</code>)</td></tr><tr><td><strong>封装性</strong></td><td>差</td><td>好</td></tr><tr><td><strong>推荐度</strong></td><td>不推荐</td><td><strong>强烈推荐</strong></td></tr></tbody></table><h2 id="三-实践建议"><a class="markdownIt-Anchor" href="#三-实践建议"></a> 三、实践建议</h2><ol><li><p><strong>始终优先使用现代CMake方法</strong></p><ul><li>使用<code>target_*</code>系列命令而非全局设置</li><li>链接导入目标而非变量列表</li></ul></li><li><p><strong>合理使用作用域关键字</strong></p><ul><li><code>PRIVATE</code>: 仅在目标内部使用，不传递给依赖者</li><li><code>PUBLIC</code>: 在目标内部使用且传递给依赖者</li><li><code>INTERFACE</code>: 不在目标内部使用，仅传递给依赖者</li></ul></li><li><p><strong>创建自己的库时</strong></p><ul><li>导出明确的目标而非变量</li><li>正确设置<code>PUBLIC</code>和<code>INTERFACE</code>属性以确保依赖正确传递</li></ul></li><li><p><strong>处理旧式库时</strong></p><ul><li>可以创建接口库封装旧式变量，使其符合现代CMake风格</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(SomeOldLib::SomeOldLib INTERFACE IMPORTED)</span><br><span class="line"><span class="keyword">set_target_properties</span>(SomeOldLib::SomeOldLib PROPERTIES</span><br><span class="line">  INTERFACE_INCLUDE_DIRECTORIES <span class="string">&quot;$&#123;SomeOldLib_INCLUDE_DIRS&#125;&quot;</span></span><br><span class="line">  INTERFACE_LINK_LIBRARIES <span class="string">&quot;$&#123;SomeOldLib_LIBRARIES&#125;&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—find原理—以ceres为例子的实操</title>
      <link href="/2025/04/24/c6/"/>
      <url>/2025/04/24/c6/</url>
      
        <content type="html"><![CDATA[<h2 id="1-更新-locate-数据库必做"><a class="markdownIt-Anchor" href="#1-更新-locate-数据库必做"></a> 1. 更新 locate 数据库（必做！）</h2><ul><li><strong>操作:</strong> 打开终端，运行 <code>sudo updatedb</code></li><li><strong>原因:</strong> 确保 locate 的数据库包含你刚刚安装的新库的文件信息，否则后续步骤可能找不到任何内容</li></ul><h2 id="2-初步定位查找核心配置文件-configcmake"><a class="markdownIt-Anchor" href="#2-初步定位查找核心配置文件-configcmake"></a> 2. 初步定位：查找核心配置文件 (Config.cmake)</h2><ul><li><strong>操作:</strong> 运行以下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate -i <span class="string">&#x27;config.cmake&#x27;</span> | grep -i <span class="string">&#x27;ceres&#x27;</span></span><br></pre></td></tr></table></figure><p>结果为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/home/xfy/3d/ceres/ceres-solver/build/third_party/abseil-cpp/abslConfig.cmake</span><br><span class="line">/home/xfy/3d/ceres/ceres-solver/cmake/CeresConfig.cmake.in</span><br><span class="line">/home/xfy/3d/ceres/ceres-solver/cmake/CreateCeresConfig.cmake</span><br><span class="line">/home/xfy/3d/ceres/ceres-solver/third_party/abseil-cpp/CMake/abslConfig.cmake.in</span><br><span class="line">/home/xfy/3d/ceres/ceres-solver/third_party/googletest/googletest/cmake/Config.cmake.in</span><br><span class="line">/usr/lib/cmake/Ceres/CeresConfig.cmake</span><br><span class="line">/usr/local/lib/cmake/Ceres/CeresConfig.cmake</span><br></pre></td></tr></table></figure><p>可以看到最后两行就是要找的，一个是系统级安装目录，一个是用户安装目录的。</p><h2 id="3-确定-find_package-名称"><a class="markdownIt-Anchor" href="#3-确定-find_package-名称"></a> 3. 确定 find_package 名称</h2><p>由CeresConfig.cmake可以知道这里的名称大小写是Ceres，所以应该是<code>find_package(Ceres REQUIRED)</code></p><h2 id="4-如何使用"><a class="markdownIt-Anchor" href="#4-如何使用"></a> 4. 如何使用</h2><p>这个文档的注释中没有像OpenCV那样写出如何使用，此时就需要自己来寻找。</p><p>首先查找*Config.cmake 文件中是否有创建目标的代码：</p><ul><li><code>add_library(库名 IMPORTED)</code></li><li><code>add_library(库名::组件名 IMPORTED)</code></li></ul><p>这里查找看到：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">NOT</span> <span class="keyword">TARGET</span> ceres)</span><br><span class="line">  <span class="comment"># For backwards compatibility, create a local &#x27;alias&#x27; target with the</span></span><br><span class="line">  <span class="comment"># non-namespace-qualified Ceres target name. Note that this is not a</span></span><br><span class="line">  <span class="comment"># true ALIAS library in CMake terms as they cannot point to imported targets.</span></span><br><span class="line">  <span class="keyword">add_library</span>(ceres INTERFACE IMPORTED)</span><br><span class="line">  <span class="keyword">set_target_properties</span>(ceres PROPERTIES INTERFACE_LINK_LIBRARIES Ceres::ceres)</span><br></pre></td></tr></table></figure><p>创建了目标<code>Ceres::ceres</code>。</p><p>既然创建了目标，那说明是cmake的新使用方法就行：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">target_link_libraries</span>(my_app Ceres::ceres)</span><br></pre></td></tr></table></figure><h3 id="通用方法判断库是否提供导入目标"><a class="markdownIt-Anchor" href="#通用方法判断库是否提供导入目标"></a> 通用方法判断库是否提供导入目标</h3><p>从这个 Ceres 的例子中，我们可以总结出一些通用方法来判断任何库是否提供导入目标：</p><ol><li><strong>查看库的配置文件</strong>：<ul><li>寻找 <code>include($&#123;XXX_DIR&#125;/XXXTargets.cmake)</code> 这样的语句</li><li>寻找 <code>add_library(XXX::XXX IMPORTED)</code> 这样的语句</li><li>寻找 <code>set_target_properties(XXX::XXX ...)</code> 这样的语句</li></ul></li><li><strong>查看库变量的设置</strong>：<ul><li>如果看到 <code>set(XXX_LIBRARIES XXX::XXX)</code>，表明库提供了导入目标</li></ul></li></ol><p>如果是传统方式的话：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 传统方式 - 需要同时设置包含目录和链接库</span></span><br><span class="line"><span class="comment"># 例外，在ceres和opencv的cmake中都说明了不需要target_include_directories</span></span><br><span class="line"><span class="keyword">target_include_directories</span>(my_app PRIVATE <span class="variable">$&#123;OpenCV_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(my_app <span class="variable">$&#123;OpenCV_LIBS&#125;</span>)</span><br></pre></td></tr></table></figure><h2 id="5-补充小知识findpackage的查找顺序"><a class="markdownIt-Anchor" href="#5-补充小知识findpackage的查找顺序"></a> 5. 补充小知识：findpackage的查找顺序</h2><ol><li><strong>首先检查 Ceres_DIR 变量</strong><ul><li>如果设置了 Ceres_DIR，CMake 会直接查找该目录下的 CeresConfig.cmake</li><li>如果找到了有效的配置文件，查找过程立即结束</li></ul></li><li><strong>然后才会搜索 CMAKE_PREFIX_PATH</strong></li><li><strong>接着是 CMAKE_FRAMEWORK_PATH 和 CMAKE_APPBUNDLE_PATH</strong>（主要用于 macOS）</li><li><strong>最后是标准系统安装位置</strong><ul><li>/usr/local/lib/cmake/Ceres/</li><li>/usr/lib/cmake/Ceres/</li></ul></li></ol><h3 id="如果想要指定版本有两种方式"><a class="markdownIt-Anchor" href="#如果想要指定版本有两种方式"></a> 如果想要指定版本，有两种方式：</h3><ol><li><p><strong>使用 CMAKE_PREFIX_PATH（推荐）</strong></p><p>这是最通用、最干净的方式，尤其是当处理多个第三方库时：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在命令行设置</span></span><br><span class="line">cmake -DCMAKE_PREFIX_PATH=/home/xfy/3d/ceres/ceres-solver/build ..</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>或在 CMakeLists.txt 中：</p> <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 find_package 之前设置</span></span><br><span class="line"><span class="keyword">list</span>(APPEND CMAKE_PREFIX_PATH <span class="string">&quot;/home/xfy/3d/ceres/ceres-solver/build&quot;</span>)</span><br><span class="line"><span class="keyword">find_package</span>(Ceres REQUIRED)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>优点</strong>：</p><ul><li>可以一次性指定多个库的搜索路径</li><li>不需要为每个库单独设置变量</li><li>是 CMake 推荐的方式</li></ul></li><li><p><strong>使用特定库的 _DIR 变量</strong></p><p>对于单个库，直接设置其专用变量也很有效：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令行方式</span></span><br><span class="line">cmake -DCeres_DIR=/home/xfy/3d/ceres/ceres-solver/build/lib/cmake/Ceres ..</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>或在 CMakeLists.txt 中：</p> <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span>(Ceres_DIR <span class="string">&quot;/home/xfy/3d/ceres/ceres-solver/build/lib/cmake/Ceres&quot;</span>)</span><br><span class="line"><span class="keyword">find_package</span>(Ceres REQUIRED)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：Ceres_DIR 应该指向包含 CeresConfig.cmake 的确切目录，而不仅仅是构建目录。其中Ceres就是<strong>find_package名称</strong></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—find原理—以opencv为例子的实操</title>
      <link href="/2025/04/24/c4/"/>
      <url>/2025/04/24/c4/</url>
      
        <content type="html"><![CDATA[<ol><li><p><strong>更新 <code>locate</code> 数据库 (必做！)</strong></p><ul><li><strong>操作:</strong> 打开终端，运行 <code>sudo updatedb</code>。</li><li><strong>原因:</strong> 确保 <code>locate</code> 的数据库包含你刚刚安装的新库的文件信息。否则后续步骤可能什么也找不到。</li></ul></li><li><p><strong>初步定位：查找核心配置文件 (<code>Config.cmake</code>)</strong></p><ul><li><p><strong>操作:</strong> 运行以下命令</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">locate -i <span class="string">&#x27;config.cmake&#x27;</span> | grep -i <span class="string">&#x27;opencv&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果为</span></span><br><span class="line">~ ❯ locate -i <span class="string">&#x27;config.cmake&#x27;</span> | grep -i <span class="string">&#x27;opencv&#x27;</span></span><br><span class="line">/home/xfy/opencv_versions/4.5.5/build/3rdparty/ade/ade-0.1.1f/sources/ade/cmake/adeConfig.cmake.in</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/build/CPackConfig.cmake</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/build/CPackSourceConfig.cmake</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/build/OpenCVConfig.cmake</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/build/opencv_python_config.cmake</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/build/unix-install/OpenCVConfig.cmake</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/opencv/cmake/OpenCVGenConfig.cmake</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/opencv/cmake/OpenCVGenPkgconfig.cmake</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/opencv/cmake/templates/OpenCVConfig.cmake.in</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/opencv/samples/hal/c_hal/config.cmake</span><br><span class="line">/home/xfy/opencv_versions/4.5.5/opencv/samples/hal/slow_hal/config.cmake</span><br><span class="line">/usr/lib/x86_64-linux-gnu/cmake/opencv4/OpenCVConfig.cmake</span><br><span class="line">/usr/local/opencv/4.5.5/lib/cmake/opencv4/OpenCVConfig.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/build/3rdparty/ade/ade-0.1.1f/sources/ade/cmake/adeConfig.cmake.in</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/build/CPackConfig.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/build/CPackSourceConfig.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/build/OpenCVConfig.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/build/opencv_python_config.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/build/unix-install/OpenCVConfig.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/cmake/OpenCVGenConfig.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/cmake/OpenCVGenPkgconfig.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/cmake/templates/OpenCVConfig.cmake.in</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/samples/hal/c_hal/config.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/home/myslam/3d/opencv-4.2.0/samples/hal/slow_hal/config.cmake</span><br><span class="line">/var/lib/docker/overlay2/0809ea31aa8a06f4c911b20f04526b19005bfabdd262f23d6bb3a4ee464f4dbb/diff/usr/local/lib/cmake/opencv4/OpenCVConfig.cmake</span><br><span class="line">/var/lib/docker/overlay2/1f605c5b588ec93f0f1947a29092b374d5fd184eedbfea41eba42bc85f33b932/diff/usr/lib/x86_64-linux-gnu/cmake/opencv4/OpenCVConfig.cmake</span><br></pre></td></tr></table></figure><p>可以看到有很多，但是我知道我是安装到/usr/local/的所以看/usr/local/opencv/4.5.5/lib/cmake/opencv4/OpenCVConfig.cmake<br />这一个</p></li></ul></li><li><p><strong>确定 <code>find_package</code> 名称</strong></p><p>由OpenCVConfig.cmake可以知道这里的名称大小写是OpenCV，所以应该是find_package(OpenCV REQUIRED)</p><p>这里可以指定模块，也可以不指定，没有太大影响的。之前文章的例子里指定了模块的写法是find_package(OpenCV REQUIRED COMPONENTS core imgcodecs highgui)</p></li><li><p><strong>然后通过gedit或者vim等等查看这个文件</strong></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  The OpenCV CMake configuration file</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#             ** File generated automatically, do not modify **</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  Usage from an external project:</span></span><br><span class="line"><span class="comment">#    In your CMakeLists.txt, add these lines:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    find_package(OpenCV REQUIRED)</span></span><br><span class="line"><span class="comment">#    include_directories($&#123;OpenCV_INCLUDE_DIRS&#125;) # Not needed for CMake &gt;= 2.8.11</span></span><br><span class="line"><span class="comment">#    target_link_libraries(MY_TARGET_NAME $&#123;OpenCV_LIBS&#125;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    Or you can search for specific OpenCV modules:</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    find_package(OpenCV REQUIRED core videoio)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    You can also mark OpenCV components as optional:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#    find_package(OpenCV REQUIRED core OPTIONAL_COMPONENTS viz)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    If the module is found then OPENCV_&lt;MODULE&gt;_FOUND is set to TRUE.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    This file will define the following variables:</span></span><br><span class="line"><span class="comment">#      - OpenCV_LIBS                     : The list of all imported targets for OpenCV modules.</span></span><br><span class="line"><span class="comment">#      - OpenCV_INCLUDE_DIRS             : The OpenCV include directories.</span></span><br><span class="line"><span class="comment">#      - OpenCV_COMPUTE_CAPABILITIES     : The version of compute capability.</span></span><br><span class="line"><span class="comment">#      - OpenCV_ANDROID_NATIVE_API_LEVEL : Minimum required level of Android API.</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION                  : The version of this OpenCV build: &quot;4.5.5&quot;</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_MAJOR            : Major version part of OpenCV_VERSION: &quot;4&quot;</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_MINOR            : Minor version part of OpenCV_VERSION: &quot;5&quot;</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_PATCH            : Patch version part of OpenCV_VERSION: &quot;5&quot;</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_STATUS           : Development status of this build: &quot;&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    Advanced variables:</span></span><br><span class="line"><span class="comment">#      - OpenCV_SHARED                   : Use OpenCV as shared library</span></span><br><span class="line"><span class="comment">#      - OpenCV_INSTALL_PATH             : OpenCV location</span></span><br><span class="line"><span class="comment">#      - OpenCV_LIB_COMPONENTS           : Present OpenCV modules list</span></span><br><span class="line"><span class="comment">#      - OpenCV_USE_MANGLED_PATHS        : Mangled OpenCV path flag</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    Deprecated variables:</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_TWEAK            : Always &quot;0&quot;</span></span><br></pre></td></tr></table></figure><p>翻译一下</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ===================================================================================</span></span><br><span class="line"><span class="comment">#  OpenCV CMake 配置文件</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#             ** 文件自动生成，请勿修改 **</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  从外部项目使用：</span></span><br><span class="line"><span class="comment">#    在你的 CMakeLists.txt 中，添加这些行：</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    find_package(OpenCV REQUIRED)</span></span><br><span class="line"><span class="comment">#    include_directories($&#123;OpenCV_INCLUDE_DIRS&#125;) # 对于 CMake &gt;= 2.8.11 已不再需要</span></span><br><span class="line"><span class="comment">#    target_link_libraries(MY_TARGET_NAME $&#123;OpenCV_LIBS&#125;)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    或者你可以搜索特定的 OpenCV 模块：</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    find_package(OpenCV REQUIRED core videoio)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    你也可以将 OpenCV 组件标记为可选：</span></span><br><span class="line"><span class="comment">#    find_package(OpenCV REQUIRED core OPTIONAL_COMPONENTS viz)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    如果找到了模块，那么 OPENCV_&lt;MODULE&gt;_FOUND 会被设置为 TRUE。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    该文件将定义以下变量：</span></span><br><span class="line"><span class="comment">#      - OpenCV_LIBS                     : OpenCV 模块的所有导入目标 (imported targets) 的列表。</span></span><br><span class="line"><span class="comment">#      - OpenCV_INCLUDE_DIRS             : OpenCV 的包含目录。</span></span><br><span class="line"><span class="comment">#      - OpenCV_COMPUTE_CAPABILITIES     : 计算能力 (Compute Capability) 的版本。</span></span><br><span class="line"><span class="comment">#      - OpenCV_ANDROID_NATIVE_API_LEVEL : 最低要求的 Android API 级别。</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION                  : 此 OpenCV 构建的版本：&quot;4.5.5&quot;</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_MAJOR            : OpenCV_VERSION 的主版本号：&quot;4&quot;</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_MINOR            : OpenCV_VERSION 的次版本号：&quot;5&quot;</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_PATCH            : OpenCV_VERSION 的修订版本号：&quot;5&quot;</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_STATUS           : 此构建的开发状态：&quot;&quot;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    高级变量：</span></span><br><span class="line"><span class="comment">#      - OpenCV_SHARED                   : 将 OpenCV 作为共享库使用</span></span><br><span class="line"><span class="comment">#      - OpenCV_INSTALL_PATH             : OpenCV 的位置</span></span><br><span class="line"><span class="comment">#      - OpenCV_LIB_COMPONENTS           : 当前存在的 OpenCV 模块列表</span></span><br><span class="line"><span class="comment">#      - OpenCV_USE_MANGLED_PATHS        : Mangled OpenCV 路径标志</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    已弃用变量：</span></span><br><span class="line"><span class="comment">#      - OpenCV_VERSION_TWEAK            : 始终为 &quot;0&quot;</span></span><br></pre></td></tr></table></figure><p>可以看到这里说明了执行findpackage之后给哪些变量赋予了哪些值，也写了用法</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  从外部项目使用：</span></span><br><span class="line"><span class="comment">#    在你的 CMakeLists.txt 中，添加这些行：</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#    find_package(OpenCV REQUIRED)</span></span><br><span class="line"><span class="comment">#    include_directories($&#123;OpenCV_INCLUDE_DIRS&#125;) # 对于 CMake &gt;= 2.8.11 已不再需要</span></span><br><span class="line"><span class="comment">#    target_link_libraries(MY_TARGET_NAME $&#123;OpenCV_LIBS&#125;)</span></span><br></pre></td></tr></table></figure><p>这段注释虽然目的是指导用户，但它本身混合了新旧两种风格的痕迹，我们需要仔细解读：</p><ol><li><strong>旧方式 (Variable-Based) 的体现：</strong><ul><li><p><strong>明确的指令:</strong> 注释中明确给出了以下使用步骤：</p>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;OpenCV_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(MY_TARGET_NAME <span class="variable">$&#123;OpenCV_LIBS&#125;</span>)</span><br></pre></td></tr></table></figure></li><li><p>这是典型的旧式 CMake 用法。它依赖于 <code>find_package</code> 执行后设置的两个<strong>变量</strong>：</p><ul><li><code>$&#123;OpenCV_INCLUDE_DIRS&#125;</code>: 包含了需要添加到编译器搜索路径的头文件目录。你需要手动调用 <code>include_directories()</code> (或现代的 <code>target_include_directories()</code>) 来使用它。</li><li><code>$&#123;OpenCV_LIBS&#125;</code>: 包含了需要链接的库文件列表（可能是库文件的绝对路径，也可能在旧 CMake 中是链接器标志）。你需要手动将这个变量传递给 <code>target_link_libraries()</code>。</li></ul></li></ul></li><li><strong>新方式 (Target-Based) 的线索和提示：</strong><ul><li><p><strong>关键注释:</strong> <code>include_directories($&#123;OpenCV_INCLUDE_DIRS&#125;) # Not needed for CMake &gt;= 2.8.11</code></p><ul><li>这是<strong>最强烈的暗示</strong>。它告诉你，对于较新版本的 CMake (2.8.11 及以后，实际上现代 CMake 实践通常指 3.x 系列)，手动添加 <code>OpenCV_INCLUDE_DIRS</code> 是<strong>不必要</strong>的。为什么？因为现代 CMake 的核心是<strong>目标 (Target)</strong>。当你链接到一个设计良好的<strong>导入目标 (Imported Target)</strong> 时，这个目标本身就封装了它所需的包含目录、链接库、编译定义等信息。CMake 会自动将这些信息传递给链接它的目标。</li></ul></li><li><p><strong>变量 <code>OpenCV_LIBS</code> 的描述:</strong> <code>OpenCV_LIBS : The list of all **imported targets** for OpenCV modules.</code></p><ul><li>这一点非常重要！虽然旧方式的使用示例中是 <code>target_link_libraries(... $&#123;OpenCV_LIBS&#125;)</code>，但这里对 <code>OpenCV_LIBS</code> 变量内容的描述明确指出了它包含的是 <strong>“imported targets”</strong>。这意味着 <code>$&#123;OpenCV_LIBS&#125;</code> 变量里存放的不再仅仅是库文件名或路径，而是 CMake 能理解的、代表了 OpenCV 各个模块的<strong>目标名称</strong>列表（例如 <code>OpenCV::core</code>, <code>OpenCV::imgproc</code> 等）。</li></ul></li><li><p>结合以上两点，可以推断出新方式的用法（尽管这段注释没有直接写出来）</p>  <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED COMPONENTS core imgproc highgui) <span class="comment"># 假设需要这三个</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(MY_TARGET_NAME PRIVATE OpenCV::core OpenCV::imgproc OpenCV::highgui)</span><br><span class="line"></span><br><span class="line">这里<span class="keyword">find_package</span>可以不指定具体哪个模块而是用</span><br><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED)</span><br><span class="line">区别不大</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>推荐指定模块，不然就会把所有模块全都链接到项目上</span><br><span class="line"></span><br><span class="line">说是这样说，但是我指定模块运行失败，不知道是因为名字不对还是啥</span><br><span class="line"><span class="keyword">target_include_directories</span>(my_app PUBLIC <span class="keyword">include</span>)才成功的</span><br></pre></td></tr></table></figure></li></ul></li></ol></li></ol><h3 id="总结还是用文档里说的吧"><a class="markdownIt-Anchor" href="#总结还是用文档里说的吧"></a> 总结：还是用文档里说的吧</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  从外部项目使用：</span></span><br><span class="line"><span class="comment">#    在你的 CMakeLists.txt 中，添加这些行：</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;OpenCV_INCLUDE_DIRS&#125;</span>) <span class="comment"># 对于 CMake &gt;= 2.8.11 已不再需要</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(MY_TARGET_NAME <span class="variable">$&#123;OpenCV_LIBS&#125;</span>)</span><br><span class="line"></span><br><span class="line">其中<span class="keyword">include_directories</span>可有可无</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—find原理</title>
      <link href="/2025/04/24/c3/"/>
      <url>/2025/04/24/c3/</url>
      
        <content type="html"><![CDATA[<h1 id="如何在cmake中找到并链接新安装的库"><a class="markdownIt-Anchor" href="#如何在cmake中找到并链接新安装的库"></a> 如何在CMake中找到并链接新安装的库</h1><h2 id="目标"><a class="markdownIt-Anchor" href="#目标"></a> 目标</h2><p>在安装新库后，找出在CMake中<code>find_package</code>所需的<strong>精确包名</strong>（包括大小写），并了解如何正确链接该库（优先使用现代CMake目标）。</p><h2 id="操作步骤"><a class="markdownIt-Anchor" href="#操作步骤"></a> 操作步骤</h2><h3 id="1-更新locate数据库必做"><a class="markdownIt-Anchor" href="#1-更新locate数据库必做"></a> 1. 更新<code>locate</code>数据库（必做！）</h3><ul><li><strong>操作:</strong> 打开终端，运行<code>sudo updatedb</code></li><li><strong>原因:</strong> 确保<code>locate</code>的数据库包含你刚刚安装的新库的文件信息</li><li><strong>注意:</strong> 如果跳过此步骤，后续步骤可能找不到任何结果</li></ul><h3 id="2-初步定位查找核心配置文件configcmake"><a class="markdownIt-Anchor" href="#2-初步定位查找核心配置文件configcmake"></a> 2. 初步定位：查找核心配置文件（<code>Config.cmake</code>）</h3><ul><li><strong>操作:</strong> 运行以下命令（替换<code>库名关键词</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate -i <span class="string">&#x27;config.cmake&#x27;</span> | grep -i <span class="string">&#x27;库名关键词&#x27;</span></span><br></pre></td></tr></table></figure></li><li><strong>目的:</strong> 查找包含<code>config.cmake</code>（不区分大小写）且路径中包含指定库名关键词的文件</li><li><strong>分析结果:</strong> 注意文件路径，例如：<ul><li><code>/usr/lib/x86_64-linux-gnu/cmake/SomeLib/SomeLibConfig.cmake</code></li><li><code>/opt/my_libs/lib/cmake/somelib/somelib-config.cmake</code></li></ul></li></ul><h3 id="3-确定find_package名称"><a class="markdownIt-Anchor" href="#3-确定find_package名称"></a> 3. 确定<code>find_package</code>名称</h3><ul><li><strong>操作:</strong> 从上一步找到的配置文件路径中提取<strong>保留原始大小写的包名</strong></li><li><strong>提取方法:</strong> 包名通常位于<code>.../cmake/</code>目录之后，是<code>Config.cmake</code>文件或其所在目录的名称<ul><li>例如：<ul><li><code>/usr/lib/x86_64-linux-gnu/cmake/SomeLib/SomeLibConfig.cmake</code> → 包名为<code>SomeLib</code></li><li><code>/opt/my_libs/lib/cmake/somelib/somelib-config.cmake</code> → 包名为<code>somelib</code></li></ul></li></ul></li><li><strong>结果:</strong> 提取出的精确名称将用于<code>CMakeLists.txt</code>中的<code>find_package()</code></li></ul><h3 id="4-全面查找找到所有相关的cmake文件可选但推荐"><a class="markdownIt-Anchor" href="#4-全面查找找到所有相关的cmake文件可选但推荐"></a> 4. 全面查找：找到所有相关的<code>.cmake</code>文件（可选但推荐）</h3><ul><li><strong>操作:</strong> 运行以下命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate -i <span class="string">&#x27;库名关键词&#x27;</span> | grep -i <span class="string">&#x27;\.cmake$&#x27;</span></span><br></pre></td></tr></table></figure></li><li><strong>目的:</strong> 找到所有路径包含库名关键词且以<code>.cmake</code>结尾的文件</li><li><strong>用途:</strong> 这有助于了解整个CMake配置的结构</li></ul><h3 id="5-深入检查查看文件内容确认链接方式"><a class="markdownIt-Anchor" href="#5-深入检查查看文件内容确认链接方式"></a> 5. 深入检查：查看文件内容，确认链接方式</h3><ul><li><strong>操作:</strong><ul><li>用文本编辑器打开第2步找到的核心<code>Config.cmake</code>文件</li><li>检查是否通过<code>include()</code>命令包含了其他<code>.cmake</code>文件，如有则一并查看</li></ul></li><li><strong>检查要点:</strong><ul><li><strong>寻找导入目标:</strong> 搜索<code>add_library</code>关键字，寻找形如<code>add_library(Namespace::Target IMPORTED ...)</code>的行<ul><li>如找到，<strong>强烈建议</strong>使用现代CMake的链接方式：<code>target_link_libraries(... Namespace::Target)</code></li></ul></li><li><strong>寻找变量定义:</strong> 搜索<code>set(</code>命令，查找版本变量<code>$&#123;SomeLib_VERSION&#125;</code>或包含目录/库变量<code>$&#123;SomeLib_INCLUDE_DIRS&#125;</code>, <code>$&#123;SomeLib_LIBRARIES&#125;</code></li><li><strong>查看依赖:</strong> 注意是否有<code>find_dependency(...)</code>命令，了解库是否自动处理依赖</li><li><strong>阅读注释:</strong> 好的配置文件通常包含使用说明</li></ul></li></ul><h3 id="6-在cmakeliststxt中实践"><a class="markdownIt-Anchor" href="#6-在cmakeliststxt中实践"></a> 6. 在<code>CMakeLists.txt</code>中实践</h3><ul><li><strong>操作:</strong><ul><li>使用第3步确定的<strong>精确包名</strong>调用<code>find_package</code>:<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(SomeLib REQUIRED) <span class="comment"># 使用大小写正确的名字</span></span><br><span class="line"><span class="comment"># 或者，如果库支持组件：</span></span><br><span class="line"><span class="comment"># find_package(SomeLib REQUIRED COMPONENTS core gui)</span></span><br></pre></td></tr></table></figure></li><li><strong>优先使用导入目标</strong>（如果在第5步找到）:<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">target_link_libraries</span>(your_target PRIVATE SomeLib::core SomeLib::gui)</span><br></pre></td></tr></table></figure></li><li><strong>如果找不到导入目标</strong>（旧式库）:<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">target_include_directories</span>(your_target PRIVATE <span class="variable">$&#123;SomeLib_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(your_target PRIVATE <span class="variable">$&#123;SomeLib_LIBRARIES&#125;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="核心思想"><a class="markdownIt-Anchor" href="#核心思想"></a> 核心思想</h2><ol><li>先用<code>locate</code>定位关键的<code>*Config.cmake</code>文件，确定<code>find_package</code>的官方名称</li><li>检查配置文件内容，确认链接方式：<ul><li>现代方式：使用导入目标(<code>Namespace::Target</code>)</li><li>传统方式：使用包含目录和库变量</li></ul></li><li>在实际项目中正确使用找到的库</li></ol><blockquote><p><strong>提示：</strong> 虽然<code>locate</code>是方便的本地检查工具，但<strong>库的官方文档</strong>仍然是了解其CMake用法的最权威来源。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—CMake</title>
      <link href="/2025/04/24/c2/"/>
      <url>/2025/04/24/c2/</url>
      
        <content type="html"><![CDATA[<h2 id="1-最小可行的-cmakeliststxt"><a class="markdownIt-Anchor" href="#1-最小可行的-cmakeliststxt"></a> 1. <strong>最小可行的 CMakeLists.txt</strong></h2><p><strong>思考：</strong></p><p>我需要告诉 CMake 什么？</p><ul><li>它需要知道最低兼容的 CMake 版本是多少？（<code>cmake_minimum_required</code>）</li><li>我的项目叫什么名字？（<code>project</code>）</li><li>我想生成什么？（一个可执行文件？一个库？）（<code>add_executable</code> 或 <code>add_library</code>）</li><li>这个生成目标需要哪些源文件？（<code>add_executable</code> 或 <code>add_library</code> 的参数）</li></ul><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 指定 CMake 最低版本要求</span></span><br><span class="line"><span class="comment">#    Ubuntu 22.04 自带的 CMake 版本通常较高 (如 3.22+)，但设置一个稍低的版本（如 3.16）可以增加兼容性。</span></span><br><span class="line"><span class="comment">#    这确保了我们使用的 CMake 命令和特性在该版本及以上可用。</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 定义项目名称和语言</span></span><br><span class="line"><span class="comment">#    项目名称会用在一些默认变量和 IDE 中。</span></span><br><span class="line"><span class="comment">#    指定 CXX 表示这是一个 C++ 项目，CMake 会自动寻找并配置 C++ 编译器。</span></span><br><span class="line"><span class="keyword">project</span>(MyMinimalProject CXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 添加一个可执行文件目标</span></span><br><span class="line"><span class="comment">#    第一个参数 &quot;my_app&quot; 是你想要生成的可执行文件的名字。</span></span><br><span class="line"><span class="comment">#    后续参数是构成这个可执行文件的源文件列表。这里只有一个 main.cpp。</span></span><br><span class="line"><span class="keyword">add_executable</span>(my_app main.cpp)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>解释：</strong></p><ul><li><code>cmake_minimum_required(VERSION 3.16)</code>：告诉 CMake 使用至少 3.16 版本的语法和功能。如果系统上的 CMake 版本低于此，它会报错。</li><li><code>project(MyMinimalProject CXX)</code>：定义项目名为 <code>MyMinimalProject</code>，并声明主要语言是 C++ (<code>CXX</code>)。这会让 CMake 检查 C++ 编译器是否可用。</li><li><code>add_executable(my_app main.cpp)</code>：指示 CMake 创建一个名为 <code>my_app</code> 的可执行文件，该文件由 <code>main.cpp</code> 编译而来。</li></ul><p><strong>构建步骤：</strong></p><ol><li>打开终端，进入 <code>my_minimal_project</code> 目录。</li><li>创建构建目录并进入：<code>mkdir build &amp;&amp; cd build</code> (推荐将构建产物与源码分开)</li><li>运行 CMake 配置：<code>cmake ..</code> ( <code>..</code> 指向包含 <code>CMakeLists.txt</code> 的上级目录)</li><li>编译项目：<code>make</code> (或者 <code>cmake --build .</code>)</li><li>运行可执行文件：<code>./my_app</code></li></ol><h2 id="2-更多源文件的处理"><a class="markdownIt-Anchor" href="#2-更多源文件的处理"></a> 2. <strong>更多源文件的处理</strong></h2><p><strong>思考：</strong></p><ol><li><strong>如何告诉 <code>add_executable</code> 所有需要的 <code>.cpp</code> 文件？</strong><ul><li>直接在 <code>add_executable</code> 命令中列出所有 <code>.cpp</code> 文件？</li><li>用一个变量来存储源文件列表，然后传递给 <code>add_executable</code>？（更整洁）</li><li>让 CMake 自动查找目录下的 <code>.cpp</code> 文件？（<code>aux_source_directory</code> 或 <code>file(GLOB ...)</code>，<strong>不推荐</strong>用于源文件，因为新增/删除文件时 CMake 可能不会自动检测到变化）</li></ul></li><li><strong>如果源文件分散在不同目录（如 <code>src/</code>），CMake 如何找到它们？</strong><ul><li>在文件名中包含相对路径（例如 <code>src/main.cpp</code>）。</li></ul></li><li><strong>如果头文件放在单独的目录（如 <code>include/</code>），编译器如何找到它们？</strong><ul><li>需要告诉 CMake 头文件的搜索路径。（<code>target_include_directories</code>）</li></ul></li></ol><p><strong>代码示例：</strong></p><p>假设项目结构为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">my_multi_file_project/</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── include/</span><br><span class="line">│   └── helper.h</span><br><span class="line">└── src/</span><br><span class="line">    ├── main.cpp</span><br><span class="line">    └── helper.cpp</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>include/helper.h</code>:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> HELPER_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HELPER_H</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print_message</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// HELPER_H</span></span></span><br></pre></td></tr></table></figure><p><code>src/helper.cpp</code>:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;helper.h&quot;</span> <span class="comment">// 注意这里可以直接 include，因为我们会告诉 CMake 头文件路径</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print_message</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Message from helper!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>src/main.cpp</code>:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;helper.h&quot;</span> <span class="comment">// 包含我们自己的头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello from main!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="built_in">print_message</span>(); <span class="comment">// 调用来自 helper 的函数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>CMakeLists.txt</code>:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.16</span>)</span><br><span class="line"><span class="keyword">project</span>(MyMultiFileProject CXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 使用变量存储源文件列表 (推荐方式)</span></span><br><span class="line"><span class="comment">#    将所有需要编译的 .cpp 文件列在这里。使用相对路径。</span></span><br><span class="line"><span class="keyword">set</span>(SOURCES</span><br><span class="line">    src/main.cpp</span><br><span class="line">    src/helper.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 添加可执行文件目标，使用变量</span></span><br><span class="line"><span class="comment">#    将 $&#123;SOURCES&#125; 变量的内容展开作为源文件列表。</span></span><br><span class="line"><span class="keyword">add_executable</span>(my_app <span class="variable">$&#123;SOURCES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 指定头文件搜索路径</span></span><br><span class="line"><span class="comment">#    告诉 CMake，当编译 my_app 这个目标时，</span></span><br><span class="line"><span class="comment">#    应该到 &quot;include&quot; 目录下查找头文件 (#include &quot;...&quot;).</span></span><br><span class="line"><span class="comment">#    PUBLIC 意味着如果其他目标链接到 my_app，它们也会自动获得这个 include 目录。</span></span><br><span class="line"><span class="comment">#    对于可执行文件，PRIVATE 通常也足够。</span></span><br><span class="line"><span class="keyword">target_include_directories</span>(my_app PUBLIC <span class="keyword">include</span>)</span><br></pre></td></tr></table></figure><p><strong>解释：</strong></p><ul><li><code>set(SOURCES ...)</code>：创建了一个名为 <code>SOURCES</code> 的 CMake 变量，存储了所有 <code>.cpp</code> 文件的列表。这比在 <code>add_executable</code> 中写一长串文件名更清晰，易于维护。</li><li><code>add_executable(my_app $&#123;SOURCES&#125;)</code>：使用 <code>$&#123;VAR_NAME&#125;</code> 语法来引用变量 <code>SOURCES</code>。</li><li><code>target_include_directories(my_app PUBLIC include)</code>：这是关键一步。它告诉编译器在编译 <code>my_app</code> 的源文件时，去 <code>include</code> 目录下查找 <code>#include</code> 的头文件。没有这一行，<code>#include &quot;helper.h&quot;</code> 会失败。<code>PUBLIC</code> 关键字表示这个包含目录不仅 <code>my_app</code> 自己用，如果将来有其他 CMake 目标链接到 <code>my_app</code>，它们也会继承这个包含目录（对于可执行文件，通常用 <code>PRIVATE</code> 即可，表示仅 <code>my_app</code> 内部使用）。</li></ul><h2 id="3-第三方库如何使用以opencv为例"><a class="markdownIt-Anchor" href="#3-第三方库如何使用以opencv为例"></a> 3.  第三方库如何使用（以OpenCV为例）</h2><p><strong>思考：</strong></p><ol><li><strong>如何让 CMake 找到已安装的 OpenCV 库？</strong><ul><li>使用 <code>find_package</code> 命令。这是 CMake 查找外部库的标准方式。</li></ul></li><li><strong>我需要 OpenCV 的哪些部分（模块）？</strong><ul><li>OpenCV 是模块化的（如 <code>core</code>, <code>imgproc</code>, <code>highgui</code> 等）。明确指定需要的模块可以减少不必要的依赖和链接。</li><li><code>find_package</code> 允许通过 <code>COMPONENTS</code> 参数指定所需模块。</li></ul></li><li><strong><code>find_package</code> 找到库后，如何将它链接到我的目标（<code>my_app</code>）？</strong><ul><li>需要告诉 CMake 两件事：<ul><li>编译器在哪里找到 OpenCV 的头文件</li><li>链接器在哪里找到 OpenCV 的库文件并将它们链接到我的可执行文件</li></ul></li><li><strong>现代 CMake 方式（推荐）：</strong> 使用 <code>target_link_libraries</code> 配合 <code>find_package</code> 提供的 “Imported Target” (例如 <code>OpenCV::opencv_core</code>)。这种方式会自动处理头文件路径和库链接。</li><li><strong>旧式 CMake 方式（了解即可）：</strong> <code>find_package</code> 会设置一些变量（如 <code>OpenCV_INCLUDE_DIRS</code> 和 <code>OpenCV_LIBS</code>），然后手动使用 <code>target_include_directories</code> 和 <code>target_link_libraries</code>。</li></ul></li></ol><p><strong>代码示例：</strong></p><p>假设项目结构不变，我们修改 <code>main.cpp</code> 来使用 OpenCV。</p><p><code>src/main.cpp</code> (示例：读取并显示一张图片):</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;helper.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含 OpenCV 头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/imgcodecs.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Usage: &quot;</span> &lt;&lt; argv[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; &lt;Image_Path&gt;&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello from main!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="built_in">print_message</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取图片</span></span><br><span class="line">    cv::Mat image = cv::<span class="built_in">imread</span>(argv[<span class="number">1</span>], cv::IMREAD_COLOR);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (image.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Could not read the image: &quot;</span> &lt;&lt; argv[<span class="number">1</span>] &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示图片</span></span><br><span class="line">    cv::<span class="built_in">imshow</span>(<span class="string">&quot;Display window&quot;</span>, image);</span><br><span class="line">    <span class="type">int</span> k = cv::<span class="built_in">waitKey</span>(<span class="number">0</span>); <span class="comment">// 等待按键</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>CMakeLists.txt</code>:</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.16</span>)</span><br><span class="line"><span class="keyword">project</span>(MyOpenCVProject CXX)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(SOURCES</span><br><span class="line">    src/main.cpp</span><br><span class="line">    src/helper.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># --- OpenCV Integration ---</span></span><br><span class="line"><span class="comment"># 1. 查找 OpenCV 包</span></span><br><span class="line"><span class="comment">#    REQUIRED: 如果找不到 OpenCV，CMake 会报错停止。</span></span><br><span class="line"><span class="comment">#    COMPONENTS: 指定我们需要的模块。</span></span><br><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED COMPONENTS core imgcodecs highgui)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否成功找到 (可选，但推荐)</span></span><br><span class="line"><span class="keyword">if</span>(OpenCV_FOUND)</span><br><span class="line">    <span class="keyword">message</span>(STATUS <span class="string">&quot;Found OpenCV version: $&#123;OpenCV_VERSION&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">    <span class="keyword">message</span>(FATAL_ERROR <span class="string">&quot;OpenCV not found!&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"><span class="comment"># --- End OpenCV Integration ---</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(my_app <span class="variable">$&#123;SOURCES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_include_directories</span>(my_app PUBLIC <span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># --- Link OpenCV to the target ---</span></span><br><span class="line"><span class="comment"># 2. 将 OpenCV 链接到我们的可执行文件 (现代方式)</span></span><br><span class="line"><span class="comment">#    OpenCV 的 find_package 脚本会创建所谓的 &quot;Imported Targets&quot;。</span></span><br><span class="line"><span class="comment">#    通常格式是 `OpenCV::module_name` (例如 OpenCV::core, OpenCV::imgcodecs)。</span></span><br><span class="line"><span class="comment">#    链接这些 Imported Targets 会自动处理包含目录和库文件。</span></span><br><span class="line"><span class="comment">#    PRIVATE 表示链接的库仅 my_app 内部使用，不会传递给链接到 my_app 的其他目标。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推荐这样做，但我实际操作找不到</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(my_app PRIVATE</span><br><span class="line">    OpenCV::core</span><br><span class="line">    OpenCV::imgcodecs</span><br><span class="line">    OpenCV::highgui</span><br><span class="line">)</span><br><span class="line"><span class="comment"># 最后是通过这个成功运行的</span></span><br><span class="line"><span class="keyword">target_include_directories</span>(my_app PUBLIC <span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># --- End Link OpenCV ---</span></span><br></pre></td></tr></table></figure><p><strong>解释：</strong></p><ul><li><code>find_package(OpenCV REQUIRED COMPONENTS ...)</code>：指示 CMake 查找 OpenCV。<code>REQUIRED</code> 确保找不到时构建失败。<code>COMPONENTS</code> 列出了我们代码中实际用到的 OpenCV 模块 (<code>core</code> 对应 <code>cv::Mat</code>, <code>imgcodecs</code> 对应 <code>cv::imread</code>, <code>highgui</code> 对应 <code>cv::imshow</code>, <code>cv::waitKey</code>)。</li><li><code>message(STATUS ...)</code>：在 CMake 配置阶段打印信息，方便调试。</li><li><code>target_link_libraries(my_app PRIVATE OpenCV::core ...)</code>：这是最关键的一步。它将 <code>my_app</code> 链接到 <code>find_package</code> 找到的 OpenCV 模块。使用 <code>OpenCV::module_name</code> 这种 Imported Target 是现代 CMake 的推荐做法，它比旧方法更简洁、更健壮，CMake 会自动管理头文件路径 (<code>target_include_directories</code> 不需要再为 OpenCV 手动添加) 和库文件链接。</li></ul>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记—基础篇</title>
      <link href="/2025/04/24/c1/"/>
      <url>/2025/04/24/c1/</url>
      
        <content type="html"><![CDATA[<h1 id="c学习笔记基础篇"><a class="markdownIt-Anchor" href="#c学习笔记基础篇"></a> C++学习笔记—基础篇</h1><h2 id="1-安装最基础的编译环境"><a class="markdownIt-Anchor" href="#1-安装最基础的编译环境"></a> 1. 安装最基础的编译环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install build-essential</span><br></pre></td></tr></table></figure><p>验证有没有装好，输出版本信息即装好了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ --version</span><br><span class="line">make --version</span><br></pre></td></tr></table></figure><h2 id="2-第一个程序"><a class="markdownIt-Anchor" href="#2-第一个程序"></a> 2. 第一个程序</h2><p>使用任意的编辑器编写一个hello.cpp然后编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ hello.cpp -o hello</span><br></pre></td></tr></table></figure><ul><li><code>g++</code>: 调用 GNU C++ 编译器。</li><li><code>hello.cpp</code>: 你要编译的源文件。</li><li><code>o hello</code>: 这个选项告诉编译器，将生成的可执行文件命名为 <code>hello</code>。如果没有 <code>o</code> 选项，默认会生成一个名为 <code>a.out</code> 的文件。</li></ul><h2 id="3-使用-make-简化编译"><a class="markdownIt-Anchor" href="#3-使用-make-简化编译"></a> 3. <strong>使用 <code>make</code> 简化编译</strong></h2><p>如果项目比较复杂的话，只通过命令编译就会很长</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ main.cpp math_utils.cpp -o my_calc -Wall -Wextra -std=c++11</span><br></pre></td></tr></table></figure><p><code>make</code> 通过 <code>Makefile</code> 文件来解决手动编译的许多问题</p><p>创建一个 <code>Makefile</code> 文件然后通过 <code>make</code> 命令就可以自动的编译（过程省略）但是 <code>Makefile</code> 文件不是很好写</p><h2 id="4-使用-cmake"><a class="markdownIt-Anchor" href="#4-使用-cmake"></a> 4. <strong>使用 <code>CMake</code></strong></h2><p><code>CMake</code> 作为构建系统生成器，解决了 <code>make</code> 的许多局限性，尤其是在跨平台和管理复杂性方面。</p><ol><li><p><strong>创建 <code>CMakeLists.txt</code>:</strong> 在 <code>calculator</code> 目录下创建 <code>CMakeLists.txt</code> 文件</p> <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># CMake 最低版本要求</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目名称和语言</span></span><br><span class="line"><span class="keyword">project</span>(Calculator LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 C++ 标准</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD_REQUIRED <span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># (可选) 添加编译选项，会传递给编译器</span></span><br><span class="line"><span class="comment"># add_compile_options(-Wall -Wextra) # 或者更现代的方式如下：</span></span><br><span class="line"><span class="keyword">target_compile_options</span>(my_calc INTERFACE -Wall -Wextra) <span class="comment"># 应用于 my_calc 及其使用者</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可执行文件目标</span></span><br><span class="line"><span class="comment"># CMake 会自动分析 main.cpp 和 math_utils.cpp 之间的依赖</span></span><br><span class="line"><span class="comment"># 以及它们对 math_utils.h 的依赖</span></span><br><span class="line"><span class="keyword">add_executable</span>(my_calc main.cpp math_utils.cpp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果头文件在 include 目录:</span></span><br><span class="line"><span class="comment"># target_include_directories(my_calc PRIVATE $&#123;CMAKE_CURRENT_SOURCE_DIR&#125;/include)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>操作 (Out-of-Source Build):</strong></p><ul><li><p><strong>创建构建目录并进入:</strong></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br></pre></td></tr></table></figure></li><li><p>**运行 CMake (配置阶段)😗*CMake 会读取 <code>../CMakeLists.txt</code>，检测你的编译器，并生成一个 <code>Makefile</code> (或其他本地构建系统文件) 在 <code>build</code> 目录中。它会自动处理 <code>main.cpp</code> 对 <code>math_utils.h</code> 的依赖。</p><p>bash</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake ..</span><br></pre></td></tr></table></figure></li><li><p><strong>运行构建工具 (构建阶段):</strong><code>make</code> 会使用 CMake 生成的 <code>Makefile</code> 来编译项目。可执行文件 <code>my_calc</code> 会出现在 <code>build</code> 目录。</p><p>bash</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure></li><li><p><strong>运行:</strong></p><p>bash</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./my_calc</span><br></pre></td></tr></table></figure></li><li><p><strong>清理:</strong></p><ul><li>可以使用 <code>make clean</code> (由 CMake 生成的 <code>Makefile</code> 提供)。</li><li>或者更彻底地，删除整个 <code>build</code> 目录：<code>cd .. &amp;&amp; rm -rf build</code>。</li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git学习记录</title>
      <link href="/2025/04/22/git/"/>
      <url>/2025/04/22/git/</url>
      
        <content type="html"><![CDATA[<h1 id="git学习笔记"><a class="markdownIt-Anchor" href="#git学习笔记"></a> Git学习笔记</h1><hr /><h2 id="1-安装"><a class="markdownIt-Anchor" href="#1-安装"></a> 1. 安装</h2><p>在官方网站安装: <a href="https://git-scm.com/">https://git-scm.com/</a></p><hr /><h2 id="2-初始化配置"><a class="markdownIt-Anchor" href="#2-初始化配置"></a> 2. 初始化配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置全局用户名和邮箱</span></span><br><span class="line">git config --global user.name <span class="string">&quot;name&quot;</span></span><br><span class="line">git config --global user.email xxxx@gmail.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 凭证存储</span></span><br><span class="line"><span class="comment"># 第一次通过 HTTPS 方式 push 或 pull 时，Git 会要求输入用户名和密码</span></span><br><span class="line"><span class="comment"># （或 Personal Access Token）。操作成功后，&quot;store&quot; 会把凭证以明文格式写入文件</span></span><br><span class="line"><span class="comment"># 以后再访问同一个远程仓库时，Git 会自动读取凭证，不再重复询问</span></span><br><span class="line">git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置默认分支，现在推荐使用main</span></span><br><span class="line">git config --global init.defaultBranch main</span><br></pre></td></tr></table></figure><hr /><h2 id="3-创建一个新仓库"><a class="markdownIt-Anchor" href="#3-创建一个新仓库"></a> 3. 创建一个新仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 初始化本地仓库</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 克隆远程仓库</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;仓库URL&gt;</span><br></pre></td></tr></table></figure><hr /><h2 id="4-工作区域和文件状态"><a class="markdownIt-Anchor" href="#4-工作区域和文件状态"></a> 4. 工作区域和文件状态</h2><h3 id="git中的三种工作区域"><a class="markdownIt-Anchor" href="#git中的三种工作区域"></a> Git中的三种工作区域</h3><ol><li><p><strong>工作区</strong>(.git所在目录)</p><ul><li>在资源管理器中看到的目录</li></ul></li><li><p><strong>暂存区</strong>(.git/index)</p><ul><li>用于保存即将提交到Git仓库的修改内容</li></ul></li><li><p><strong>本地仓库</strong>(.git/objects)</p><ul><li>Git存储代码和版本信息的主要位置</li></ul></li></ol><p><img src="https://fyblog.oss-cn-shanghai.aliyuncs.com/blog/20250423151837456.png" alt="工作区域" /></p><h3 id="git中的四种文件状态"><a class="markdownIt-Anchor" href="#git中的四种文件状态"></a> Git中的四种文件状态</h3><p><img src="https://fyblog.oss-cn-shanghai.aliyuncs.com/blog/20250423153227238.png" alt="文件状态" /></p><hr /><h2 id="5-添加和提交文件"><a class="markdownIt-Anchor" href="#5-添加和提交文件"></a> 5. 添加和提交文件</h2><h3 id="git-status"><a class="markdownIt-Anchor" href="#git-status"></a> <code>git status</code></h3><p>查看仓库的状态</p><h3 id="git-add"><a class="markdownIt-Anchor" href="#git-add"></a> <code>git add</code></h3><p>将文件添加到暂存区</p><ul><li>可以使用通配符：<code>git add *.txt</code></li><li>也可以使用目录：<code>git add .</code></li></ul><h3 id="git-commit"><a class="markdownIt-Anchor" href="#git-commit"></a> <code>git commit</code></h3><p>提交到本地仓库</p><ul><li>只提交<strong>暂存区</strong>中的内容，不会提交<strong>工作区</strong>中的内容</li></ul><h3 id="git-log"><a class="markdownIt-Anchor" href="#git-log"></a> <code>git log</code></h3><p>查看仓库提交历史记录</p><ul><li>使用 <code>--oneline</code> 参数查看简洁的提交记录</li></ul><h3 id="git-ls-files"><a class="markdownIt-Anchor" href="#git-ls-files"></a> <code>git ls-files</code></h3><p>查看暂存区的内容</p><hr /><h2 id="6-git-reset回退版本"><a class="markdownIt-Anchor" href="#6-git-reset回退版本"></a> 6. git reset回退版本</h2><h3 id="git-reset的三种模式"><a class="markdownIt-Anchor" href="#git-reset的三种模式"></a> Git reset的三种模式</h3><ul><li><p><code>git reset --soft</code></p><ul><li>回退到某个版本，保留工作区和暂存区的所有内容</li></ul></li><li><p><code>git reset --hard</code></p><ul><li>回退到某个版本，丢弃工作区和暂存区的所有内容</li></ul></li><li><p><code>git reset --mixed</code> (默认参数)</p><ul><li>回退到某个版本，保留工作区的内容，丢弃暂存区的内容</li></ul></li></ul><p><img src="https://fyblog.oss-cn-shanghai.aliyuncs.com/blog/20250423155650856.png" alt="Git reset模式" /></p><hr /><h2 id="7-使用git-diff查看差异"><a class="markdownIt-Anchor" href="#7-使用git-diff查看差异"></a> 7. 使用git diff查看差异</h2><h3 id="git-diff"><a class="markdownIt-Anchor" href="#git-diff"></a> <code>git diff</code></h3><p>比较：<strong>工作区</strong> 🆚 <strong>暂存区</strong></p><h3 id="git-diff-head"><a class="markdownIt-Anchor" href="#git-diff-head"></a> <code>git diff HEAD</code></h3><p>比较：<strong>工作区 + 暂存区</strong> 🆚 <strong>本地仓库</strong></p><h3 id="git-diff-cached-git-diff-staged"><a class="markdownIt-Anchor" href="#git-diff-cached-git-diff-staged"></a> <code>git diff --cached</code> / <code>git diff --staged</code></h3><p>比较：<strong>暂存区</strong> 🆚 <strong>本地仓库</strong></p><h3 id="git-diff-commit_hash-commit_hash"><a class="markdownIt-Anchor" href="#git-diff-commit_hash-commit_hash"></a> <code>git diff &lt;commit_hash&gt; &lt;commit_hash&gt;</code></h3><h3 id="git-diff-head~-head"><a class="markdownIt-Anchor" href="#git-diff-head~-head"></a> <code>git diff HEAD~ HEAD</code></h3><p>比较两个**提交（commit）**之间的差异</p><h3 id="git-diff-branch_name-branch_name"><a class="markdownIt-Anchor" href="#git-diff-branch_name-branch_name"></a> <code>git diff &lt;branch_name&gt; &lt;branch_name&gt;</code></h3><p>比较两个<strong>分支</strong>之间的差异</p><hr /><h2 id="8-git-删除文件命令"><a class="markdownIt-Anchor" href="#8-git-删除文件命令"></a> 8. Git 删除文件命令</h2><h3 id="rm-file-git-add-file"><a class="markdownIt-Anchor" href="#rm-file-git-add-file"></a> <code>rm file; git add file</code></h3><ul><li>先从<strong>工作区</strong>删除文件</li><li>然后使用 <code>git add</code> 让 Git 追踪这次删除（即加入暂存区）</li></ul><h3 id="git-rm-file"><a class="markdownIt-Anchor" href="#git-rm-file"></a> <code>git rm &lt;file&gt;</code></h3><ul><li>同时从<strong>工作区</strong>和<strong>暂存区</strong>删除文件</li></ul><h3 id="git-rm-cached-file"><a class="markdownIt-Anchor" href="#git-rm-cached-file"></a> <code>git rm --cached &lt;file&gt;</code></h3><ul><li><strong>只从暂存区删除</strong>文件，但保留工作区中的文件（文件依然存在本地）</li></ul><h3 id="git-rm-r"><a class="markdownIt-Anchor" href="#git-rm-r"></a> <code>git rm -r *</code></h3><ul><li><strong>递归删除</strong>当前目录及子目录下的所有文件和文件夹</li></ul><blockquote><p><strong>提示</strong>：删除文件后记得使用 <code>git commit</code> 提交更改！</p></blockquote><hr /><h2 id="9-gitignore忽略文件"><a class="markdownIt-Anchor" href="#9-gitignore忽略文件"></a> 9. gitignore忽略文件</h2><h3 id="常见忽略文件列表"><a class="markdownIt-Anchor" href="#常见忽略文件列表"></a> 常见忽略文件列表</h3><ul><li>忽略日志文件和日志目录</li><li>忽略所有 <code>.class</code> 文件</li><li>忽略所有 <code>.o</code> 文件（编译生成的中间文件）</li><li>忽略所有 <code>.env</code> 文件（包含环境变量配置）</li><li>忽略所有 <code>.zip</code> 和 <code>.tar</code> 压缩包</li><li>忽略所有 <code>.pem</code> 文件（安全凭证）</li></ul><h3 id="一般应该忽略的文件类型"><a class="markdownIt-Anchor" href="#一般应该忽略的文件类型"></a> 一般应该忽略的文件类型</h3><ul><li><strong>系统或软件自动生成的文件</strong></li><li><strong>编译产生的中间文件和结果文件</strong></li><li><strong>运行时生成的日志、缓存、临时文件</strong></li><li><strong>涉及身份、密码、口令、秘钥等敏感信息的文件</strong></li></ul><h3 id="示例-gitignore-文件内容"><a class="markdownIt-Anchor" href="#示例-gitignore-文件内容"></a> 示例 <code>.gitignore</code> 文件内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 日志文件</span><br><span class="line">*.log</span><br><span class="line"></span><br><span class="line"># 编译输出</span><br><span class="line">*.class</span><br><span class="line">*.o</span><br><span class="line"></span><br><span class="line"># 环境变量</span><br><span class="line">.env</span><br><span class="line"></span><br><span class="line"># 压缩包</span><br><span class="line">*.zip</span><br><span class="line">*.tar</span><br><span class="line"></span><br><span class="line"># 安全证书等敏感信息</span><br><span class="line">*.pem</span><br></pre></td></tr></table></figure><hr /><h2 id="10-ssh配置"><a class="markdownIt-Anchor" href="#10-ssh配置"></a> 10. SSH配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 回到根目录</span></span><br><span class="line"><span class="built_in">cd</span> ~ 或者 <span class="built_in">cd</span> 直接回车</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 进入ssh文件夹</span></span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 生成ssh密钥</span></span><br><span class="line">ssh-keygen -t rsa -b 4096</span><br><span class="line"><span class="comment"># -t代表协议为rsa</span></span><br><span class="line"><span class="comment"># -b代表生成大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 回车后提醒输入密钥名称</span></span><br><span class="line"><span class="comment"># 如果是第一次使用这个命令，直接回车就行了，使用默认的名称id_rsa</span></span><br><span class="line"><span class="comment"># 如果之前用过最好不要直接回车，会覆盖掉之前的密钥，且操作不可逆</span></span><br><span class="line"><span class="comment"># 输入一个新的名字例如test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5. 再回车后提醒输入密码，可以为空直接回车</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6. 可以看到本地生成了两个文件，一个密钥，一个密钥.pub</span></span><br><span class="line"><span class="comment"># 私钥文件谁都不要给，公钥打开复制到github</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7. 点开头像-设置-ssh和gpg密钥配置--new ssh key --然后起个名字将公钥粘贴进去</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 8. 如果是第一次配置默认的名称，到此就结束了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 9. 如果是自己命名的密钥</span></span><br><span class="line"><span class="comment"># 打开 ~/.ssh/config 文件，如果没有就创建，如果有就附加在后面</span></span><br><span class="line"><span class="comment"># 填入</span></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/test</span><br><span class="line"><span class="comment"># 意思是访问github时指定访问test密钥</span></span><br></pre></td></tr></table></figure><h3 id="ssh通过https端口连接github-解决网络问题"><a class="markdownIt-Anchor" href="#ssh通过https端口连接github-解决网络问题"></a> SSH通过HTTPS端口连接GitHub (解决网络问题)</h3><p>当无法通过SSH默认端口访问GitHub时，可以通过HTTPS端口(443)绕过：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑SSH配置文件</span></span><br><span class="line">nano ~/.ssh/config</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加以下配置</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName ssh.github.com</span><br><span class="line">    Port 443</span><br><span class="line">    User git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试连接</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># 成功会显示：Hi username! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 现在可以正常克隆仓库</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:Git-xfy/remote-repo.git</span><br></pre></td></tr></table></figure><p><strong>这种方法有效的原因</strong>:</p><ol><li>许多公司和网络环境会阻止SSH的标准端口(22)，但允许HTTPS端口(443)</li><li>这种方法仍使用SSH协议及其安全特性和密钥认证</li><li>通信通过通常允许的HTTPS端口传输，从而绕过防火墙限制</li></ol><hr /><h2 id="11-关联本地仓库和远程仓库"><a class="markdownIt-Anchor" href="#11-关联本地仓库和远程仓库"></a> 11. 关联本地仓库和远程仓库</h2><h3 id="git-remote-add-shortname-url"><a class="markdownIt-Anchor" href="#git-remote-add-shortname-url"></a> <code>git remote add &lt;shortname&gt; &lt;url&gt;</code></h3><ul><li>shortname - 起一个短名字，一般都是origin</li><li>url - 要关联的远程仓库地址</li></ul><h3 id="git-remote-v"><a class="markdownIt-Anchor" href="#git-remote-v"></a> <code>git remote -v</code></h3><p>查看当前仓库所对应的远程仓库的别名和地址</p><h3 id="git-branch-m-main"><a class="markdownIt-Anchor" href="#git-branch-m-main"></a> <code>git branch -M main</code></h3><p>将本地仓库当前分支命名为main</p><ul><li>GitHub默认的主分支名称是main，而本地分支有时候默认是master</li><li>如果已经设置过默认分支为main，则不需要此操作</li></ul><h3 id="git-push-u-origin-main"><a class="markdownIt-Anchor" href="#git-push-u-origin-main"></a> <code>git push -u origin main</code></h3><p>把本地分支和远程分支的main关联起来</p><ul><li>全称是<code>git push -u origin main:main</code></li><li>将本地的main分支（冒号前）与远程main分支（冒号后）关联起来</li><li>名称一样可以省略一个</li></ul><h3 id="简化命令"><a class="markdownIt-Anchor" href="#简化命令"></a> 简化命令</h3><ul><li>关联后可以直接使用 <code>git push</code></li><li>未关联则需使用 <code>git push &lt;remote_name&gt; &lt;local_branch_name&gt;:&lt;remote_branch_name&gt;</code></li></ul><h3 id="拉取命令"><a class="markdownIt-Anchor" href="#拉取命令"></a> 拉取命令</h3><ul><li>关联后：<code>git pull</code></li><li>未关联：<code>git pull &lt;remote_name&gt; &lt;local_branch_name&gt;:&lt;remote_branch_name&gt;</code></li><li>省略时默认拉取origin的main分支</li><li><code>git pull</code> 会自动合并，如有冲突需解决</li><li><code>git fetch</code> 是获取后不自动合并</li></ul><p><img src="https://fyblog.oss-cn-shanghai.aliyuncs.com/blog/20250423170207574.png" alt="拉取示意图" /></p><hr /><h2 id="12-分支的基本操作"><a class="markdownIt-Anchor" href="#12-分支的基本操作"></a> 12. 分支的基本操作</h2><h3 id="查看分支列表"><a class="markdownIt-Anchor" href="#查看分支列表"></a> 查看分支列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><h3 id="创建分支"><a class="markdownIt-Anchor" href="#创建分支"></a> 创建分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h3 id="切换分支"><a class="markdownIt-Anchor" href="#切换分支"></a> 切换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 传统方式</span></span><br><span class="line">git checkout &lt;branch-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推荐方式（Git 2.23+）</span></span><br><span class="line">git switch &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h3 id="合并分支"><a class="markdownIt-Anchor" href="#合并分支"></a> 合并分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h3 id="删除分支"><a class="markdownIt-Anchor" href="#删除分支"></a> 删除分支</h3><ul><li><strong>已合并的分支</strong>:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>未合并的分支</strong>:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -D &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示</strong>：分支操作前，建议先查看当前分支状态：<code>git status</code>。合并前确保工作区干净，删除前确认无误。</p></blockquote><hr /><h2 id="13-解决合并冲突"><a class="markdownIt-Anchor" href="#13-解决合并冲突"></a> 13. 解决合并冲突</h2><h3 id="冲突说明"><a class="markdownIt-Anchor" href="#冲突说明"></a> 冲突说明</h3><ul><li><strong>若两个分支修改了同一个文件的不同位置</strong> → Git会自动合并 ✓</li><li><strong>若两个分支修改了同一个文件的相同位置</strong> → 发生冲突 ✗</li></ul><h3 id="解决冲突步骤"><a class="markdownIt-Anchor" href="#解决冲突步骤"></a> 解决冲突步骤</h3><ol><li><strong>手动修改冲突文件</strong>，处理冲突内容</li><li><strong>添加到暂存区</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;file&gt;</span><br></pre></td></tr></table></figure></li><li><strong>提交更改</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;解决合并冲突&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="中止合并操作"><a class="markdownIt-Anchor" href="#中止合并操作"></a> 中止合并操作</h3><p>如果不想继续合并，可使用以下命令中止合并过程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge --abort</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示</strong>：合并冲突发生时，Git会标记冲突区域（如 <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code>, <code>=======</code>, <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>），你需要手动选择保留哪一部分内容。</p></blockquote><hr /><h2 id="14-回退和rebase"><a class="markdownIt-Anchor" href="#14-回退和rebase"></a> 14. 回退和Rebase</h2><h3 id="git-rebase变基"><a class="markdownIt-Anchor" href="#git-rebase变基"></a> Git Rebase（变基）</h3><h4 id="命令格式"><a class="markdownIt-Anchor" href="#命令格式"></a> 命令格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><h4 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h4><p>将当前分支的提交&quot;转移&quot;到目标分支的最新提交之后，<strong>重写提交历史</strong>。</p><h3 id="rebase-vs-merge-区别"><a class="markdownIt-Anchor" href="#rebase-vs-merge-区别"></a> Rebase vs Merge 区别</h3><table><thead><tr><th>比较项</th><th><code>git merge</code></th><th><code>git rebase</code></th></tr></thead><tbody><tr><td>历史记录</td><td>保留分支历史，产生合并提交</td><td>重写提交历史，线性、干净</td></tr><tr><td>可读性</td><td>可能出现分叉，历史分支交错</td><td>历史更线性，便于回顾</td></tr><tr><td>是否生成新提交</td><td>会生成一个合并提交</td><td>不会生成合并提交，重用原提交</td></tr><tr><td>冲突处理</td><td>只处理一次冲突</td><td>每次变基提交可能都需手动解决冲突</td></tr></tbody></table><h3 id="什么时候用什么"><a class="markdownIt-Anchor" href="#什么时候用什么"></a> 什么时候用什么？</h3><ul><li><p><strong>使用 <code>merge</code></strong>：</p><ul><li>团队协作中保留分支历史</li><li>避免修改提交历史</li><li>合并已推送的公共分支</li></ul></li><li><p><strong>使用 <code>rebase</code></strong>：</p><ul><li>自己在本地整理提交历史</li><li>保持提交历史简洁、线性</li><li>合并前清理开发分支历史，提升可读性</li></ul></li></ul><blockquote><p><strong>小提示</strong>：</p><ul><li><code>rebase</code> 更适合<strong>个人分支开发阶段</strong></li><li><code>merge</code> 更适合<strong>团队协作与主分支合并</strong></li><li>注意：不要对已经推送到远程的公共分支使用 <code>rebase</code>，可能导致历史冲突！</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
